/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ProcessStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProcessStats{}

// ProcessStats struct for ProcessStats
type ProcessStats struct {
	// Additional details about instance state
	Details NullableString `json:"details"`
	// Disk quota in bytes
	DiskQuota int32 `json:"disk_quota"`
	// File descriptor quota
	FdsQuota int32 `json:"fds_quota"`
	// Host running the instance
	Host string `json:"host"`
	// Instance index
	Index int32 `json:"index"`
	// Internal IP of the instance
	InstanceInternalIp *string `json:"instance_internal_ip,omitempty"`
	InstancePorts []ProcessStatsInstancePortsInner `json:"instance_ports"`
	// Isolation segment name
	IsolationSegment NullableString `json:"isolation_segment"`
	// Memory quota in bytes
	MemQuota int32 `json:"mem_quota"`
	// Whether the instance is routable
	Routable *bool `json:"routable,omitempty"`
	// Instance state
	State string `json:"state"`
	// Process type
	Type string `json:"type"`
	// Uptime in seconds
	Uptime int32 `json:"uptime"`
	Usage ProcessStatsUsage `json:"usage"`
}

type _ProcessStats ProcessStats

// NewProcessStats instantiates a new ProcessStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProcessStats(details NullableString, diskQuota int32, fdsQuota int32, host string, index int32, instancePorts []ProcessStatsInstancePortsInner, isolationSegment NullableString, memQuota int32, state string, type_ string, uptime int32, usage ProcessStatsUsage) *ProcessStats {
	this := ProcessStats{}
	this.Details = details
	this.DiskQuota = diskQuota
	this.FdsQuota = fdsQuota
	this.Host = host
	this.Index = index
	this.InstancePorts = instancePorts
	this.IsolationSegment = isolationSegment
	this.MemQuota = memQuota
	this.State = state
	this.Type = type_
	this.Uptime = uptime
	this.Usage = usage
	return &this
}

// NewProcessStatsWithDefaults instantiates a new ProcessStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProcessStatsWithDefaults() *ProcessStats {
	this := ProcessStats{}
	return &this
}

// GetDetails returns the Details field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ProcessStats) GetDetails() string {
	if o == nil || o.Details.Get() == nil {
		var ret string
		return ret
	}

	return *o.Details.Get()
}

// GetDetailsOk returns a tuple with the Details field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProcessStats) GetDetailsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Details.Get(), o.Details.IsSet()
}

// SetDetails sets field value
func (o *ProcessStats) SetDetails(v string) {
	o.Details.Set(&v)
}

// GetDiskQuota returns the DiskQuota field value
func (o *ProcessStats) GetDiskQuota() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DiskQuota
}

// GetDiskQuotaOk returns a tuple with the DiskQuota field value
// and a boolean to check if the value has been set.
func (o *ProcessStats) GetDiskQuotaOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DiskQuota, true
}

// SetDiskQuota sets field value
func (o *ProcessStats) SetDiskQuota(v int32) {
	o.DiskQuota = v
}

// GetFdsQuota returns the FdsQuota field value
func (o *ProcessStats) GetFdsQuota() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FdsQuota
}

// GetFdsQuotaOk returns a tuple with the FdsQuota field value
// and a boolean to check if the value has been set.
func (o *ProcessStats) GetFdsQuotaOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FdsQuota, true
}

// SetFdsQuota sets field value
func (o *ProcessStats) SetFdsQuota(v int32) {
	o.FdsQuota = v
}

// GetHost returns the Host field value
func (o *ProcessStats) GetHost() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Host
}

// GetHostOk returns a tuple with the Host field value
// and a boolean to check if the value has been set.
func (o *ProcessStats) GetHostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Host, true
}

// SetHost sets field value
func (o *ProcessStats) SetHost(v string) {
	o.Host = v
}

// GetIndex returns the Index field value
func (o *ProcessStats) GetIndex() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Index
}

// GetIndexOk returns a tuple with the Index field value
// and a boolean to check if the value has been set.
func (o *ProcessStats) GetIndexOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Index, true
}

// SetIndex sets field value
func (o *ProcessStats) SetIndex(v int32) {
	o.Index = v
}

// GetInstanceInternalIp returns the InstanceInternalIp field value if set, zero value otherwise.
func (o *ProcessStats) GetInstanceInternalIp() string {
	if o == nil || IsNil(o.InstanceInternalIp) {
		var ret string
		return ret
	}
	return *o.InstanceInternalIp
}

// GetInstanceInternalIpOk returns a tuple with the InstanceInternalIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessStats) GetInstanceInternalIpOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceInternalIp) {
		return nil, false
	}
	return o.InstanceInternalIp, true
}

// HasInstanceInternalIp returns a boolean if a field has been set.
func (o *ProcessStats) HasInstanceInternalIp() bool {
	if o != nil && !IsNil(o.InstanceInternalIp) {
		return true
	}

	return false
}

// SetInstanceInternalIp gets a reference to the given string and assigns it to the InstanceInternalIp field.
func (o *ProcessStats) SetInstanceInternalIp(v string) {
	o.InstanceInternalIp = &v
}

// GetInstancePorts returns the InstancePorts field value
func (o *ProcessStats) GetInstancePorts() []ProcessStatsInstancePortsInner {
	if o == nil {
		var ret []ProcessStatsInstancePortsInner
		return ret
	}

	return o.InstancePorts
}

// GetInstancePortsOk returns a tuple with the InstancePorts field value
// and a boolean to check if the value has been set.
func (o *ProcessStats) GetInstancePortsOk() ([]ProcessStatsInstancePortsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.InstancePorts, true
}

// SetInstancePorts sets field value
func (o *ProcessStats) SetInstancePorts(v []ProcessStatsInstancePortsInner) {
	o.InstancePorts = v
}

// GetIsolationSegment returns the IsolationSegment field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ProcessStats) GetIsolationSegment() string {
	if o == nil || o.IsolationSegment.Get() == nil {
		var ret string
		return ret
	}

	return *o.IsolationSegment.Get()
}

// GetIsolationSegmentOk returns a tuple with the IsolationSegment field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProcessStats) GetIsolationSegmentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsolationSegment.Get(), o.IsolationSegment.IsSet()
}

// SetIsolationSegment sets field value
func (o *ProcessStats) SetIsolationSegment(v string) {
	o.IsolationSegment.Set(&v)
}

// GetMemQuota returns the MemQuota field value
func (o *ProcessStats) GetMemQuota() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MemQuota
}

// GetMemQuotaOk returns a tuple with the MemQuota field value
// and a boolean to check if the value has been set.
func (o *ProcessStats) GetMemQuotaOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MemQuota, true
}

// SetMemQuota sets field value
func (o *ProcessStats) SetMemQuota(v int32) {
	o.MemQuota = v
}

// GetRoutable returns the Routable field value if set, zero value otherwise.
func (o *ProcessStats) GetRoutable() bool {
	if o == nil || IsNil(o.Routable) {
		var ret bool
		return ret
	}
	return *o.Routable
}

// GetRoutableOk returns a tuple with the Routable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessStats) GetRoutableOk() (*bool, bool) {
	if o == nil || IsNil(o.Routable) {
		return nil, false
	}
	return o.Routable, true
}

// HasRoutable returns a boolean if a field has been set.
func (o *ProcessStats) HasRoutable() bool {
	if o != nil && !IsNil(o.Routable) {
		return true
	}

	return false
}

// SetRoutable gets a reference to the given bool and assigns it to the Routable field.
func (o *ProcessStats) SetRoutable(v bool) {
	o.Routable = &v
}

// GetState returns the State field value
func (o *ProcessStats) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *ProcessStats) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *ProcessStats) SetState(v string) {
	o.State = v
}

// GetType returns the Type field value
func (o *ProcessStats) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ProcessStats) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ProcessStats) SetType(v string) {
	o.Type = v
}

// GetUptime returns the Uptime field value
func (o *ProcessStats) GetUptime() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Uptime
}

// GetUptimeOk returns a tuple with the Uptime field value
// and a boolean to check if the value has been set.
func (o *ProcessStats) GetUptimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uptime, true
}

// SetUptime sets field value
func (o *ProcessStats) SetUptime(v int32) {
	o.Uptime = v
}

// GetUsage returns the Usage field value
func (o *ProcessStats) GetUsage() ProcessStatsUsage {
	if o == nil {
		var ret ProcessStatsUsage
		return ret
	}

	return o.Usage
}

// GetUsageOk returns a tuple with the Usage field value
// and a boolean to check if the value has been set.
func (o *ProcessStats) GetUsageOk() (*ProcessStatsUsage, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Usage, true
}

// SetUsage sets field value
func (o *ProcessStats) SetUsage(v ProcessStatsUsage) {
	o.Usage = v
}

func (o ProcessStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProcessStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["details"] = o.Details.Get()
	toSerialize["disk_quota"] = o.DiskQuota
	toSerialize["fds_quota"] = o.FdsQuota
	toSerialize["host"] = o.Host
	toSerialize["index"] = o.Index
	if !IsNil(o.InstanceInternalIp) {
		toSerialize["instance_internal_ip"] = o.InstanceInternalIp
	}
	toSerialize["instance_ports"] = o.InstancePorts
	toSerialize["isolation_segment"] = o.IsolationSegment.Get()
	toSerialize["mem_quota"] = o.MemQuota
	if !IsNil(o.Routable) {
		toSerialize["routable"] = o.Routable
	}
	toSerialize["state"] = o.State
	toSerialize["type"] = o.Type
	toSerialize["uptime"] = o.Uptime
	toSerialize["usage"] = o.Usage
	return toSerialize, nil
}

func (o *ProcessStats) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"details",
		"disk_quota",
		"fds_quota",
		"host",
		"index",
		"instance_ports",
		"isolation_segment",
		"mem_quota",
		"state",
		"type",
		"uptime",
		"usage",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProcessStats := _ProcessStats{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProcessStats)

	if err != nil {
		return err
	}

	*o = ProcessStats(varProcessStats)

	return err
}

type NullableProcessStats struct {
	value *ProcessStats
	isSet bool
}

func (v NullableProcessStats) Get() *ProcessStats {
	return v.value
}

func (v *NullableProcessStats) Set(val *ProcessStats) {
	v.value = val
	v.isSet = true
}

func (v NullableProcessStats) IsSet() bool {
	return v.isSet
}

func (v *NullableProcessStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProcessStats(val *ProcessStats) *NullableProcessStats {
	return &NullableProcessStats{value: val, isSet: true}
}

func (v NullableProcessStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProcessStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


