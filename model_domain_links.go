/*
Cloud Controller API

API specification for managing environment variable groups in Cloud Controller.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the DomainLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DomainLinks{}

// DomainLinks struct for DomainLinks
type DomainLinks struct {
	Organization *Get200ResponseLinksLogCache `json:"organization,omitempty"`
	RouteReservations *Get200ResponseLinksLogCache `json:"route_reservations,omitempty"`
	Self *Get200ResponseLinksLogCache `json:"self,omitempty"`
	SharedOrganizations *Get200ResponseLinksLogCache `json:"shared_organizations,omitempty"`
}

// NewDomainLinks instantiates a new DomainLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDomainLinks() *DomainLinks {
	this := DomainLinks{}
	return &this
}

// NewDomainLinksWithDefaults instantiates a new DomainLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDomainLinksWithDefaults() *DomainLinks {
	this := DomainLinks{}
	return &this
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *DomainLinks) GetOrganization() Get200ResponseLinksLogCache {
	if o == nil || IsNil(o.Organization) {
		var ret Get200ResponseLinksLogCache
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainLinks) GetOrganizationOk() (*Get200ResponseLinksLogCache, bool) {
	if o == nil || IsNil(o.Organization) {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *DomainLinks) HasOrganization() bool {
	if o != nil && !IsNil(o.Organization) {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given Get200ResponseLinksLogCache and assigns it to the Organization field.
func (o *DomainLinks) SetOrganization(v Get200ResponseLinksLogCache) {
	o.Organization = &v
}

// GetRouteReservations returns the RouteReservations field value if set, zero value otherwise.
func (o *DomainLinks) GetRouteReservations() Get200ResponseLinksLogCache {
	if o == nil || IsNil(o.RouteReservations) {
		var ret Get200ResponseLinksLogCache
		return ret
	}
	return *o.RouteReservations
}

// GetRouteReservationsOk returns a tuple with the RouteReservations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainLinks) GetRouteReservationsOk() (*Get200ResponseLinksLogCache, bool) {
	if o == nil || IsNil(o.RouteReservations) {
		return nil, false
	}
	return o.RouteReservations, true
}

// HasRouteReservations returns a boolean if a field has been set.
func (o *DomainLinks) HasRouteReservations() bool {
	if o != nil && !IsNil(o.RouteReservations) {
		return true
	}

	return false
}

// SetRouteReservations gets a reference to the given Get200ResponseLinksLogCache and assigns it to the RouteReservations field.
func (o *DomainLinks) SetRouteReservations(v Get200ResponseLinksLogCache) {
	o.RouteReservations = &v
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *DomainLinks) GetSelf() Get200ResponseLinksLogCache {
	if o == nil || IsNil(o.Self) {
		var ret Get200ResponseLinksLogCache
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainLinks) GetSelfOk() (*Get200ResponseLinksLogCache, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *DomainLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given Get200ResponseLinksLogCache and assigns it to the Self field.
func (o *DomainLinks) SetSelf(v Get200ResponseLinksLogCache) {
	o.Self = &v
}

// GetSharedOrganizations returns the SharedOrganizations field value if set, zero value otherwise.
func (o *DomainLinks) GetSharedOrganizations() Get200ResponseLinksLogCache {
	if o == nil || IsNil(o.SharedOrganizations) {
		var ret Get200ResponseLinksLogCache
		return ret
	}
	return *o.SharedOrganizations
}

// GetSharedOrganizationsOk returns a tuple with the SharedOrganizations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainLinks) GetSharedOrganizationsOk() (*Get200ResponseLinksLogCache, bool) {
	if o == nil || IsNil(o.SharedOrganizations) {
		return nil, false
	}
	return o.SharedOrganizations, true
}

// HasSharedOrganizations returns a boolean if a field has been set.
func (o *DomainLinks) HasSharedOrganizations() bool {
	if o != nil && !IsNil(o.SharedOrganizations) {
		return true
	}

	return false
}

// SetSharedOrganizations gets a reference to the given Get200ResponseLinksLogCache and assigns it to the SharedOrganizations field.
func (o *DomainLinks) SetSharedOrganizations(v Get200ResponseLinksLogCache) {
	o.SharedOrganizations = &v
}

func (o DomainLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DomainLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Organization) {
		toSerialize["organization"] = o.Organization
	}
	if !IsNil(o.RouteReservations) {
		toSerialize["route_reservations"] = o.RouteReservations
	}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}
	if !IsNil(o.SharedOrganizations) {
		toSerialize["shared_organizations"] = o.SharedOrganizations
	}
	return toSerialize, nil
}

type NullableDomainLinks struct {
	value *DomainLinks
	isSet bool
}

func (v NullableDomainLinks) Get() *DomainLinks {
	return v.value
}

func (v *NullableDomainLinks) Set(val *DomainLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableDomainLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableDomainLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDomainLinks(val *DomainLinks) *NullableDomainLinks {
	return &NullableDomainLinks{value: val, isSet: true}
}

func (v NullableDomainLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDomainLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


