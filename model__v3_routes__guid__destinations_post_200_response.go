/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the V3RoutesGuidDestinationsPost200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V3RoutesGuidDestinationsPost200Response{}

// V3RoutesGuidDestinationsPost200Response struct for V3RoutesGuidDestinationsPost200Response
type V3RoutesGuidDestinationsPost200Response struct {
	Destinations []Destination `json:"destinations,omitempty"`
}

// NewV3RoutesGuidDestinationsPost200Response instantiates a new V3RoutesGuidDestinationsPost200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV3RoutesGuidDestinationsPost200Response() *V3RoutesGuidDestinationsPost200Response {
	this := V3RoutesGuidDestinationsPost200Response{}
	return &this
}

// NewV3RoutesGuidDestinationsPost200ResponseWithDefaults instantiates a new V3RoutesGuidDestinationsPost200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV3RoutesGuidDestinationsPost200ResponseWithDefaults() *V3RoutesGuidDestinationsPost200Response {
	this := V3RoutesGuidDestinationsPost200Response{}
	return &this
}

// GetDestinations returns the Destinations field value if set, zero value otherwise.
func (o *V3RoutesGuidDestinationsPost200Response) GetDestinations() []Destination {
	if o == nil || IsNil(o.Destinations) {
		var ret []Destination
		return ret
	}
	return o.Destinations
}

// GetDestinationsOk returns a tuple with the Destinations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3RoutesGuidDestinationsPost200Response) GetDestinationsOk() ([]Destination, bool) {
	if o == nil || IsNil(o.Destinations) {
		return nil, false
	}
	return o.Destinations, true
}

// HasDestinations returns a boolean if a field has been set.
func (o *V3RoutesGuidDestinationsPost200Response) HasDestinations() bool {
	if o != nil && !IsNil(o.Destinations) {
		return true
	}

	return false
}

// SetDestinations gets a reference to the given []Destination and assigns it to the Destinations field.
func (o *V3RoutesGuidDestinationsPost200Response) SetDestinations(v []Destination) {
	o.Destinations = v
}

func (o V3RoutesGuidDestinationsPost200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V3RoutesGuidDestinationsPost200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Destinations) {
		toSerialize["destinations"] = o.Destinations
	}
	return toSerialize, nil
}

type NullableV3RoutesGuidDestinationsPost200Response struct {
	value *V3RoutesGuidDestinationsPost200Response
	isSet bool
}

func (v NullableV3RoutesGuidDestinationsPost200Response) Get() *V3RoutesGuidDestinationsPost200Response {
	return v.value
}

func (v *NullableV3RoutesGuidDestinationsPost200Response) Set(val *V3RoutesGuidDestinationsPost200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableV3RoutesGuidDestinationsPost200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableV3RoutesGuidDestinationsPost200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV3RoutesGuidDestinationsPost200Response(val *V3RoutesGuidDestinationsPost200Response) *NullableV3RoutesGuidDestinationsPost200Response {
	return &NullableV3RoutesGuidDestinationsPost200Response{value: val, isSet: true}
}

func (v NullableV3RoutesGuidDestinationsPost200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV3RoutesGuidDestinationsPost200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


