/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the DeploymentLinksCancel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeploymentLinksCancel{}

// DeploymentLinksCancel struct for DeploymentLinksCancel
type DeploymentLinksCancel struct {
	// URL to cancel the deployment
	Href *string `json:"href,omitempty"`
	Method *string `json:"method,omitempty"`
}

// NewDeploymentLinksCancel instantiates a new DeploymentLinksCancel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeploymentLinksCancel() *DeploymentLinksCancel {
	this := DeploymentLinksCancel{}
	return &this
}

// NewDeploymentLinksCancelWithDefaults instantiates a new DeploymentLinksCancel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentLinksCancelWithDefaults() *DeploymentLinksCancel {
	this := DeploymentLinksCancel{}
	return &this
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *DeploymentLinksCancel) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentLinksCancel) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *DeploymentLinksCancel) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *DeploymentLinksCancel) SetHref(v string) {
	o.Href = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *DeploymentLinksCancel) GetMethod() string {
	if o == nil || IsNil(o.Method) {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentLinksCancel) GetMethodOk() (*string, bool) {
	if o == nil || IsNil(o.Method) {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *DeploymentLinksCancel) HasMethod() bool {
	if o != nil && !IsNil(o.Method) {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *DeploymentLinksCancel) SetMethod(v string) {
	o.Method = &v
}

func (o DeploymentLinksCancel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeploymentLinksCancel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Method) {
		toSerialize["method"] = o.Method
	}
	return toSerialize, nil
}

type NullableDeploymentLinksCancel struct {
	value *DeploymentLinksCancel
	isSet bool
}

func (v NullableDeploymentLinksCancel) Get() *DeploymentLinksCancel {
	return v.value
}

func (v *NullableDeploymentLinksCancel) Set(val *DeploymentLinksCancel) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploymentLinksCancel) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploymentLinksCancel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploymentLinksCancel(val *DeploymentLinksCancel) *NullableDeploymentLinksCancel {
	return &NullableDeploymentLinksCancel{value: val, isSet: true}
}

func (v NullableDeploymentLinksCancel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploymentLinksCancel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


