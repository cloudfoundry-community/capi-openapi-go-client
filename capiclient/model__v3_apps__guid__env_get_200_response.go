/*
Cloud Controller API

API specification for managing environment variable groups in Cloud Controller.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the V3AppsGuidEnvGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V3AppsGuidEnvGet200Response{}

// V3AppsGuidEnvGet200Response struct for V3AppsGuidEnvGet200Response
type V3AppsGuidEnvGet200Response struct {
	ApplicationEnvJson *V3AppsGuidEnvGet200ResponseApplicationEnvJson `json:"application_env_json,omitempty"`
	EnvironmentVariables *map[string]string `json:"environment_variables,omitempty"`
	RunningEnvJson *map[string]string `json:"running_env_json,omitempty"`
	StagingEnvJson *map[string]string `json:"staging_env_json,omitempty"`
	SystemEnvJson *V3AppsGuidEnvGet200ResponseSystemEnvJson `json:"system_env_json,omitempty"`
}

// NewV3AppsGuidEnvGet200Response instantiates a new V3AppsGuidEnvGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV3AppsGuidEnvGet200Response() *V3AppsGuidEnvGet200Response {
	this := V3AppsGuidEnvGet200Response{}
	return &this
}

// NewV3AppsGuidEnvGet200ResponseWithDefaults instantiates a new V3AppsGuidEnvGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV3AppsGuidEnvGet200ResponseWithDefaults() *V3AppsGuidEnvGet200Response {
	this := V3AppsGuidEnvGet200Response{}
	return &this
}

// GetApplicationEnvJson returns the ApplicationEnvJson field value if set, zero value otherwise.
func (o *V3AppsGuidEnvGet200Response) GetApplicationEnvJson() V3AppsGuidEnvGet200ResponseApplicationEnvJson {
	if o == nil || IsNil(o.ApplicationEnvJson) {
		var ret V3AppsGuidEnvGet200ResponseApplicationEnvJson
		return ret
	}
	return *o.ApplicationEnvJson
}

// GetApplicationEnvJsonOk returns a tuple with the ApplicationEnvJson field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3AppsGuidEnvGet200Response) GetApplicationEnvJsonOk() (*V3AppsGuidEnvGet200ResponseApplicationEnvJson, bool) {
	if o == nil || IsNil(o.ApplicationEnvJson) {
		return nil, false
	}
	return o.ApplicationEnvJson, true
}

// HasApplicationEnvJson returns a boolean if a field has been set.
func (o *V3AppsGuidEnvGet200Response) HasApplicationEnvJson() bool {
	if o != nil && !IsNil(o.ApplicationEnvJson) {
		return true
	}

	return false
}

// SetApplicationEnvJson gets a reference to the given V3AppsGuidEnvGet200ResponseApplicationEnvJson and assigns it to the ApplicationEnvJson field.
func (o *V3AppsGuidEnvGet200Response) SetApplicationEnvJson(v V3AppsGuidEnvGet200ResponseApplicationEnvJson) {
	o.ApplicationEnvJson = &v
}

// GetEnvironmentVariables returns the EnvironmentVariables field value if set, zero value otherwise.
func (o *V3AppsGuidEnvGet200Response) GetEnvironmentVariables() map[string]string {
	if o == nil || IsNil(o.EnvironmentVariables) {
		var ret map[string]string
		return ret
	}
	return *o.EnvironmentVariables
}

// GetEnvironmentVariablesOk returns a tuple with the EnvironmentVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3AppsGuidEnvGet200Response) GetEnvironmentVariablesOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.EnvironmentVariables) {
		return nil, false
	}
	return o.EnvironmentVariables, true
}

// HasEnvironmentVariables returns a boolean if a field has been set.
func (o *V3AppsGuidEnvGet200Response) HasEnvironmentVariables() bool {
	if o != nil && !IsNil(o.EnvironmentVariables) {
		return true
	}

	return false
}

// SetEnvironmentVariables gets a reference to the given map[string]string and assigns it to the EnvironmentVariables field.
func (o *V3AppsGuidEnvGet200Response) SetEnvironmentVariables(v map[string]string) {
	o.EnvironmentVariables = &v
}

// GetRunningEnvJson returns the RunningEnvJson field value if set, zero value otherwise.
func (o *V3AppsGuidEnvGet200Response) GetRunningEnvJson() map[string]string {
	if o == nil || IsNil(o.RunningEnvJson) {
		var ret map[string]string
		return ret
	}
	return *o.RunningEnvJson
}

// GetRunningEnvJsonOk returns a tuple with the RunningEnvJson field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3AppsGuidEnvGet200Response) GetRunningEnvJsonOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.RunningEnvJson) {
		return nil, false
	}
	return o.RunningEnvJson, true
}

// HasRunningEnvJson returns a boolean if a field has been set.
func (o *V3AppsGuidEnvGet200Response) HasRunningEnvJson() bool {
	if o != nil && !IsNil(o.RunningEnvJson) {
		return true
	}

	return false
}

// SetRunningEnvJson gets a reference to the given map[string]string and assigns it to the RunningEnvJson field.
func (o *V3AppsGuidEnvGet200Response) SetRunningEnvJson(v map[string]string) {
	o.RunningEnvJson = &v
}

// GetStagingEnvJson returns the StagingEnvJson field value if set, zero value otherwise.
func (o *V3AppsGuidEnvGet200Response) GetStagingEnvJson() map[string]string {
	if o == nil || IsNil(o.StagingEnvJson) {
		var ret map[string]string
		return ret
	}
	return *o.StagingEnvJson
}

// GetStagingEnvJsonOk returns a tuple with the StagingEnvJson field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3AppsGuidEnvGet200Response) GetStagingEnvJsonOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.StagingEnvJson) {
		return nil, false
	}
	return o.StagingEnvJson, true
}

// HasStagingEnvJson returns a boolean if a field has been set.
func (o *V3AppsGuidEnvGet200Response) HasStagingEnvJson() bool {
	if o != nil && !IsNil(o.StagingEnvJson) {
		return true
	}

	return false
}

// SetStagingEnvJson gets a reference to the given map[string]string and assigns it to the StagingEnvJson field.
func (o *V3AppsGuidEnvGet200Response) SetStagingEnvJson(v map[string]string) {
	o.StagingEnvJson = &v
}

// GetSystemEnvJson returns the SystemEnvJson field value if set, zero value otherwise.
func (o *V3AppsGuidEnvGet200Response) GetSystemEnvJson() V3AppsGuidEnvGet200ResponseSystemEnvJson {
	if o == nil || IsNil(o.SystemEnvJson) {
		var ret V3AppsGuidEnvGet200ResponseSystemEnvJson
		return ret
	}
	return *o.SystemEnvJson
}

// GetSystemEnvJsonOk returns a tuple with the SystemEnvJson field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3AppsGuidEnvGet200Response) GetSystemEnvJsonOk() (*V3AppsGuidEnvGet200ResponseSystemEnvJson, bool) {
	if o == nil || IsNil(o.SystemEnvJson) {
		return nil, false
	}
	return o.SystemEnvJson, true
}

// HasSystemEnvJson returns a boolean if a field has been set.
func (o *V3AppsGuidEnvGet200Response) HasSystemEnvJson() bool {
	if o != nil && !IsNil(o.SystemEnvJson) {
		return true
	}

	return false
}

// SetSystemEnvJson gets a reference to the given V3AppsGuidEnvGet200ResponseSystemEnvJson and assigns it to the SystemEnvJson field.
func (o *V3AppsGuidEnvGet200Response) SetSystemEnvJson(v V3AppsGuidEnvGet200ResponseSystemEnvJson) {
	o.SystemEnvJson = &v
}

func (o V3AppsGuidEnvGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V3AppsGuidEnvGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApplicationEnvJson) {
		toSerialize["application_env_json"] = o.ApplicationEnvJson
	}
	if !IsNil(o.EnvironmentVariables) {
		toSerialize["environment_variables"] = o.EnvironmentVariables
	}
	if !IsNil(o.RunningEnvJson) {
		toSerialize["running_env_json"] = o.RunningEnvJson
	}
	if !IsNil(o.StagingEnvJson) {
		toSerialize["staging_env_json"] = o.StagingEnvJson
	}
	if !IsNil(o.SystemEnvJson) {
		toSerialize["system_env_json"] = o.SystemEnvJson
	}
	return toSerialize, nil
}

type NullableV3AppsGuidEnvGet200Response struct {
	value *V3AppsGuidEnvGet200Response
	isSet bool
}

func (v NullableV3AppsGuidEnvGet200Response) Get() *V3AppsGuidEnvGet200Response {
	return v.value
}

func (v *NullableV3AppsGuidEnvGet200Response) Set(val *V3AppsGuidEnvGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableV3AppsGuidEnvGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableV3AppsGuidEnvGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV3AppsGuidEnvGet200Response(val *V3AppsGuidEnvGet200Response) *NullableV3AppsGuidEnvGet200Response {
	return &NullableV3AppsGuidEnvGet200Response{value: val, isSet: true}
}

func (v NullableV3AppsGuidEnvGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV3AppsGuidEnvGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


