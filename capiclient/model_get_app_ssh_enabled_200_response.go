/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the GetAppSshEnabled200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAppSshEnabled200Response{}

// GetAppSshEnabled200Response struct for GetAppSshEnabled200Response
type GetAppSshEnabled200Response struct {
	Enabled *bool `json:"enabled,omitempty"`
	Reason NullableString `json:"reason,omitempty"`
}

// NewGetAppSshEnabled200Response instantiates a new GetAppSshEnabled200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAppSshEnabled200Response() *GetAppSshEnabled200Response {
	this := GetAppSshEnabled200Response{}
	return &this
}

// NewGetAppSshEnabled200ResponseWithDefaults instantiates a new GetAppSshEnabled200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAppSshEnabled200ResponseWithDefaults() *GetAppSshEnabled200Response {
	this := GetAppSshEnabled200Response{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *GetAppSshEnabled200Response) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAppSshEnabled200Response) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *GetAppSshEnabled200Response) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *GetAppSshEnabled200Response) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetReason returns the Reason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAppSshEnabled200Response) GetReason() string {
	if o == nil || IsNil(o.Reason.Get()) {
		var ret string
		return ret
	}
	return *o.Reason.Get()
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAppSshEnabled200Response) GetReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Reason.Get(), o.Reason.IsSet()
}

// HasReason returns a boolean if a field has been set.
func (o *GetAppSshEnabled200Response) HasReason() bool {
	if o != nil && o.Reason.IsSet() {
		return true
	}

	return false
}

// SetReason gets a reference to the given NullableString and assigns it to the Reason field.
func (o *GetAppSshEnabled200Response) SetReason(v string) {
	o.Reason.Set(&v)
}
// SetReasonNil sets the value for Reason to be an explicit nil
func (o *GetAppSshEnabled200Response) SetReasonNil() {
	o.Reason.Set(nil)
}

// UnsetReason ensures that no value is present for Reason, not even an explicit nil
func (o *GetAppSshEnabled200Response) UnsetReason() {
	o.Reason.Unset()
}

func (o GetAppSshEnabled200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAppSshEnabled200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if o.Reason.IsSet() {
		toSerialize["reason"] = o.Reason.Get()
	}
	return toSerialize, nil
}

type NullableGetAppSshEnabled200Response struct {
	value *GetAppSshEnabled200Response
	isSet bool
}

func (v NullableGetAppSshEnabled200Response) Get() *GetAppSshEnabled200Response {
	return v.value
}

func (v *NullableGetAppSshEnabled200Response) Set(val *GetAppSshEnabled200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAppSshEnabled200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAppSshEnabled200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAppSshEnabled200Response(val *GetAppSshEnabled200Response) *NullableGetAppSshEnabled200Response {
	return &NullableGetAppSshEnabled200Response{value: val, isSet: true}
}

func (v NullableGetAppSshEnabled200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAppSshEnabled200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


