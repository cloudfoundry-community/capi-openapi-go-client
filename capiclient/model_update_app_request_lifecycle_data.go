/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the UpdateAppRequestLifecycleData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateAppRequestLifecycleData{}

// UpdateAppRequestLifecycleData struct for UpdateAppRequestLifecycleData
type UpdateAppRequestLifecycleData struct {
	Buildpacks []string `json:"buildpacks,omitempty"`
	Stack *string `json:"stack,omitempty"`
}

// NewUpdateAppRequestLifecycleData instantiates a new UpdateAppRequestLifecycleData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAppRequestLifecycleData() *UpdateAppRequestLifecycleData {
	this := UpdateAppRequestLifecycleData{}
	return &this
}

// NewUpdateAppRequestLifecycleDataWithDefaults instantiates a new UpdateAppRequestLifecycleData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAppRequestLifecycleDataWithDefaults() *UpdateAppRequestLifecycleData {
	this := UpdateAppRequestLifecycleData{}
	return &this
}

// GetBuildpacks returns the Buildpacks field value if set, zero value otherwise.
func (o *UpdateAppRequestLifecycleData) GetBuildpacks() []string {
	if o == nil || IsNil(o.Buildpacks) {
		var ret []string
		return ret
	}
	return o.Buildpacks
}

// GetBuildpacksOk returns a tuple with the Buildpacks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAppRequestLifecycleData) GetBuildpacksOk() ([]string, bool) {
	if o == nil || IsNil(o.Buildpacks) {
		return nil, false
	}
	return o.Buildpacks, true
}

// HasBuildpacks returns a boolean if a field has been set.
func (o *UpdateAppRequestLifecycleData) HasBuildpacks() bool {
	if o != nil && !IsNil(o.Buildpacks) {
		return true
	}

	return false
}

// SetBuildpacks gets a reference to the given []string and assigns it to the Buildpacks field.
func (o *UpdateAppRequestLifecycleData) SetBuildpacks(v []string) {
	o.Buildpacks = v
}

// GetStack returns the Stack field value if set, zero value otherwise.
func (o *UpdateAppRequestLifecycleData) GetStack() string {
	if o == nil || IsNil(o.Stack) {
		var ret string
		return ret
	}
	return *o.Stack
}

// GetStackOk returns a tuple with the Stack field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAppRequestLifecycleData) GetStackOk() (*string, bool) {
	if o == nil || IsNil(o.Stack) {
		return nil, false
	}
	return o.Stack, true
}

// HasStack returns a boolean if a field has been set.
func (o *UpdateAppRequestLifecycleData) HasStack() bool {
	if o != nil && !IsNil(o.Stack) {
		return true
	}

	return false
}

// SetStack gets a reference to the given string and assigns it to the Stack field.
func (o *UpdateAppRequestLifecycleData) SetStack(v string) {
	o.Stack = &v
}

func (o UpdateAppRequestLifecycleData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateAppRequestLifecycleData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Buildpacks) {
		toSerialize["buildpacks"] = o.Buildpacks
	}
	if !IsNil(o.Stack) {
		toSerialize["stack"] = o.Stack
	}
	return toSerialize, nil
}

type NullableUpdateAppRequestLifecycleData struct {
	value *UpdateAppRequestLifecycleData
	isSet bool
}

func (v NullableUpdateAppRequestLifecycleData) Get() *UpdateAppRequestLifecycleData {
	return v.value
}

func (v *NullableUpdateAppRequestLifecycleData) Set(val *UpdateAppRequestLifecycleData) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAppRequestLifecycleData) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAppRequestLifecycleData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAppRequestLifecycleData(val *UpdateAppRequestLifecycleData) *NullableUpdateAppRequestLifecycleData {
	return &NullableUpdateAppRequestLifecycleData{value: val, isSet: true}
}

func (v NullableUpdateAppRequestLifecycleData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAppRequestLifecycleData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


