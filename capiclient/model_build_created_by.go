/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the BuildCreatedBy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BuildCreatedBy{}

// BuildCreatedBy struct for BuildCreatedBy
type BuildCreatedBy struct {
	// Email of the user
	Email *string `json:"email,omitempty"`
	// GUID of the user who created the build
	Guid *string `json:"guid,omitempty"`
	// Name of the user
	Name *string `json:"name,omitempty"`
}

// NewBuildCreatedBy instantiates a new BuildCreatedBy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBuildCreatedBy() *BuildCreatedBy {
	this := BuildCreatedBy{}
	return &this
}

// NewBuildCreatedByWithDefaults instantiates a new BuildCreatedBy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBuildCreatedByWithDefaults() *BuildCreatedBy {
	this := BuildCreatedBy{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *BuildCreatedBy) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildCreatedBy) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *BuildCreatedBy) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *BuildCreatedBy) SetEmail(v string) {
	o.Email = &v
}

// GetGuid returns the Guid field value if set, zero value otherwise.
func (o *BuildCreatedBy) GetGuid() string {
	if o == nil || IsNil(o.Guid) {
		var ret string
		return ret
	}
	return *o.Guid
}

// GetGuidOk returns a tuple with the Guid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildCreatedBy) GetGuidOk() (*string, bool) {
	if o == nil || IsNil(o.Guid) {
		return nil, false
	}
	return o.Guid, true
}

// HasGuid returns a boolean if a field has been set.
func (o *BuildCreatedBy) HasGuid() bool {
	if o != nil && !IsNil(o.Guid) {
		return true
	}

	return false
}

// SetGuid gets a reference to the given string and assigns it to the Guid field.
func (o *BuildCreatedBy) SetGuid(v string) {
	o.Guid = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BuildCreatedBy) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildCreatedBy) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BuildCreatedBy) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BuildCreatedBy) SetName(v string) {
	o.Name = &v
}

func (o BuildCreatedBy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BuildCreatedBy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Guid) {
		toSerialize["guid"] = o.Guid
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableBuildCreatedBy struct {
	value *BuildCreatedBy
	isSet bool
}

func (v NullableBuildCreatedBy) Get() *BuildCreatedBy {
	return v.value
}

func (v *NullableBuildCreatedBy) Set(val *BuildCreatedBy) {
	v.value = val
	v.isSet = true
}

func (v NullableBuildCreatedBy) IsSet() bool {
	return v.isSet
}

func (v *NullableBuildCreatedBy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBuildCreatedBy(val *BuildCreatedBy) *NullableBuildCreatedBy {
	return &NullableBuildCreatedBy{value: val, isSet: true}
}

func (v NullableBuildCreatedBy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBuildCreatedBy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


