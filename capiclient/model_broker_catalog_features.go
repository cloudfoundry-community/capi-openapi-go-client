/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the BrokerCatalogFeatures type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BrokerCatalogFeatures{}

// BrokerCatalogFeatures struct for BrokerCatalogFeatures
type BrokerCatalogFeatures struct {
	AllowContextUpdates *bool `json:"allow_context_updates,omitempty"`
	Bindable *bool `json:"bindable,omitempty"`
	BindingsRetrievable *bool `json:"bindings_retrievable,omitempty"`
	InstancesRetrievable *bool `json:"instances_retrievable,omitempty"`
	PlanUpdateable *bool `json:"plan_updateable,omitempty"`
}

// NewBrokerCatalogFeatures instantiates a new BrokerCatalogFeatures object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBrokerCatalogFeatures() *BrokerCatalogFeatures {
	this := BrokerCatalogFeatures{}
	return &this
}

// NewBrokerCatalogFeaturesWithDefaults instantiates a new BrokerCatalogFeatures object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBrokerCatalogFeaturesWithDefaults() *BrokerCatalogFeatures {
	this := BrokerCatalogFeatures{}
	return &this
}

// GetAllowContextUpdates returns the AllowContextUpdates field value if set, zero value otherwise.
func (o *BrokerCatalogFeatures) GetAllowContextUpdates() bool {
	if o == nil || IsNil(o.AllowContextUpdates) {
		var ret bool
		return ret
	}
	return *o.AllowContextUpdates
}

// GetAllowContextUpdatesOk returns a tuple with the AllowContextUpdates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrokerCatalogFeatures) GetAllowContextUpdatesOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowContextUpdates) {
		return nil, false
	}
	return o.AllowContextUpdates, true
}

// HasAllowContextUpdates returns a boolean if a field has been set.
func (o *BrokerCatalogFeatures) HasAllowContextUpdates() bool {
	if o != nil && !IsNil(o.AllowContextUpdates) {
		return true
	}

	return false
}

// SetAllowContextUpdates gets a reference to the given bool and assigns it to the AllowContextUpdates field.
func (o *BrokerCatalogFeatures) SetAllowContextUpdates(v bool) {
	o.AllowContextUpdates = &v
}

// GetBindable returns the Bindable field value if set, zero value otherwise.
func (o *BrokerCatalogFeatures) GetBindable() bool {
	if o == nil || IsNil(o.Bindable) {
		var ret bool
		return ret
	}
	return *o.Bindable
}

// GetBindableOk returns a tuple with the Bindable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrokerCatalogFeatures) GetBindableOk() (*bool, bool) {
	if o == nil || IsNil(o.Bindable) {
		return nil, false
	}
	return o.Bindable, true
}

// HasBindable returns a boolean if a field has been set.
func (o *BrokerCatalogFeatures) HasBindable() bool {
	if o != nil && !IsNil(o.Bindable) {
		return true
	}

	return false
}

// SetBindable gets a reference to the given bool and assigns it to the Bindable field.
func (o *BrokerCatalogFeatures) SetBindable(v bool) {
	o.Bindable = &v
}

// GetBindingsRetrievable returns the BindingsRetrievable field value if set, zero value otherwise.
func (o *BrokerCatalogFeatures) GetBindingsRetrievable() bool {
	if o == nil || IsNil(o.BindingsRetrievable) {
		var ret bool
		return ret
	}
	return *o.BindingsRetrievable
}

// GetBindingsRetrievableOk returns a tuple with the BindingsRetrievable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrokerCatalogFeatures) GetBindingsRetrievableOk() (*bool, bool) {
	if o == nil || IsNil(o.BindingsRetrievable) {
		return nil, false
	}
	return o.BindingsRetrievable, true
}

// HasBindingsRetrievable returns a boolean if a field has been set.
func (o *BrokerCatalogFeatures) HasBindingsRetrievable() bool {
	if o != nil && !IsNil(o.BindingsRetrievable) {
		return true
	}

	return false
}

// SetBindingsRetrievable gets a reference to the given bool and assigns it to the BindingsRetrievable field.
func (o *BrokerCatalogFeatures) SetBindingsRetrievable(v bool) {
	o.BindingsRetrievable = &v
}

// GetInstancesRetrievable returns the InstancesRetrievable field value if set, zero value otherwise.
func (o *BrokerCatalogFeatures) GetInstancesRetrievable() bool {
	if o == nil || IsNil(o.InstancesRetrievable) {
		var ret bool
		return ret
	}
	return *o.InstancesRetrievable
}

// GetInstancesRetrievableOk returns a tuple with the InstancesRetrievable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrokerCatalogFeatures) GetInstancesRetrievableOk() (*bool, bool) {
	if o == nil || IsNil(o.InstancesRetrievable) {
		return nil, false
	}
	return o.InstancesRetrievable, true
}

// HasInstancesRetrievable returns a boolean if a field has been set.
func (o *BrokerCatalogFeatures) HasInstancesRetrievable() bool {
	if o != nil && !IsNil(o.InstancesRetrievable) {
		return true
	}

	return false
}

// SetInstancesRetrievable gets a reference to the given bool and assigns it to the InstancesRetrievable field.
func (o *BrokerCatalogFeatures) SetInstancesRetrievable(v bool) {
	o.InstancesRetrievable = &v
}

// GetPlanUpdateable returns the PlanUpdateable field value if set, zero value otherwise.
func (o *BrokerCatalogFeatures) GetPlanUpdateable() bool {
	if o == nil || IsNil(o.PlanUpdateable) {
		var ret bool
		return ret
	}
	return *o.PlanUpdateable
}

// GetPlanUpdateableOk returns a tuple with the PlanUpdateable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrokerCatalogFeatures) GetPlanUpdateableOk() (*bool, bool) {
	if o == nil || IsNil(o.PlanUpdateable) {
		return nil, false
	}
	return o.PlanUpdateable, true
}

// HasPlanUpdateable returns a boolean if a field has been set.
func (o *BrokerCatalogFeatures) HasPlanUpdateable() bool {
	if o != nil && !IsNil(o.PlanUpdateable) {
		return true
	}

	return false
}

// SetPlanUpdateable gets a reference to the given bool and assigns it to the PlanUpdateable field.
func (o *BrokerCatalogFeatures) SetPlanUpdateable(v bool) {
	o.PlanUpdateable = &v
}

func (o BrokerCatalogFeatures) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BrokerCatalogFeatures) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowContextUpdates) {
		toSerialize["allow_context_updates"] = o.AllowContextUpdates
	}
	if !IsNil(o.Bindable) {
		toSerialize["bindable"] = o.Bindable
	}
	if !IsNil(o.BindingsRetrievable) {
		toSerialize["bindings_retrievable"] = o.BindingsRetrievable
	}
	if !IsNil(o.InstancesRetrievable) {
		toSerialize["instances_retrievable"] = o.InstancesRetrievable
	}
	if !IsNil(o.PlanUpdateable) {
		toSerialize["plan_updateable"] = o.PlanUpdateable
	}
	return toSerialize, nil
}

type NullableBrokerCatalogFeatures struct {
	value *BrokerCatalogFeatures
	isSet bool
}

func (v NullableBrokerCatalogFeatures) Get() *BrokerCatalogFeatures {
	return v.value
}

func (v *NullableBrokerCatalogFeatures) Set(val *BrokerCatalogFeatures) {
	v.value = val
	v.isSet = true
}

func (v NullableBrokerCatalogFeatures) IsSet() bool {
	return v.isSet
}

func (v *NullableBrokerCatalogFeatures) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBrokerCatalogFeatures(val *BrokerCatalogFeatures) *NullableBrokerCatalogFeatures {
	return &NullableBrokerCatalogFeatures{value: val, isSet: true}
}

func (v NullableBrokerCatalogFeatures) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBrokerCatalogFeatures) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


