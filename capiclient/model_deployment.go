/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the Deployment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Deployment{}

// Deployment struct for Deployment
type Deployment struct {
	// The time the deployment was created
	CreatedAt time.Time `json:"created_at"`
	Droplet DeploymentDroplet `json:"droplet"`
	// Unique identifier for the deployment
	Guid string `json:"guid"`
	Links DeploymentLinks `json:"links"`
	Metadata V3AppsGuidTasksPostRequestMetadata `json:"metadata"`
	// List of new processes created by this deployment
	NewProcesses []DeploymentNewProcessesInner `json:"new_processes"`
	Options *DeploymentOptions `json:"options,omitempty"`
	PreviousDroplet NullableDeploymentPreviousDroplet `json:"previous_droplet"`
	Relationships DeploymentRelationships `json:"relationships"`
	Revision NullableDeploymentRevision `json:"revision"`
	// Current state of the deployment
	State string `json:"state"`
	Status DeploymentStatus `json:"status"`
	// Deployment strategy being used
	Strategy string `json:"strategy"`
	// The time the deployment was last updated
	UpdatedAt time.Time `json:"updated_at"`
}

type _Deployment Deployment

// NewDeployment instantiates a new Deployment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeployment(createdAt time.Time, droplet DeploymentDroplet, guid string, links DeploymentLinks, metadata V3AppsGuidTasksPostRequestMetadata, newProcesses []DeploymentNewProcessesInner, previousDroplet NullableDeploymentPreviousDroplet, relationships DeploymentRelationships, revision NullableDeploymentRevision, state string, status DeploymentStatus, strategy string, updatedAt time.Time) *Deployment {
	this := Deployment{}
	this.CreatedAt = createdAt
	this.Droplet = droplet
	this.Guid = guid
	this.Links = links
	this.Metadata = metadata
	this.NewProcesses = newProcesses
	this.PreviousDroplet = previousDroplet
	this.Relationships = relationships
	this.Revision = revision
	this.State = state
	this.Status = status
	this.Strategy = strategy
	this.UpdatedAt = updatedAt
	return &this
}

// NewDeploymentWithDefaults instantiates a new Deployment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentWithDefaults() *Deployment {
	this := Deployment{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *Deployment) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Deployment) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetDroplet returns the Droplet field value
func (o *Deployment) GetDroplet() DeploymentDroplet {
	if o == nil {
		var ret DeploymentDroplet
		return ret
	}

	return o.Droplet
}

// GetDropletOk returns a tuple with the Droplet field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetDropletOk() (*DeploymentDroplet, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Droplet, true
}

// SetDroplet sets field value
func (o *Deployment) SetDroplet(v DeploymentDroplet) {
	o.Droplet = v
}

// GetGuid returns the Guid field value
func (o *Deployment) GetGuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Guid
}

// GetGuidOk returns a tuple with the Guid field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetGuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Guid, true
}

// SetGuid sets field value
func (o *Deployment) SetGuid(v string) {
	o.Guid = v
}

// GetLinks returns the Links field value
func (o *Deployment) GetLinks() DeploymentLinks {
	if o == nil {
		var ret DeploymentLinks
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetLinksOk() (*DeploymentLinks, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Links, true
}

// SetLinks sets field value
func (o *Deployment) SetLinks(v DeploymentLinks) {
	o.Links = v
}

// GetMetadata returns the Metadata field value
func (o *Deployment) GetMetadata() V3AppsGuidTasksPostRequestMetadata {
	if o == nil {
		var ret V3AppsGuidTasksPostRequestMetadata
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetMetadataOk() (*V3AppsGuidTasksPostRequestMetadata, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metadata, true
}

// SetMetadata sets field value
func (o *Deployment) SetMetadata(v V3AppsGuidTasksPostRequestMetadata) {
	o.Metadata = v
}

// GetNewProcesses returns the NewProcesses field value
func (o *Deployment) GetNewProcesses() []DeploymentNewProcessesInner {
	if o == nil {
		var ret []DeploymentNewProcessesInner
		return ret
	}

	return o.NewProcesses
}

// GetNewProcessesOk returns a tuple with the NewProcesses field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetNewProcessesOk() ([]DeploymentNewProcessesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.NewProcesses, true
}

// SetNewProcesses sets field value
func (o *Deployment) SetNewProcesses(v []DeploymentNewProcessesInner) {
	o.NewProcesses = v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *Deployment) GetOptions() DeploymentOptions {
	if o == nil || IsNil(o.Options) {
		var ret DeploymentOptions
		return ret
	}
	return *o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deployment) GetOptionsOk() (*DeploymentOptions, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *Deployment) HasOptions() bool {
	if o != nil && !IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given DeploymentOptions and assigns it to the Options field.
func (o *Deployment) SetOptions(v DeploymentOptions) {
	o.Options = &v
}

// GetPreviousDroplet returns the PreviousDroplet field value
// If the value is explicit nil, the zero value for DeploymentPreviousDroplet will be returned
func (o *Deployment) GetPreviousDroplet() DeploymentPreviousDroplet {
	if o == nil || o.PreviousDroplet.Get() == nil {
		var ret DeploymentPreviousDroplet
		return ret
	}

	return *o.PreviousDroplet.Get()
}

// GetPreviousDropletOk returns a tuple with the PreviousDroplet field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Deployment) GetPreviousDropletOk() (*DeploymentPreviousDroplet, bool) {
	if o == nil {
		return nil, false
	}
	return o.PreviousDroplet.Get(), o.PreviousDroplet.IsSet()
}

// SetPreviousDroplet sets field value
func (o *Deployment) SetPreviousDroplet(v DeploymentPreviousDroplet) {
	o.PreviousDroplet.Set(&v)
}

// GetRelationships returns the Relationships field value
func (o *Deployment) GetRelationships() DeploymentRelationships {
	if o == nil {
		var ret DeploymentRelationships
		return ret
	}

	return o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetRelationshipsOk() (*DeploymentRelationships, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Relationships, true
}

// SetRelationships sets field value
func (o *Deployment) SetRelationships(v DeploymentRelationships) {
	o.Relationships = v
}

// GetRevision returns the Revision field value
// If the value is explicit nil, the zero value for DeploymentRevision will be returned
func (o *Deployment) GetRevision() DeploymentRevision {
	if o == nil || o.Revision.Get() == nil {
		var ret DeploymentRevision
		return ret
	}

	return *o.Revision.Get()
}

// GetRevisionOk returns a tuple with the Revision field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Deployment) GetRevisionOk() (*DeploymentRevision, bool) {
	if o == nil {
		return nil, false
	}
	return o.Revision.Get(), o.Revision.IsSet()
}

// SetRevision sets field value
func (o *Deployment) SetRevision(v DeploymentRevision) {
	o.Revision.Set(&v)
}

// GetState returns the State field value
func (o *Deployment) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *Deployment) SetState(v string) {
	o.State = v
}

// GetStatus returns the Status field value
func (o *Deployment) GetStatus() DeploymentStatus {
	if o == nil {
		var ret DeploymentStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetStatusOk() (*DeploymentStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *Deployment) SetStatus(v DeploymentStatus) {
	o.Status = v
}

// GetStrategy returns the Strategy field value
func (o *Deployment) GetStrategy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Strategy
}

// GetStrategyOk returns a tuple with the Strategy field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetStrategyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Strategy, true
}

// SetStrategy sets field value
func (o *Deployment) SetStrategy(v string) {
	o.Strategy = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Deployment) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Deployment) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o Deployment) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Deployment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["droplet"] = o.Droplet
	toSerialize["guid"] = o.Guid
	toSerialize["links"] = o.Links
	toSerialize["metadata"] = o.Metadata
	toSerialize["new_processes"] = o.NewProcesses
	if !IsNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	toSerialize["previous_droplet"] = o.PreviousDroplet.Get()
	toSerialize["relationships"] = o.Relationships
	toSerialize["revision"] = o.Revision.Get()
	toSerialize["state"] = o.State
	toSerialize["status"] = o.Status
	toSerialize["strategy"] = o.Strategy
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *Deployment) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created_at",
		"droplet",
		"guid",
		"links",
		"metadata",
		"new_processes",
		"previous_droplet",
		"relationships",
		"revision",
		"state",
		"status",
		"strategy",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDeployment := _Deployment{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDeployment)

	if err != nil {
		return err
	}

	*o = Deployment(varDeployment)

	return err
}

type NullableDeployment struct {
	value *Deployment
	isSet bool
}

func (v NullableDeployment) Get() *Deployment {
	return v.value
}

func (v *NullableDeployment) Set(val *Deployment) {
	v.value = val
	v.isSet = true
}

func (v NullableDeployment) IsSet() bool {
	return v.isSet
}

func (v *NullableDeployment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeployment(val *Deployment) *NullableDeployment {
	return &NullableDeployment{value: val, isSet: true}
}

func (v NullableDeployment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeployment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


