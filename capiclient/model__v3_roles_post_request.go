/*
Cloud Controller API

API specification for managing environment variable groups in Cloud Controller.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the V3RolesPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V3RolesPostRequest{}

// V3RolesPostRequest struct for V3RolesPostRequest
type V3RolesPostRequest struct {
	Relationships *V3RolesPostRequestRelationships `json:"relationships,omitempty"`
	// Role to create, see valid role types
	Type *string `json:"type,omitempty"`
}

// NewV3RolesPostRequest instantiates a new V3RolesPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV3RolesPostRequest() *V3RolesPostRequest {
	this := V3RolesPostRequest{}
	return &this
}

// NewV3RolesPostRequestWithDefaults instantiates a new V3RolesPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV3RolesPostRequestWithDefaults() *V3RolesPostRequest {
	this := V3RolesPostRequest{}
	return &this
}

// GetRelationships returns the Relationships field value if set, zero value otherwise.
func (o *V3RolesPostRequest) GetRelationships() V3RolesPostRequestRelationships {
	if o == nil || IsNil(o.Relationships) {
		var ret V3RolesPostRequestRelationships
		return ret
	}
	return *o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3RolesPostRequest) GetRelationshipsOk() (*V3RolesPostRequestRelationships, bool) {
	if o == nil || IsNil(o.Relationships) {
		return nil, false
	}
	return o.Relationships, true
}

// HasRelationships returns a boolean if a field has been set.
func (o *V3RolesPostRequest) HasRelationships() bool {
	if o != nil && !IsNil(o.Relationships) {
		return true
	}

	return false
}

// SetRelationships gets a reference to the given V3RolesPostRequestRelationships and assigns it to the Relationships field.
func (o *V3RolesPostRequest) SetRelationships(v V3RolesPostRequestRelationships) {
	o.Relationships = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *V3RolesPostRequest) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3RolesPostRequest) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *V3RolesPostRequest) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *V3RolesPostRequest) SetType(v string) {
	o.Type = &v
}

func (o V3RolesPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V3RolesPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Relationships) {
		toSerialize["relationships"] = o.Relationships
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableV3RolesPostRequest struct {
	value *V3RolesPostRequest
	isSet bool
}

func (v NullableV3RolesPostRequest) Get() *V3RolesPostRequest {
	return v.value
}

func (v *NullableV3RolesPostRequest) Set(val *V3RolesPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV3RolesPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV3RolesPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV3RolesPostRequest(val *V3RolesPostRequest) *NullableV3RolesPostRequest {
	return &NullableV3RolesPostRequest{value: val, isSet: true}
}

func (v NullableV3RolesPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV3RolesPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


