/*
Cloud Controller API

API specification for managing environment variable groups in Cloud Controller.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the V3StacksPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V3StacksPostRequest{}

// V3StacksPostRequest struct for V3StacksPostRequest
type V3StacksPostRequest struct {
	// Description of the stack; must be no longer than 250 characters
	Description *string `json:"description,omitempty"`
	Metadata *V3AppsGuidTasksPostRequestMetadata `json:"metadata,omitempty"`
	// Name of the stack; must be unique and no longer than 250 characters
	Name string `json:"name"`
}

type _V3StacksPostRequest V3StacksPostRequest

// NewV3StacksPostRequest instantiates a new V3StacksPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV3StacksPostRequest(name string) *V3StacksPostRequest {
	this := V3StacksPostRequest{}
	this.Name = name
	return &this
}

// NewV3StacksPostRequestWithDefaults instantiates a new V3StacksPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV3StacksPostRequestWithDefaults() *V3StacksPostRequest {
	this := V3StacksPostRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *V3StacksPostRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3StacksPostRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *V3StacksPostRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *V3StacksPostRequest) SetDescription(v string) {
	o.Description = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *V3StacksPostRequest) GetMetadata() V3AppsGuidTasksPostRequestMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret V3AppsGuidTasksPostRequestMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3StacksPostRequest) GetMetadataOk() (*V3AppsGuidTasksPostRequestMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *V3StacksPostRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given V3AppsGuidTasksPostRequestMetadata and assigns it to the Metadata field.
func (o *V3StacksPostRequest) SetMetadata(v V3AppsGuidTasksPostRequestMetadata) {
	o.Metadata = &v
}

// GetName returns the Name field value
func (o *V3StacksPostRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *V3StacksPostRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *V3StacksPostRequest) SetName(v string) {
	o.Name = v
}

func (o V3StacksPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V3StacksPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

func (o *V3StacksPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV3StacksPostRequest := _V3StacksPostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varV3StacksPostRequest)

	if err != nil {
		return err
	}

	*o = V3StacksPostRequest(varV3StacksPostRequest)

	return err
}

type NullableV3StacksPostRequest struct {
	value *V3StacksPostRequest
	isSet bool
}

func (v NullableV3StacksPostRequest) Get() *V3StacksPostRequest {
	return v.value
}

func (v *NullableV3StacksPostRequest) Set(val *V3StacksPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV3StacksPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV3StacksPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV3StacksPostRequest(val *V3StacksPostRequest) *NullableV3StacksPostRequest {
	return &NullableV3StacksPostRequest{value: val, isSet: true}
}

func (v NullableV3StacksPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV3StacksPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


