/*
Cloud Controller API

API specification for managing environment variable groups in Cloud Controller.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the SpaceRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpaceRelationships{}

// SpaceRelationships struct for SpaceRelationships
type SpaceRelationships struct {
	Organization ToOneRelationship `json:"organization,omitempty"`
	Quota NullableSpaceRelationshipsQuota `json:"quota,omitempty"`
}

// NewSpaceRelationships instantiates a new SpaceRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpaceRelationships() *SpaceRelationships {
	this := SpaceRelationships{}
	return &this
}

// NewSpaceRelationshipsWithDefaults instantiates a new SpaceRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpaceRelationshipsWithDefaults() *SpaceRelationships {
	this := SpaceRelationships{}
	return &this
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *SpaceRelationships) GetOrganization() ToOneRelationship {
	if o == nil || IsNil(o.Organization) {
		var ret ToOneRelationship
		return ret
	}
	return o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpaceRelationships) GetOrganizationOk() (ToOneRelationship, bool) {
	if o == nil || IsNil(o.Organization) {
		return ToOneRelationship{}, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *SpaceRelationships) HasOrganization() bool {
	if o != nil && !IsNil(o.Organization) {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given ToOneRelationship and assigns it to the Organization field.
func (o *SpaceRelationships) SetOrganization(v ToOneRelationship) {
	o.Organization = v
}

// GetQuota returns the Quota field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SpaceRelationships) GetQuota() SpaceRelationshipsQuota {
	if o == nil || IsNil(o.Quota.Get()) {
		var ret SpaceRelationshipsQuota
		return ret
	}
	return *o.Quota.Get()
}

// GetQuotaOk returns a tuple with the Quota field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SpaceRelationships) GetQuotaOk() (*SpaceRelationshipsQuota, bool) {
	if o == nil {
		return nil, false
	}
	return o.Quota.Get(), o.Quota.IsSet()
}

// HasQuota returns a boolean if a field has been set.
func (o *SpaceRelationships) HasQuota() bool {
	if o != nil && o.Quota.IsSet() {
		return true
	}

	return false
}

// SetQuota gets a reference to the given NullableSpaceRelationshipsQuota and assigns it to the Quota field.
func (o *SpaceRelationships) SetQuota(v SpaceRelationshipsQuota) {
	o.Quota.Set(&v)
}
// SetQuotaNil sets the value for Quota to be an explicit nil
func (o *SpaceRelationships) SetQuotaNil() {
	o.Quota.Set(nil)
}

// UnsetQuota ensures that no value is present for Quota, not even an explicit nil
func (o *SpaceRelationships) UnsetQuota() {
	o.Quota.Unset()
}

func (o SpaceRelationships) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpaceRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Organization) {
		toSerialize["organization"] = o.Organization
	}
	if o.Quota.IsSet() {
		toSerialize["quota"] = o.Quota.Get()
	}
	return toSerialize, nil
}

type NullableSpaceRelationships struct {
	value *SpaceRelationships
	isSet bool
}

func (v NullableSpaceRelationships) Get() *SpaceRelationships {
	return v.value
}

func (v *NullableSpaceRelationships) Set(val *SpaceRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableSpaceRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableSpaceRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpaceRelationships(val *SpaceRelationships) *NullableSpaceRelationships {
	return &NullableSpaceRelationships{value: val, isSet: true}
}

func (v NullableSpaceRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpaceRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


