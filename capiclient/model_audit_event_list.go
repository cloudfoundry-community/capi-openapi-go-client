/*
Cloud Controller API

API specification for managing environment variable groups in Cloud Controller.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the AuditEventList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuditEventList{}

// AuditEventList struct for AuditEventList
type AuditEventList struct {
	Pagination *AuditEventListPagination `json:"pagination,omitempty"`
	Resources []AuditEvent `json:"resources,omitempty"`
}

// NewAuditEventList instantiates a new AuditEventList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuditEventList() *AuditEventList {
	this := AuditEventList{}
	return &this
}

// NewAuditEventListWithDefaults instantiates a new AuditEventList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuditEventListWithDefaults() *AuditEventList {
	this := AuditEventList{}
	return &this
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *AuditEventList) GetPagination() AuditEventListPagination {
	if o == nil || IsNil(o.Pagination) {
		var ret AuditEventListPagination
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditEventList) GetPaginationOk() (*AuditEventListPagination, bool) {
	if o == nil || IsNil(o.Pagination) {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *AuditEventList) HasPagination() bool {
	if o != nil && !IsNil(o.Pagination) {
		return true
	}

	return false
}

// SetPagination gets a reference to the given AuditEventListPagination and assigns it to the Pagination field.
func (o *AuditEventList) SetPagination(v AuditEventListPagination) {
	o.Pagination = &v
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *AuditEventList) GetResources() []AuditEvent {
	if o == nil || IsNil(o.Resources) {
		var ret []AuditEvent
		return ret
	}
	return o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditEventList) GetResourcesOk() ([]AuditEvent, bool) {
	if o == nil || IsNil(o.Resources) {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *AuditEventList) HasResources() bool {
	if o != nil && !IsNil(o.Resources) {
		return true
	}

	return false
}

// SetResources gets a reference to the given []AuditEvent and assigns it to the Resources field.
func (o *AuditEventList) SetResources(v []AuditEvent) {
	o.Resources = v
}

func (o AuditEventList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuditEventList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Pagination) {
		toSerialize["pagination"] = o.Pagination
	}
	if !IsNil(o.Resources) {
		toSerialize["resources"] = o.Resources
	}
	return toSerialize, nil
}

type NullableAuditEventList struct {
	value *AuditEventList
	isSet bool
}

func (v NullableAuditEventList) Get() *AuditEventList {
	return v.value
}

func (v *NullableAuditEventList) Set(val *AuditEventList) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditEventList) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditEventList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditEventList(val *AuditEventList) *NullableAuditEventList {
	return &NullableAuditEventList{value: val, isSet: true}
}

func (v NullableAuditEventList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditEventList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


