/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
	"time"
)

// checks if the Droplet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Droplet{}

// Droplet struct for Droplet
type Droplet struct {
	Buildpacks []Buildpack `json:"buildpacks,omitempty"`
	Checksum *DropletChecksum `json:"checksum,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	Error *string `json:"error,omitempty"`
	ExecutionMetadata *string `json:"execution_metadata,omitempty"`
	Guid *string `json:"guid,omitempty"`
	Image *string `json:"image,omitempty"`
	Lifecycle *DropletLifecycle `json:"lifecycle,omitempty"`
	Links *DropletLinks `json:"links,omitempty"`
	Metadata *V3DropletsGuidPatchRequestMetadata `json:"metadata,omitempty"`
	ProcessTypes *map[string]string `json:"process_types,omitempty"`
	Relationships *V3DropletsPostRequestRelationships `json:"relationships,omitempty"`
	Stack *string `json:"stack,omitempty"`
	State *string `json:"state,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// NewDroplet instantiates a new Droplet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDroplet() *Droplet {
	this := Droplet{}
	return &this
}

// NewDropletWithDefaults instantiates a new Droplet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDropletWithDefaults() *Droplet {
	this := Droplet{}
	return &this
}

// GetBuildpacks returns the Buildpacks field value if set, zero value otherwise.
func (o *Droplet) GetBuildpacks() []Buildpack {
	if o == nil || IsNil(o.Buildpacks) {
		var ret []Buildpack
		return ret
	}
	return o.Buildpacks
}

// GetBuildpacksOk returns a tuple with the Buildpacks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Droplet) GetBuildpacksOk() ([]Buildpack, bool) {
	if o == nil || IsNil(o.Buildpacks) {
		return nil, false
	}
	return o.Buildpacks, true
}

// HasBuildpacks returns a boolean if a field has been set.
func (o *Droplet) HasBuildpacks() bool {
	if o != nil && !IsNil(o.Buildpacks) {
		return true
	}

	return false
}

// SetBuildpacks gets a reference to the given []Buildpack and assigns it to the Buildpacks field.
func (o *Droplet) SetBuildpacks(v []Buildpack) {
	o.Buildpacks = v
}

// GetChecksum returns the Checksum field value if set, zero value otherwise.
func (o *Droplet) GetChecksum() DropletChecksum {
	if o == nil || IsNil(o.Checksum) {
		var ret DropletChecksum
		return ret
	}
	return *o.Checksum
}

// GetChecksumOk returns a tuple with the Checksum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Droplet) GetChecksumOk() (*DropletChecksum, bool) {
	if o == nil || IsNil(o.Checksum) {
		return nil, false
	}
	return o.Checksum, true
}

// HasChecksum returns a boolean if a field has been set.
func (o *Droplet) HasChecksum() bool {
	if o != nil && !IsNil(o.Checksum) {
		return true
	}

	return false
}

// SetChecksum gets a reference to the given DropletChecksum and assigns it to the Checksum field.
func (o *Droplet) SetChecksum(v DropletChecksum) {
	o.Checksum = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Droplet) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Droplet) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Droplet) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *Droplet) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *Droplet) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Droplet) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *Droplet) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *Droplet) SetError(v string) {
	o.Error = &v
}

// GetExecutionMetadata returns the ExecutionMetadata field value if set, zero value otherwise.
func (o *Droplet) GetExecutionMetadata() string {
	if o == nil || IsNil(o.ExecutionMetadata) {
		var ret string
		return ret
	}
	return *o.ExecutionMetadata
}

// GetExecutionMetadataOk returns a tuple with the ExecutionMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Droplet) GetExecutionMetadataOk() (*string, bool) {
	if o == nil || IsNil(o.ExecutionMetadata) {
		return nil, false
	}
	return o.ExecutionMetadata, true
}

// HasExecutionMetadata returns a boolean if a field has been set.
func (o *Droplet) HasExecutionMetadata() bool {
	if o != nil && !IsNil(o.ExecutionMetadata) {
		return true
	}

	return false
}

// SetExecutionMetadata gets a reference to the given string and assigns it to the ExecutionMetadata field.
func (o *Droplet) SetExecutionMetadata(v string) {
	o.ExecutionMetadata = &v
}

// GetGuid returns the Guid field value if set, zero value otherwise.
func (o *Droplet) GetGuid() string {
	if o == nil || IsNil(o.Guid) {
		var ret string
		return ret
	}
	return *o.Guid
}

// GetGuidOk returns a tuple with the Guid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Droplet) GetGuidOk() (*string, bool) {
	if o == nil || IsNil(o.Guid) {
		return nil, false
	}
	return o.Guid, true
}

// HasGuid returns a boolean if a field has been set.
func (o *Droplet) HasGuid() bool {
	if o != nil && !IsNil(o.Guid) {
		return true
	}

	return false
}

// SetGuid gets a reference to the given string and assigns it to the Guid field.
func (o *Droplet) SetGuid(v string) {
	o.Guid = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *Droplet) GetImage() string {
	if o == nil || IsNil(o.Image) {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Droplet) GetImageOk() (*string, bool) {
	if o == nil || IsNil(o.Image) {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *Droplet) HasImage() bool {
	if o != nil && !IsNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *Droplet) SetImage(v string) {
	o.Image = &v
}

// GetLifecycle returns the Lifecycle field value if set, zero value otherwise.
func (o *Droplet) GetLifecycle() DropletLifecycle {
	if o == nil || IsNil(o.Lifecycle) {
		var ret DropletLifecycle
		return ret
	}
	return *o.Lifecycle
}

// GetLifecycleOk returns a tuple with the Lifecycle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Droplet) GetLifecycleOk() (*DropletLifecycle, bool) {
	if o == nil || IsNil(o.Lifecycle) {
		return nil, false
	}
	return o.Lifecycle, true
}

// HasLifecycle returns a boolean if a field has been set.
func (o *Droplet) HasLifecycle() bool {
	if o != nil && !IsNil(o.Lifecycle) {
		return true
	}

	return false
}

// SetLifecycle gets a reference to the given DropletLifecycle and assigns it to the Lifecycle field.
func (o *Droplet) SetLifecycle(v DropletLifecycle) {
	o.Lifecycle = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *Droplet) GetLinks() DropletLinks {
	if o == nil || IsNil(o.Links) {
		var ret DropletLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Droplet) GetLinksOk() (*DropletLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *Droplet) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given DropletLinks and assigns it to the Links field.
func (o *Droplet) SetLinks(v DropletLinks) {
	o.Links = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *Droplet) GetMetadata() V3DropletsGuidPatchRequestMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret V3DropletsGuidPatchRequestMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Droplet) GetMetadataOk() (*V3DropletsGuidPatchRequestMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *Droplet) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given V3DropletsGuidPatchRequestMetadata and assigns it to the Metadata field.
func (o *Droplet) SetMetadata(v V3DropletsGuidPatchRequestMetadata) {
	o.Metadata = &v
}

// GetProcessTypes returns the ProcessTypes field value if set, zero value otherwise.
func (o *Droplet) GetProcessTypes() map[string]string {
	if o == nil || IsNil(o.ProcessTypes) {
		var ret map[string]string
		return ret
	}
	return *o.ProcessTypes
}

// GetProcessTypesOk returns a tuple with the ProcessTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Droplet) GetProcessTypesOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ProcessTypes) {
		return nil, false
	}
	return o.ProcessTypes, true
}

// HasProcessTypes returns a boolean if a field has been set.
func (o *Droplet) HasProcessTypes() bool {
	if o != nil && !IsNil(o.ProcessTypes) {
		return true
	}

	return false
}

// SetProcessTypes gets a reference to the given map[string]string and assigns it to the ProcessTypes field.
func (o *Droplet) SetProcessTypes(v map[string]string) {
	o.ProcessTypes = &v
}

// GetRelationships returns the Relationships field value if set, zero value otherwise.
func (o *Droplet) GetRelationships() V3DropletsPostRequestRelationships {
	if o == nil || IsNil(o.Relationships) {
		var ret V3DropletsPostRequestRelationships
		return ret
	}
	return *o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Droplet) GetRelationshipsOk() (*V3DropletsPostRequestRelationships, bool) {
	if o == nil || IsNil(o.Relationships) {
		return nil, false
	}
	return o.Relationships, true
}

// HasRelationships returns a boolean if a field has been set.
func (o *Droplet) HasRelationships() bool {
	if o != nil && !IsNil(o.Relationships) {
		return true
	}

	return false
}

// SetRelationships gets a reference to the given V3DropletsPostRequestRelationships and assigns it to the Relationships field.
func (o *Droplet) SetRelationships(v V3DropletsPostRequestRelationships) {
	o.Relationships = &v
}

// GetStack returns the Stack field value if set, zero value otherwise.
func (o *Droplet) GetStack() string {
	if o == nil || IsNil(o.Stack) {
		var ret string
		return ret
	}
	return *o.Stack
}

// GetStackOk returns a tuple with the Stack field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Droplet) GetStackOk() (*string, bool) {
	if o == nil || IsNil(o.Stack) {
		return nil, false
	}
	return o.Stack, true
}

// HasStack returns a boolean if a field has been set.
func (o *Droplet) HasStack() bool {
	if o != nil && !IsNil(o.Stack) {
		return true
	}

	return false
}

// SetStack gets a reference to the given string and assigns it to the Stack field.
func (o *Droplet) SetStack(v string) {
	o.Stack = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *Droplet) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Droplet) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *Droplet) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *Droplet) SetState(v string) {
	o.State = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *Droplet) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Droplet) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Droplet) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *Droplet) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o Droplet) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Droplet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Buildpacks) {
		toSerialize["buildpacks"] = o.Buildpacks
	}
	if !IsNil(o.Checksum) {
		toSerialize["checksum"] = o.Checksum
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.ExecutionMetadata) {
		toSerialize["execution_metadata"] = o.ExecutionMetadata
	}
	if !IsNil(o.Guid) {
		toSerialize["guid"] = o.Guid
	}
	if !IsNil(o.Image) {
		toSerialize["image"] = o.Image
	}
	if !IsNil(o.Lifecycle) {
		toSerialize["lifecycle"] = o.Lifecycle
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.ProcessTypes) {
		toSerialize["process_types"] = o.ProcessTypes
	}
	if !IsNil(o.Relationships) {
		toSerialize["relationships"] = o.Relationships
	}
	if !IsNil(o.Stack) {
		toSerialize["stack"] = o.Stack
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableDroplet struct {
	value *Droplet
	isSet bool
}

func (v NullableDroplet) Get() *Droplet {
	return v.value
}

func (v *NullableDroplet) Set(val *Droplet) {
	v.value = val
	v.isSet = true
}

func (v NullableDroplet) IsSet() bool {
	return v.isSet
}

func (v *NullableDroplet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDroplet(val *Droplet) *NullableDroplet {
	return &NullableDroplet{value: val, isSet: true}
}

func (v NullableDroplet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDroplet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


