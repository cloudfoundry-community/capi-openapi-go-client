/*
Cloud Controller API

API specification for managing environment variable groups in Cloud Controller.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the SpaceQuotaLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpaceQuotaLinks{}

// SpaceQuotaLinks struct for SpaceQuotaLinks
type SpaceQuotaLinks struct {
	Organization *string `json:"organization,omitempty"`
	Self *string `json:"self,omitempty"`
}

// NewSpaceQuotaLinks instantiates a new SpaceQuotaLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpaceQuotaLinks() *SpaceQuotaLinks {
	this := SpaceQuotaLinks{}
	return &this
}

// NewSpaceQuotaLinksWithDefaults instantiates a new SpaceQuotaLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpaceQuotaLinksWithDefaults() *SpaceQuotaLinks {
	this := SpaceQuotaLinks{}
	return &this
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *SpaceQuotaLinks) GetOrganization() string {
	if o == nil || IsNil(o.Organization) {
		var ret string
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpaceQuotaLinks) GetOrganizationOk() (*string, bool) {
	if o == nil || IsNil(o.Organization) {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *SpaceQuotaLinks) HasOrganization() bool {
	if o != nil && !IsNil(o.Organization) {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given string and assigns it to the Organization field.
func (o *SpaceQuotaLinks) SetOrganization(v string) {
	o.Organization = &v
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *SpaceQuotaLinks) GetSelf() string {
	if o == nil || IsNil(o.Self) {
		var ret string
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpaceQuotaLinks) GetSelfOk() (*string, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *SpaceQuotaLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given string and assigns it to the Self field.
func (o *SpaceQuotaLinks) SetSelf(v string) {
	o.Self = &v
}

func (o SpaceQuotaLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpaceQuotaLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Organization) {
		toSerialize["organization"] = o.Organization
	}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}
	return toSerialize, nil
}

type NullableSpaceQuotaLinks struct {
	value *SpaceQuotaLinks
	isSet bool
}

func (v NullableSpaceQuotaLinks) Get() *SpaceQuotaLinks {
	return v.value
}

func (v *NullableSpaceQuotaLinks) Set(val *SpaceQuotaLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableSpaceQuotaLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableSpaceQuotaLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpaceQuotaLinks(val *SpaceQuotaLinks) *NullableSpaceQuotaLinks {
	return &NullableSpaceQuotaLinks{value: val, isSet: true}
}

func (v NullableSpaceQuotaLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpaceQuotaLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


