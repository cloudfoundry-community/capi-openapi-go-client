/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
	"time"
)

// checks if the ServiceOffering type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceOffering{}

// ServiceOffering struct for ServiceOffering
type ServiceOffering struct {
	Available *bool `json:"available,omitempty"`
	BrokerCatalog *BrokerCatalog `json:"broker_catalog,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	Description *string `json:"description,omitempty"`
	DocumentationUrl *string `json:"documentation_url,omitempty"`
	Guid *string `json:"guid,omitempty"`
	Links *ServiceOfferingLinks `json:"links,omitempty"`
	Metadata *V3DropletsGuidPatchRequestMetadata `json:"metadata,omitempty"`
	Name *string `json:"name,omitempty"`
	Relationships *ServiceOfferingRelationships `json:"relationships,omitempty"`
	Requires []string `json:"requires,omitempty"`
	Shareable *bool `json:"shareable,omitempty"`
	Tags []string `json:"tags,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// NewServiceOffering instantiates a new ServiceOffering object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceOffering() *ServiceOffering {
	this := ServiceOffering{}
	return &this
}

// NewServiceOfferingWithDefaults instantiates a new ServiceOffering object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceOfferingWithDefaults() *ServiceOffering {
	this := ServiceOffering{}
	return &this
}

// GetAvailable returns the Available field value if set, zero value otherwise.
func (o *ServiceOffering) GetAvailable() bool {
	if o == nil || IsNil(o.Available) {
		var ret bool
		return ret
	}
	return *o.Available
}

// GetAvailableOk returns a tuple with the Available field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOffering) GetAvailableOk() (*bool, bool) {
	if o == nil || IsNil(o.Available) {
		return nil, false
	}
	return o.Available, true
}

// HasAvailable returns a boolean if a field has been set.
func (o *ServiceOffering) HasAvailable() bool {
	if o != nil && !IsNil(o.Available) {
		return true
	}

	return false
}

// SetAvailable gets a reference to the given bool and assigns it to the Available field.
func (o *ServiceOffering) SetAvailable(v bool) {
	o.Available = &v
}

// GetBrokerCatalog returns the BrokerCatalog field value if set, zero value otherwise.
func (o *ServiceOffering) GetBrokerCatalog() BrokerCatalog {
	if o == nil || IsNil(o.BrokerCatalog) {
		var ret BrokerCatalog
		return ret
	}
	return *o.BrokerCatalog
}

// GetBrokerCatalogOk returns a tuple with the BrokerCatalog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOffering) GetBrokerCatalogOk() (*BrokerCatalog, bool) {
	if o == nil || IsNil(o.BrokerCatalog) {
		return nil, false
	}
	return o.BrokerCatalog, true
}

// HasBrokerCatalog returns a boolean if a field has been set.
func (o *ServiceOffering) HasBrokerCatalog() bool {
	if o != nil && !IsNil(o.BrokerCatalog) {
		return true
	}

	return false
}

// SetBrokerCatalog gets a reference to the given BrokerCatalog and assigns it to the BrokerCatalog field.
func (o *ServiceOffering) SetBrokerCatalog(v BrokerCatalog) {
	o.BrokerCatalog = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ServiceOffering) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOffering) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ServiceOffering) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ServiceOffering) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ServiceOffering) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOffering) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ServiceOffering) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ServiceOffering) SetDescription(v string) {
	o.Description = &v
}

// GetDocumentationUrl returns the DocumentationUrl field value if set, zero value otherwise.
func (o *ServiceOffering) GetDocumentationUrl() string {
	if o == nil || IsNil(o.DocumentationUrl) {
		var ret string
		return ret
	}
	return *o.DocumentationUrl
}

// GetDocumentationUrlOk returns a tuple with the DocumentationUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOffering) GetDocumentationUrlOk() (*string, bool) {
	if o == nil || IsNil(o.DocumentationUrl) {
		return nil, false
	}
	return o.DocumentationUrl, true
}

// HasDocumentationUrl returns a boolean if a field has been set.
func (o *ServiceOffering) HasDocumentationUrl() bool {
	if o != nil && !IsNil(o.DocumentationUrl) {
		return true
	}

	return false
}

// SetDocumentationUrl gets a reference to the given string and assigns it to the DocumentationUrl field.
func (o *ServiceOffering) SetDocumentationUrl(v string) {
	o.DocumentationUrl = &v
}

// GetGuid returns the Guid field value if set, zero value otherwise.
func (o *ServiceOffering) GetGuid() string {
	if o == nil || IsNil(o.Guid) {
		var ret string
		return ret
	}
	return *o.Guid
}

// GetGuidOk returns a tuple with the Guid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOffering) GetGuidOk() (*string, bool) {
	if o == nil || IsNil(o.Guid) {
		return nil, false
	}
	return o.Guid, true
}

// HasGuid returns a boolean if a field has been set.
func (o *ServiceOffering) HasGuid() bool {
	if o != nil && !IsNil(o.Guid) {
		return true
	}

	return false
}

// SetGuid gets a reference to the given string and assigns it to the Guid field.
func (o *ServiceOffering) SetGuid(v string) {
	o.Guid = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ServiceOffering) GetLinks() ServiceOfferingLinks {
	if o == nil || IsNil(o.Links) {
		var ret ServiceOfferingLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOffering) GetLinksOk() (*ServiceOfferingLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ServiceOffering) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given ServiceOfferingLinks and assigns it to the Links field.
func (o *ServiceOffering) SetLinks(v ServiceOfferingLinks) {
	o.Links = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ServiceOffering) GetMetadata() V3DropletsGuidPatchRequestMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret V3DropletsGuidPatchRequestMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOffering) GetMetadataOk() (*V3DropletsGuidPatchRequestMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ServiceOffering) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given V3DropletsGuidPatchRequestMetadata and assigns it to the Metadata field.
func (o *ServiceOffering) SetMetadata(v V3DropletsGuidPatchRequestMetadata) {
	o.Metadata = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ServiceOffering) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOffering) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ServiceOffering) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ServiceOffering) SetName(v string) {
	o.Name = &v
}

// GetRelationships returns the Relationships field value if set, zero value otherwise.
func (o *ServiceOffering) GetRelationships() ServiceOfferingRelationships {
	if o == nil || IsNil(o.Relationships) {
		var ret ServiceOfferingRelationships
		return ret
	}
	return *o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOffering) GetRelationshipsOk() (*ServiceOfferingRelationships, bool) {
	if o == nil || IsNil(o.Relationships) {
		return nil, false
	}
	return o.Relationships, true
}

// HasRelationships returns a boolean if a field has been set.
func (o *ServiceOffering) HasRelationships() bool {
	if o != nil && !IsNil(o.Relationships) {
		return true
	}

	return false
}

// SetRelationships gets a reference to the given ServiceOfferingRelationships and assigns it to the Relationships field.
func (o *ServiceOffering) SetRelationships(v ServiceOfferingRelationships) {
	o.Relationships = &v
}

// GetRequires returns the Requires field value if set, zero value otherwise.
func (o *ServiceOffering) GetRequires() []string {
	if o == nil || IsNil(o.Requires) {
		var ret []string
		return ret
	}
	return o.Requires
}

// GetRequiresOk returns a tuple with the Requires field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOffering) GetRequiresOk() ([]string, bool) {
	if o == nil || IsNil(o.Requires) {
		return nil, false
	}
	return o.Requires, true
}

// HasRequires returns a boolean if a field has been set.
func (o *ServiceOffering) HasRequires() bool {
	if o != nil && !IsNil(o.Requires) {
		return true
	}

	return false
}

// SetRequires gets a reference to the given []string and assigns it to the Requires field.
func (o *ServiceOffering) SetRequires(v []string) {
	o.Requires = v
}

// GetShareable returns the Shareable field value if set, zero value otherwise.
func (o *ServiceOffering) GetShareable() bool {
	if o == nil || IsNil(o.Shareable) {
		var ret bool
		return ret
	}
	return *o.Shareable
}

// GetShareableOk returns a tuple with the Shareable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOffering) GetShareableOk() (*bool, bool) {
	if o == nil || IsNil(o.Shareable) {
		return nil, false
	}
	return o.Shareable, true
}

// HasShareable returns a boolean if a field has been set.
func (o *ServiceOffering) HasShareable() bool {
	if o != nil && !IsNil(o.Shareable) {
		return true
	}

	return false
}

// SetShareable gets a reference to the given bool and assigns it to the Shareable field.
func (o *ServiceOffering) SetShareable(v bool) {
	o.Shareable = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ServiceOffering) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOffering) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ServiceOffering) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *ServiceOffering) SetTags(v []string) {
	o.Tags = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ServiceOffering) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOffering) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ServiceOffering) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *ServiceOffering) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o ServiceOffering) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceOffering) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Available) {
		toSerialize["available"] = o.Available
	}
	if !IsNil(o.BrokerCatalog) {
		toSerialize["broker_catalog"] = o.BrokerCatalog
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DocumentationUrl) {
		toSerialize["documentation_url"] = o.DocumentationUrl
	}
	if !IsNil(o.Guid) {
		toSerialize["guid"] = o.Guid
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Relationships) {
		toSerialize["relationships"] = o.Relationships
	}
	if !IsNil(o.Requires) {
		toSerialize["requires"] = o.Requires
	}
	if !IsNil(o.Shareable) {
		toSerialize["shareable"] = o.Shareable
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableServiceOffering struct {
	value *ServiceOffering
	isSet bool
}

func (v NullableServiceOffering) Get() *ServiceOffering {
	return v.value
}

func (v *NullableServiceOffering) Set(val *ServiceOffering) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceOffering) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceOffering) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceOffering(val *ServiceOffering) *NullableServiceOffering {
	return &NullableServiceOffering{value: val, isSet: true}
}

func (v NullableServiceOffering) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceOffering) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


