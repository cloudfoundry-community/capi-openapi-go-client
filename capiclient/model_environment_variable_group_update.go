/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the EnvironmentVariableGroupUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnvironmentVariableGroupUpdate{}

// EnvironmentVariableGroupUpdate struct for EnvironmentVariableGroupUpdate
type EnvironmentVariableGroupUpdate struct {
	Metadata *EnvironmentVariableGroupUpdateMetadata `json:"metadata,omitempty"`
	// Environment variables to update as key-value pairs. Set a value to null to remove the variable. 
	Var *map[string]string `json:"var,omitempty"`
}

// NewEnvironmentVariableGroupUpdate instantiates a new EnvironmentVariableGroupUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentVariableGroupUpdate() *EnvironmentVariableGroupUpdate {
	this := EnvironmentVariableGroupUpdate{}
	return &this
}

// NewEnvironmentVariableGroupUpdateWithDefaults instantiates a new EnvironmentVariableGroupUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentVariableGroupUpdateWithDefaults() *EnvironmentVariableGroupUpdate {
	this := EnvironmentVariableGroupUpdate{}
	return &this
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *EnvironmentVariableGroupUpdate) GetMetadata() EnvironmentVariableGroupUpdateMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret EnvironmentVariableGroupUpdateMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentVariableGroupUpdate) GetMetadataOk() (*EnvironmentVariableGroupUpdateMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *EnvironmentVariableGroupUpdate) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given EnvironmentVariableGroupUpdateMetadata and assigns it to the Metadata field.
func (o *EnvironmentVariableGroupUpdate) SetMetadata(v EnvironmentVariableGroupUpdateMetadata) {
	o.Metadata = &v
}

// GetVar returns the Var field value if set, zero value otherwise.
func (o *EnvironmentVariableGroupUpdate) GetVar() map[string]string {
	if o == nil || IsNil(o.Var) {
		var ret map[string]string
		return ret
	}
	return *o.Var
}

// GetVarOk returns a tuple with the Var field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentVariableGroupUpdate) GetVarOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Var) {
		return nil, false
	}
	return o.Var, true
}

// HasVar returns a boolean if a field has been set.
func (o *EnvironmentVariableGroupUpdate) HasVar() bool {
	if o != nil && !IsNil(o.Var) {
		return true
	}

	return false
}

// SetVar gets a reference to the given map[string]string and assigns it to the Var field.
func (o *EnvironmentVariableGroupUpdate) SetVar(v map[string]string) {
	o.Var = &v
}

func (o EnvironmentVariableGroupUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnvironmentVariableGroupUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Var) {
		toSerialize["var"] = o.Var
	}
	return toSerialize, nil
}

type NullableEnvironmentVariableGroupUpdate struct {
	value *EnvironmentVariableGroupUpdate
	isSet bool
}

func (v NullableEnvironmentVariableGroupUpdate) Get() *EnvironmentVariableGroupUpdate {
	return v.value
}

func (v *NullableEnvironmentVariableGroupUpdate) Set(val *EnvironmentVariableGroupUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentVariableGroupUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentVariableGroupUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentVariableGroupUpdate(val *EnvironmentVariableGroupUpdate) *NullableEnvironmentVariableGroupUpdate {
	return &NullableEnvironmentVariableGroupUpdate{value: val, isSet: true}
}

func (v NullableEnvironmentVariableGroupUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentVariableGroupUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


