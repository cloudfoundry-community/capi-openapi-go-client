/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RoleCreateRelationshipsUserDataOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoleCreateRelationshipsUserDataOneOf1{}

// RoleCreateRelationshipsUserDataOneOf1 struct for RoleCreateRelationshipsUserDataOneOf1
type RoleCreateRelationshipsUserDataOneOf1 struct {
	// Identity provider origin
	Origin *string `json:"origin,omitempty"`
	// Username (email)
	Username string `json:"username"`
}

type _RoleCreateRelationshipsUserDataOneOf1 RoleCreateRelationshipsUserDataOneOf1

// NewRoleCreateRelationshipsUserDataOneOf1 instantiates a new RoleCreateRelationshipsUserDataOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleCreateRelationshipsUserDataOneOf1(username string) *RoleCreateRelationshipsUserDataOneOf1 {
	this := RoleCreateRelationshipsUserDataOneOf1{}
	var origin string = "uaa"
	this.Origin = &origin
	this.Username = username
	return &this
}

// NewRoleCreateRelationshipsUserDataOneOf1WithDefaults instantiates a new RoleCreateRelationshipsUserDataOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleCreateRelationshipsUserDataOneOf1WithDefaults() *RoleCreateRelationshipsUserDataOneOf1 {
	this := RoleCreateRelationshipsUserDataOneOf1{}
	var origin string = "uaa"
	this.Origin = &origin
	return &this
}

// GetOrigin returns the Origin field value if set, zero value otherwise.
func (o *RoleCreateRelationshipsUserDataOneOf1) GetOrigin() string {
	if o == nil || IsNil(o.Origin) {
		var ret string
		return ret
	}
	return *o.Origin
}

// GetOriginOk returns a tuple with the Origin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleCreateRelationshipsUserDataOneOf1) GetOriginOk() (*string, bool) {
	if o == nil || IsNil(o.Origin) {
		return nil, false
	}
	return o.Origin, true
}

// HasOrigin returns a boolean if a field has been set.
func (o *RoleCreateRelationshipsUserDataOneOf1) HasOrigin() bool {
	if o != nil && !IsNil(o.Origin) {
		return true
	}

	return false
}

// SetOrigin gets a reference to the given string and assigns it to the Origin field.
func (o *RoleCreateRelationshipsUserDataOneOf1) SetOrigin(v string) {
	o.Origin = &v
}

// GetUsername returns the Username field value
func (o *RoleCreateRelationshipsUserDataOneOf1) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *RoleCreateRelationshipsUserDataOneOf1) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *RoleCreateRelationshipsUserDataOneOf1) SetUsername(v string) {
	o.Username = v
}

func (o RoleCreateRelationshipsUserDataOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoleCreateRelationshipsUserDataOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Origin) {
		toSerialize["origin"] = o.Origin
	}
	toSerialize["username"] = o.Username
	return toSerialize, nil
}

func (o *RoleCreateRelationshipsUserDataOneOf1) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"username",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRoleCreateRelationshipsUserDataOneOf1 := _RoleCreateRelationshipsUserDataOneOf1{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRoleCreateRelationshipsUserDataOneOf1)

	if err != nil {
		return err
	}

	*o = RoleCreateRelationshipsUserDataOneOf1(varRoleCreateRelationshipsUserDataOneOf1)

	return err
}

type NullableRoleCreateRelationshipsUserDataOneOf1 struct {
	value *RoleCreateRelationshipsUserDataOneOf1
	isSet bool
}

func (v NullableRoleCreateRelationshipsUserDataOneOf1) Get() *RoleCreateRelationshipsUserDataOneOf1 {
	return v.value
}

func (v *NullableRoleCreateRelationshipsUserDataOneOf1) Set(val *RoleCreateRelationshipsUserDataOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleCreateRelationshipsUserDataOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleCreateRelationshipsUserDataOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleCreateRelationshipsUserDataOneOf1(val *RoleCreateRelationshipsUserDataOneOf1) *NullableRoleCreateRelationshipsUserDataOneOf1 {
	return &NullableRoleCreateRelationshipsUserDataOneOf1{value: val, isSet: true}
}

func (v NullableRoleCreateRelationshipsUserDataOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleCreateRelationshipsUserDataOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


