/*
Cloud Controller API

API specification for managing environment variable groups in Cloud Controller.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the RouteLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RouteLinks{}

// RouteLinks struct for RouteLinks
type RouteLinks struct {
	Destinations *Get200ResponseLinksLogCache `json:"destinations,omitempty"`
	Domain *Get200ResponseLinksLogCache `json:"domain,omitempty"`
	Self *Get200ResponseLinksLogCache `json:"self,omitempty"`
	Space *Get200ResponseLinksLogCache `json:"space,omitempty"`
}

// NewRouteLinks instantiates a new RouteLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRouteLinks() *RouteLinks {
	this := RouteLinks{}
	return &this
}

// NewRouteLinksWithDefaults instantiates a new RouteLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRouteLinksWithDefaults() *RouteLinks {
	this := RouteLinks{}
	return &this
}

// GetDestinations returns the Destinations field value if set, zero value otherwise.
func (o *RouteLinks) GetDestinations() Get200ResponseLinksLogCache {
	if o == nil || IsNil(o.Destinations) {
		var ret Get200ResponseLinksLogCache
		return ret
	}
	return *o.Destinations
}

// GetDestinationsOk returns a tuple with the Destinations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteLinks) GetDestinationsOk() (*Get200ResponseLinksLogCache, bool) {
	if o == nil || IsNil(o.Destinations) {
		return nil, false
	}
	return o.Destinations, true
}

// HasDestinations returns a boolean if a field has been set.
func (o *RouteLinks) HasDestinations() bool {
	if o != nil && !IsNil(o.Destinations) {
		return true
	}

	return false
}

// SetDestinations gets a reference to the given Get200ResponseLinksLogCache and assigns it to the Destinations field.
func (o *RouteLinks) SetDestinations(v Get200ResponseLinksLogCache) {
	o.Destinations = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *RouteLinks) GetDomain() Get200ResponseLinksLogCache {
	if o == nil || IsNil(o.Domain) {
		var ret Get200ResponseLinksLogCache
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteLinks) GetDomainOk() (*Get200ResponseLinksLogCache, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *RouteLinks) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given Get200ResponseLinksLogCache and assigns it to the Domain field.
func (o *RouteLinks) SetDomain(v Get200ResponseLinksLogCache) {
	o.Domain = &v
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *RouteLinks) GetSelf() Get200ResponseLinksLogCache {
	if o == nil || IsNil(o.Self) {
		var ret Get200ResponseLinksLogCache
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteLinks) GetSelfOk() (*Get200ResponseLinksLogCache, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *RouteLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given Get200ResponseLinksLogCache and assigns it to the Self field.
func (o *RouteLinks) SetSelf(v Get200ResponseLinksLogCache) {
	o.Self = &v
}

// GetSpace returns the Space field value if set, zero value otherwise.
func (o *RouteLinks) GetSpace() Get200ResponseLinksLogCache {
	if o == nil || IsNil(o.Space) {
		var ret Get200ResponseLinksLogCache
		return ret
	}
	return *o.Space
}

// GetSpaceOk returns a tuple with the Space field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteLinks) GetSpaceOk() (*Get200ResponseLinksLogCache, bool) {
	if o == nil || IsNil(o.Space) {
		return nil, false
	}
	return o.Space, true
}

// HasSpace returns a boolean if a field has been set.
func (o *RouteLinks) HasSpace() bool {
	if o != nil && !IsNil(o.Space) {
		return true
	}

	return false
}

// SetSpace gets a reference to the given Get200ResponseLinksLogCache and assigns it to the Space field.
func (o *RouteLinks) SetSpace(v Get200ResponseLinksLogCache) {
	o.Space = &v
}

func (o RouteLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RouteLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Destinations) {
		toSerialize["destinations"] = o.Destinations
	}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}
	if !IsNil(o.Space) {
		toSerialize["space"] = o.Space
	}
	return toSerialize, nil
}

type NullableRouteLinks struct {
	value *RouteLinks
	isSet bool
}

func (v NullableRouteLinks) Get() *RouteLinks {
	return v.value
}

func (v *NullableRouteLinks) Set(val *RouteLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableRouteLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableRouteLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRouteLinks(val *RouteLinks) *NullableRouteLinks {
	return &NullableRouteLinks{value: val, isSet: true}
}

func (v NullableRouteLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRouteLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


