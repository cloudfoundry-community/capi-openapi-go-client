/*
Cloud Controller API

API specification for managing environment variable groups in Cloud Controller.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the ServicePlanUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServicePlanUpdate{}

// ServicePlanUpdate struct for ServicePlanUpdate
type ServicePlanUpdate struct {
	Metadata *V3AppsGuidDropletsCurrentGet200ResponseMetadata `json:"metadata,omitempty"`
}

// NewServicePlanUpdate instantiates a new ServicePlanUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServicePlanUpdate() *ServicePlanUpdate {
	this := ServicePlanUpdate{}
	return &this
}

// NewServicePlanUpdateWithDefaults instantiates a new ServicePlanUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServicePlanUpdateWithDefaults() *ServicePlanUpdate {
	this := ServicePlanUpdate{}
	return &this
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ServicePlanUpdate) GetMetadata() V3AppsGuidDropletsCurrentGet200ResponseMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret V3AppsGuidDropletsCurrentGet200ResponseMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanUpdate) GetMetadataOk() (*V3AppsGuidDropletsCurrentGet200ResponseMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ServicePlanUpdate) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given V3AppsGuidDropletsCurrentGet200ResponseMetadata and assigns it to the Metadata field.
func (o *ServicePlanUpdate) SetMetadata(v V3AppsGuidDropletsCurrentGet200ResponseMetadata) {
	o.Metadata = &v
}

func (o ServicePlanUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServicePlanUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullableServicePlanUpdate struct {
	value *ServicePlanUpdate
	isSet bool
}

func (v NullableServicePlanUpdate) Get() *ServicePlanUpdate {
	return v.value
}

func (v *NullableServicePlanUpdate) Set(val *ServicePlanUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableServicePlanUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableServicePlanUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServicePlanUpdate(val *ServicePlanUpdate) *NullableServicePlanUpdate {
	return &NullableServicePlanUpdate{value: val, isSet: true}
}

func (v NullableServicePlanUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServicePlanUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


