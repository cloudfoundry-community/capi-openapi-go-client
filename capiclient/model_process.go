/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the Process type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Process{}

// Process struct for Process
type Process struct {
	// Start command for the process
	Command NullableString `json:"command"`
	CreatedAt time.Time `json:"created_at"`
	// Disk allocated per instance in MB
	DiskInMb int32 `json:"disk_in_mb"`
	// Unique identifier for the process
	Guid string `json:"guid"`
	HealthCheck ProcessHealthCheck `json:"health_check"`
	// Number of instances
	Instances int32 `json:"instances"`
	Links ProcessLinks `json:"links"`
	// Log rate limit per instance (-1 for unlimited)
	LogRateLimitInBytesPerSecond int32 `json:"log_rate_limit_in_bytes_per_second"`
	// Memory allocated per instance in MB
	MemoryInMb int32 `json:"memory_in_mb"`
	Metadata V3AppsGuidTasksPostRequestMetadata `json:"metadata"`
	ReadinessHealthCheck NullableProcessReadinessHealthCheck `json:"readiness_health_check"`
	Relationships ProcessRelationships `json:"relationships"`
	// Process type (e.g., web, worker)
	Type string `json:"type"`
	UpdatedAt time.Time `json:"updated_at"`
	// Process version identifier
	Version *string `json:"version,omitempty"`
}

type _Process Process

// NewProcess instantiates a new Process object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProcess(command NullableString, createdAt time.Time, diskInMb int32, guid string, healthCheck ProcessHealthCheck, instances int32, links ProcessLinks, logRateLimitInBytesPerSecond int32, memoryInMb int32, metadata V3AppsGuidTasksPostRequestMetadata, readinessHealthCheck NullableProcessReadinessHealthCheck, relationships ProcessRelationships, type_ string, updatedAt time.Time) *Process {
	this := Process{}
	this.Command = command
	this.CreatedAt = createdAt
	this.DiskInMb = diskInMb
	this.Guid = guid
	this.HealthCheck = healthCheck
	this.Instances = instances
	this.Links = links
	this.LogRateLimitInBytesPerSecond = logRateLimitInBytesPerSecond
	this.MemoryInMb = memoryInMb
	this.Metadata = metadata
	this.ReadinessHealthCheck = readinessHealthCheck
	this.Relationships = relationships
	this.Type = type_
	this.UpdatedAt = updatedAt
	return &this
}

// NewProcessWithDefaults instantiates a new Process object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProcessWithDefaults() *Process {
	this := Process{}
	return &this
}

// GetCommand returns the Command field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Process) GetCommand() string {
	if o == nil || o.Command.Get() == nil {
		var ret string
		return ret
	}

	return *o.Command.Get()
}

// GetCommandOk returns a tuple with the Command field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Process) GetCommandOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Command.Get(), o.Command.IsSet()
}

// SetCommand sets field value
func (o *Process) SetCommand(v string) {
	o.Command.Set(&v)
}

// GetCreatedAt returns the CreatedAt field value
func (o *Process) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Process) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Process) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetDiskInMb returns the DiskInMb field value
func (o *Process) GetDiskInMb() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DiskInMb
}

// GetDiskInMbOk returns a tuple with the DiskInMb field value
// and a boolean to check if the value has been set.
func (o *Process) GetDiskInMbOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DiskInMb, true
}

// SetDiskInMb sets field value
func (o *Process) SetDiskInMb(v int32) {
	o.DiskInMb = v
}

// GetGuid returns the Guid field value
func (o *Process) GetGuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Guid
}

// GetGuidOk returns a tuple with the Guid field value
// and a boolean to check if the value has been set.
func (o *Process) GetGuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Guid, true
}

// SetGuid sets field value
func (o *Process) SetGuid(v string) {
	o.Guid = v
}

// GetHealthCheck returns the HealthCheck field value
func (o *Process) GetHealthCheck() ProcessHealthCheck {
	if o == nil {
		var ret ProcessHealthCheck
		return ret
	}

	return o.HealthCheck
}

// GetHealthCheckOk returns a tuple with the HealthCheck field value
// and a boolean to check if the value has been set.
func (o *Process) GetHealthCheckOk() (*ProcessHealthCheck, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HealthCheck, true
}

// SetHealthCheck sets field value
func (o *Process) SetHealthCheck(v ProcessHealthCheck) {
	o.HealthCheck = v
}

// GetInstances returns the Instances field value
func (o *Process) GetInstances() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Instances
}

// GetInstancesOk returns a tuple with the Instances field value
// and a boolean to check if the value has been set.
func (o *Process) GetInstancesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Instances, true
}

// SetInstances sets field value
func (o *Process) SetInstances(v int32) {
	o.Instances = v
}

// GetLinks returns the Links field value
func (o *Process) GetLinks() ProcessLinks {
	if o == nil {
		var ret ProcessLinks
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *Process) GetLinksOk() (*ProcessLinks, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Links, true
}

// SetLinks sets field value
func (o *Process) SetLinks(v ProcessLinks) {
	o.Links = v
}

// GetLogRateLimitInBytesPerSecond returns the LogRateLimitInBytesPerSecond field value
func (o *Process) GetLogRateLimitInBytesPerSecond() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LogRateLimitInBytesPerSecond
}

// GetLogRateLimitInBytesPerSecondOk returns a tuple with the LogRateLimitInBytesPerSecond field value
// and a boolean to check if the value has been set.
func (o *Process) GetLogRateLimitInBytesPerSecondOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LogRateLimitInBytesPerSecond, true
}

// SetLogRateLimitInBytesPerSecond sets field value
func (o *Process) SetLogRateLimitInBytesPerSecond(v int32) {
	o.LogRateLimitInBytesPerSecond = v
}

// GetMemoryInMb returns the MemoryInMb field value
func (o *Process) GetMemoryInMb() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MemoryInMb
}

// GetMemoryInMbOk returns a tuple with the MemoryInMb field value
// and a boolean to check if the value has been set.
func (o *Process) GetMemoryInMbOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MemoryInMb, true
}

// SetMemoryInMb sets field value
func (o *Process) SetMemoryInMb(v int32) {
	o.MemoryInMb = v
}

// GetMetadata returns the Metadata field value
func (o *Process) GetMetadata() V3AppsGuidTasksPostRequestMetadata {
	if o == nil {
		var ret V3AppsGuidTasksPostRequestMetadata
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *Process) GetMetadataOk() (*V3AppsGuidTasksPostRequestMetadata, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metadata, true
}

// SetMetadata sets field value
func (o *Process) SetMetadata(v V3AppsGuidTasksPostRequestMetadata) {
	o.Metadata = v
}

// GetReadinessHealthCheck returns the ReadinessHealthCheck field value
// If the value is explicit nil, the zero value for ProcessReadinessHealthCheck will be returned
func (o *Process) GetReadinessHealthCheck() ProcessReadinessHealthCheck {
	if o == nil || o.ReadinessHealthCheck.Get() == nil {
		var ret ProcessReadinessHealthCheck
		return ret
	}

	return *o.ReadinessHealthCheck.Get()
}

// GetReadinessHealthCheckOk returns a tuple with the ReadinessHealthCheck field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Process) GetReadinessHealthCheckOk() (*ProcessReadinessHealthCheck, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReadinessHealthCheck.Get(), o.ReadinessHealthCheck.IsSet()
}

// SetReadinessHealthCheck sets field value
func (o *Process) SetReadinessHealthCheck(v ProcessReadinessHealthCheck) {
	o.ReadinessHealthCheck.Set(&v)
}

// GetRelationships returns the Relationships field value
func (o *Process) GetRelationships() ProcessRelationships {
	if o == nil {
		var ret ProcessRelationships
		return ret
	}

	return o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value
// and a boolean to check if the value has been set.
func (o *Process) GetRelationshipsOk() (*ProcessRelationships, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Relationships, true
}

// SetRelationships sets field value
func (o *Process) SetRelationships(v ProcessRelationships) {
	o.Relationships = v
}

// GetType returns the Type field value
func (o *Process) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *Process) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *Process) SetType(v string) {
	o.Type = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Process) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Process) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Process) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *Process) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Process) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *Process) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *Process) SetVersion(v string) {
	o.Version = &v
}

func (o Process) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Process) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["command"] = o.Command.Get()
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["disk_in_mb"] = o.DiskInMb
	toSerialize["guid"] = o.Guid
	toSerialize["health_check"] = o.HealthCheck
	toSerialize["instances"] = o.Instances
	toSerialize["links"] = o.Links
	toSerialize["log_rate_limit_in_bytes_per_second"] = o.LogRateLimitInBytesPerSecond
	toSerialize["memory_in_mb"] = o.MemoryInMb
	toSerialize["metadata"] = o.Metadata
	toSerialize["readiness_health_check"] = o.ReadinessHealthCheck.Get()
	toSerialize["relationships"] = o.Relationships
	toSerialize["type"] = o.Type
	toSerialize["updated_at"] = o.UpdatedAt
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

func (o *Process) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"command",
		"created_at",
		"disk_in_mb",
		"guid",
		"health_check",
		"instances",
		"links",
		"log_rate_limit_in_bytes_per_second",
		"memory_in_mb",
		"metadata",
		"readiness_health_check",
		"relationships",
		"type",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProcess := _Process{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProcess)

	if err != nil {
		return err
	}

	*o = Process(varProcess)

	return err
}

type NullableProcess struct {
	value *Process
	isSet bool
}

func (v NullableProcess) Get() *Process {
	return v.value
}

func (v *NullableProcess) Set(val *Process) {
	v.value = val
	v.isSet = true
}

func (v NullableProcess) IsSet() bool {
	return v.isSet
}

func (v *NullableProcess) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProcess(val *Process) *NullableProcess {
	return &NullableProcess{value: val, isSet: true}
}

func (v NullableProcess) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProcess) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


