/*
Cloud Controller API

API specification for managing environment variable groups in Cloud Controller.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the PackageLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PackageLinks{}

// PackageLinks struct for PackageLinks
type PackageLinks struct {
	App *PackageLinksApp `json:"app,omitempty"`
	Download *PackageLinksDownload `json:"download,omitempty"`
	Self *PackageLinksSelf `json:"self,omitempty"`
	Upload *PackageLinksUpload `json:"upload,omitempty"`
}

// NewPackageLinks instantiates a new PackageLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPackageLinks() *PackageLinks {
	this := PackageLinks{}
	return &this
}

// NewPackageLinksWithDefaults instantiates a new PackageLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPackageLinksWithDefaults() *PackageLinks {
	this := PackageLinks{}
	return &this
}

// GetApp returns the App field value if set, zero value otherwise.
func (o *PackageLinks) GetApp() PackageLinksApp {
	if o == nil || IsNil(o.App) {
		var ret PackageLinksApp
		return ret
	}
	return *o.App
}

// GetAppOk returns a tuple with the App field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackageLinks) GetAppOk() (*PackageLinksApp, bool) {
	if o == nil || IsNil(o.App) {
		return nil, false
	}
	return o.App, true
}

// HasApp returns a boolean if a field has been set.
func (o *PackageLinks) HasApp() bool {
	if o != nil && !IsNil(o.App) {
		return true
	}

	return false
}

// SetApp gets a reference to the given PackageLinksApp and assigns it to the App field.
func (o *PackageLinks) SetApp(v PackageLinksApp) {
	o.App = &v
}

// GetDownload returns the Download field value if set, zero value otherwise.
func (o *PackageLinks) GetDownload() PackageLinksDownload {
	if o == nil || IsNil(o.Download) {
		var ret PackageLinksDownload
		return ret
	}
	return *o.Download
}

// GetDownloadOk returns a tuple with the Download field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackageLinks) GetDownloadOk() (*PackageLinksDownload, bool) {
	if o == nil || IsNil(o.Download) {
		return nil, false
	}
	return o.Download, true
}

// HasDownload returns a boolean if a field has been set.
func (o *PackageLinks) HasDownload() bool {
	if o != nil && !IsNil(o.Download) {
		return true
	}

	return false
}

// SetDownload gets a reference to the given PackageLinksDownload and assigns it to the Download field.
func (o *PackageLinks) SetDownload(v PackageLinksDownload) {
	o.Download = &v
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *PackageLinks) GetSelf() PackageLinksSelf {
	if o == nil || IsNil(o.Self) {
		var ret PackageLinksSelf
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackageLinks) GetSelfOk() (*PackageLinksSelf, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *PackageLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given PackageLinksSelf and assigns it to the Self field.
func (o *PackageLinks) SetSelf(v PackageLinksSelf) {
	o.Self = &v
}

// GetUpload returns the Upload field value if set, zero value otherwise.
func (o *PackageLinks) GetUpload() PackageLinksUpload {
	if o == nil || IsNil(o.Upload) {
		var ret PackageLinksUpload
		return ret
	}
	return *o.Upload
}

// GetUploadOk returns a tuple with the Upload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackageLinks) GetUploadOk() (*PackageLinksUpload, bool) {
	if o == nil || IsNil(o.Upload) {
		return nil, false
	}
	return o.Upload, true
}

// HasUpload returns a boolean if a field has been set.
func (o *PackageLinks) HasUpload() bool {
	if o != nil && !IsNil(o.Upload) {
		return true
	}

	return false
}

// SetUpload gets a reference to the given PackageLinksUpload and assigns it to the Upload field.
func (o *PackageLinks) SetUpload(v PackageLinksUpload) {
	o.Upload = &v
}

func (o PackageLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PackageLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.App) {
		toSerialize["app"] = o.App
	}
	if !IsNil(o.Download) {
		toSerialize["download"] = o.Download
	}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}
	if !IsNil(o.Upload) {
		toSerialize["upload"] = o.Upload
	}
	return toSerialize, nil
}

type NullablePackageLinks struct {
	value *PackageLinks
	isSet bool
}

func (v NullablePackageLinks) Get() *PackageLinks {
	return v.value
}

func (v *NullablePackageLinks) Set(val *PackageLinks) {
	v.value = val
	v.isSet = true
}

func (v NullablePackageLinks) IsSet() bool {
	return v.isSet
}

func (v *NullablePackageLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePackageLinks(val *PackageLinks) *NullablePackageLinks {
	return &NullablePackageLinks{value: val, isSet: true}
}

func (v NullablePackageLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePackageLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


