/*
Cloud Controller API

API specification for managing environment variable groups in Cloud Controller.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the SecurityGroupUpdateGloballyEnabled type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityGroupUpdateGloballyEnabled{}

// SecurityGroupUpdateGloballyEnabled struct for SecurityGroupUpdateGloballyEnabled
type SecurityGroupUpdateGloballyEnabled struct {
	Running NullableBool `json:"running,omitempty"`
	Staging NullableBool `json:"staging,omitempty"`
}

// NewSecurityGroupUpdateGloballyEnabled instantiates a new SecurityGroupUpdateGloballyEnabled object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityGroupUpdateGloballyEnabled() *SecurityGroupUpdateGloballyEnabled {
	this := SecurityGroupUpdateGloballyEnabled{}
	return &this
}

// NewSecurityGroupUpdateGloballyEnabledWithDefaults instantiates a new SecurityGroupUpdateGloballyEnabled object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityGroupUpdateGloballyEnabledWithDefaults() *SecurityGroupUpdateGloballyEnabled {
	this := SecurityGroupUpdateGloballyEnabled{}
	return &this
}

// GetRunning returns the Running field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityGroupUpdateGloballyEnabled) GetRunning() bool {
	if o == nil || IsNil(o.Running.Get()) {
		var ret bool
		return ret
	}
	return *o.Running.Get()
}

// GetRunningOk returns a tuple with the Running field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupUpdateGloballyEnabled) GetRunningOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Running.Get(), o.Running.IsSet()
}

// HasRunning returns a boolean if a field has been set.
func (o *SecurityGroupUpdateGloballyEnabled) HasRunning() bool {
	if o != nil && o.Running.IsSet() {
		return true
	}

	return false
}

// SetRunning gets a reference to the given NullableBool and assigns it to the Running field.
func (o *SecurityGroupUpdateGloballyEnabled) SetRunning(v bool) {
	o.Running.Set(&v)
}
// SetRunningNil sets the value for Running to be an explicit nil
func (o *SecurityGroupUpdateGloballyEnabled) SetRunningNil() {
	o.Running.Set(nil)
}

// UnsetRunning ensures that no value is present for Running, not even an explicit nil
func (o *SecurityGroupUpdateGloballyEnabled) UnsetRunning() {
	o.Running.Unset()
}

// GetStaging returns the Staging field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityGroupUpdateGloballyEnabled) GetStaging() bool {
	if o == nil || IsNil(o.Staging.Get()) {
		var ret bool
		return ret
	}
	return *o.Staging.Get()
}

// GetStagingOk returns a tuple with the Staging field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupUpdateGloballyEnabled) GetStagingOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Staging.Get(), o.Staging.IsSet()
}

// HasStaging returns a boolean if a field has been set.
func (o *SecurityGroupUpdateGloballyEnabled) HasStaging() bool {
	if o != nil && o.Staging.IsSet() {
		return true
	}

	return false
}

// SetStaging gets a reference to the given NullableBool and assigns it to the Staging field.
func (o *SecurityGroupUpdateGloballyEnabled) SetStaging(v bool) {
	o.Staging.Set(&v)
}
// SetStagingNil sets the value for Staging to be an explicit nil
func (o *SecurityGroupUpdateGloballyEnabled) SetStagingNil() {
	o.Staging.Set(nil)
}

// UnsetStaging ensures that no value is present for Staging, not even an explicit nil
func (o *SecurityGroupUpdateGloballyEnabled) UnsetStaging() {
	o.Staging.Unset()
}

func (o SecurityGroupUpdateGloballyEnabled) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecurityGroupUpdateGloballyEnabled) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Running.IsSet() {
		toSerialize["running"] = o.Running.Get()
	}
	if o.Staging.IsSet() {
		toSerialize["staging"] = o.Staging.Get()
	}
	return toSerialize, nil
}

type NullableSecurityGroupUpdateGloballyEnabled struct {
	value *SecurityGroupUpdateGloballyEnabled
	isSet bool
}

func (v NullableSecurityGroupUpdateGloballyEnabled) Get() *SecurityGroupUpdateGloballyEnabled {
	return v.value
}

func (v *NullableSecurityGroupUpdateGloballyEnabled) Set(val *SecurityGroupUpdateGloballyEnabled) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityGroupUpdateGloballyEnabled) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityGroupUpdateGloballyEnabled) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityGroupUpdateGloballyEnabled(val *SecurityGroupUpdateGloballyEnabled) *NullableSecurityGroupUpdateGloballyEnabled {
	return &NullableSecurityGroupUpdateGloballyEnabled{value: val, isSet: true}
}

func (v NullableSecurityGroupUpdateGloballyEnabled) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityGroupUpdateGloballyEnabled) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


