/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SidecarCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SidecarCreate{}

// SidecarCreate struct for SidecarCreate
type SidecarCreate struct {
	// Command to execute for the sidecar process
	Command string `json:"command"`
	// Memory allocation for the sidecar in MB
	MemoryInMb *int32 `json:"memory_in_mb,omitempty"`
	Metadata *SidecarCreateMetadata `json:"metadata,omitempty"`
	// Human-readable name for the sidecar
	Name string `json:"name"`
	// Process types this sidecar runs alongside
	ProcessTypes []string `json:"process_types"`
}

type _SidecarCreate SidecarCreate

// NewSidecarCreate instantiates a new SidecarCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSidecarCreate(command string, name string, processTypes []string) *SidecarCreate {
	this := SidecarCreate{}
	this.Command = command
	var memoryInMb int32 = 256
	this.MemoryInMb = &memoryInMb
	this.Name = name
	this.ProcessTypes = processTypes
	return &this
}

// NewSidecarCreateWithDefaults instantiates a new SidecarCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSidecarCreateWithDefaults() *SidecarCreate {
	this := SidecarCreate{}
	var memoryInMb int32 = 256
	this.MemoryInMb = &memoryInMb
	return &this
}

// GetCommand returns the Command field value
func (o *SidecarCreate) GetCommand() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Command
}

// GetCommandOk returns a tuple with the Command field value
// and a boolean to check if the value has been set.
func (o *SidecarCreate) GetCommandOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Command, true
}

// SetCommand sets field value
func (o *SidecarCreate) SetCommand(v string) {
	o.Command = v
}

// GetMemoryInMb returns the MemoryInMb field value if set, zero value otherwise.
func (o *SidecarCreate) GetMemoryInMb() int32 {
	if o == nil || IsNil(o.MemoryInMb) {
		var ret int32
		return ret
	}
	return *o.MemoryInMb
}

// GetMemoryInMbOk returns a tuple with the MemoryInMb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SidecarCreate) GetMemoryInMbOk() (*int32, bool) {
	if o == nil || IsNil(o.MemoryInMb) {
		return nil, false
	}
	return o.MemoryInMb, true
}

// HasMemoryInMb returns a boolean if a field has been set.
func (o *SidecarCreate) HasMemoryInMb() bool {
	if o != nil && !IsNil(o.MemoryInMb) {
		return true
	}

	return false
}

// SetMemoryInMb gets a reference to the given int32 and assigns it to the MemoryInMb field.
func (o *SidecarCreate) SetMemoryInMb(v int32) {
	o.MemoryInMb = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *SidecarCreate) GetMetadata() SidecarCreateMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret SidecarCreateMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SidecarCreate) GetMetadataOk() (*SidecarCreateMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *SidecarCreate) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given SidecarCreateMetadata and assigns it to the Metadata field.
func (o *SidecarCreate) SetMetadata(v SidecarCreateMetadata) {
	o.Metadata = &v
}

// GetName returns the Name field value
func (o *SidecarCreate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SidecarCreate) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SidecarCreate) SetName(v string) {
	o.Name = v
}

// GetProcessTypes returns the ProcessTypes field value
func (o *SidecarCreate) GetProcessTypes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ProcessTypes
}

// GetProcessTypesOk returns a tuple with the ProcessTypes field value
// and a boolean to check if the value has been set.
func (o *SidecarCreate) GetProcessTypesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProcessTypes, true
}

// SetProcessTypes sets field value
func (o *SidecarCreate) SetProcessTypes(v []string) {
	o.ProcessTypes = v
}

func (o SidecarCreate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SidecarCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["command"] = o.Command
	if !IsNil(o.MemoryInMb) {
		toSerialize["memory_in_mb"] = o.MemoryInMb
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	toSerialize["name"] = o.Name
	toSerialize["process_types"] = o.ProcessTypes
	return toSerialize, nil
}

func (o *SidecarCreate) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"command",
		"name",
		"process_types",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSidecarCreate := _SidecarCreate{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSidecarCreate)

	if err != nil {
		return err
	}

	*o = SidecarCreate(varSidecarCreate)

	return err
}

type NullableSidecarCreate struct {
	value *SidecarCreate
	isSet bool
}

func (v NullableSidecarCreate) Get() *SidecarCreate {
	return v.value
}

func (v *NullableSidecarCreate) Set(val *SidecarCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableSidecarCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableSidecarCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSidecarCreate(val *SidecarCreate) *NullableSidecarCreate {
	return &NullableSidecarCreate{value: val, isSet: true}
}

func (v NullableSidecarCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSidecarCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


