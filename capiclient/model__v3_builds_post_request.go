/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the V3BuildsPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V3BuildsPostRequest{}

// V3BuildsPostRequest struct for V3BuildsPostRequest
type V3BuildsPostRequest struct {
	// Environment variables for staging
	EnvironmentVariables *map[string]string `json:"environment_variables,omitempty"`
	Lifecycle *V3BuildsPostRequestLifecycle `json:"lifecycle,omitempty"`
	Metadata *V3AppsGuidTasksPostRequestMetadata `json:"metadata,omitempty"`
	Package V3BuildsPostRequestPackage `json:"package"`
	// Disk limit for staging container
	StagingDiskInMb *int32 `json:"staging_disk_in_mb,omitempty"`
	// Log rate limit during staging
	StagingLogRateLimitBytesPerSecond *int32 `json:"staging_log_rate_limit_bytes_per_second,omitempty"`
	// Memory limit for staging container
	StagingMemoryInMb *int32 `json:"staging_memory_in_mb,omitempty"`
}

type _V3BuildsPostRequest V3BuildsPostRequest

// NewV3BuildsPostRequest instantiates a new V3BuildsPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV3BuildsPostRequest(package_ V3BuildsPostRequestPackage) *V3BuildsPostRequest {
	this := V3BuildsPostRequest{}
	this.Package = package_
	return &this
}

// NewV3BuildsPostRequestWithDefaults instantiates a new V3BuildsPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV3BuildsPostRequestWithDefaults() *V3BuildsPostRequest {
	this := V3BuildsPostRequest{}
	return &this
}

// GetEnvironmentVariables returns the EnvironmentVariables field value if set, zero value otherwise.
func (o *V3BuildsPostRequest) GetEnvironmentVariables() map[string]string {
	if o == nil || IsNil(o.EnvironmentVariables) {
		var ret map[string]string
		return ret
	}
	return *o.EnvironmentVariables
}

// GetEnvironmentVariablesOk returns a tuple with the EnvironmentVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3BuildsPostRequest) GetEnvironmentVariablesOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.EnvironmentVariables) {
		return nil, false
	}
	return o.EnvironmentVariables, true
}

// HasEnvironmentVariables returns a boolean if a field has been set.
func (o *V3BuildsPostRequest) HasEnvironmentVariables() bool {
	if o != nil && !IsNil(o.EnvironmentVariables) {
		return true
	}

	return false
}

// SetEnvironmentVariables gets a reference to the given map[string]string and assigns it to the EnvironmentVariables field.
func (o *V3BuildsPostRequest) SetEnvironmentVariables(v map[string]string) {
	o.EnvironmentVariables = &v
}

// GetLifecycle returns the Lifecycle field value if set, zero value otherwise.
func (o *V3BuildsPostRequest) GetLifecycle() V3BuildsPostRequestLifecycle {
	if o == nil || IsNil(o.Lifecycle) {
		var ret V3BuildsPostRequestLifecycle
		return ret
	}
	return *o.Lifecycle
}

// GetLifecycleOk returns a tuple with the Lifecycle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3BuildsPostRequest) GetLifecycleOk() (*V3BuildsPostRequestLifecycle, bool) {
	if o == nil || IsNil(o.Lifecycle) {
		return nil, false
	}
	return o.Lifecycle, true
}

// HasLifecycle returns a boolean if a field has been set.
func (o *V3BuildsPostRequest) HasLifecycle() bool {
	if o != nil && !IsNil(o.Lifecycle) {
		return true
	}

	return false
}

// SetLifecycle gets a reference to the given V3BuildsPostRequestLifecycle and assigns it to the Lifecycle field.
func (o *V3BuildsPostRequest) SetLifecycle(v V3BuildsPostRequestLifecycle) {
	o.Lifecycle = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *V3BuildsPostRequest) GetMetadata() V3AppsGuidTasksPostRequestMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret V3AppsGuidTasksPostRequestMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3BuildsPostRequest) GetMetadataOk() (*V3AppsGuidTasksPostRequestMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *V3BuildsPostRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given V3AppsGuidTasksPostRequestMetadata and assigns it to the Metadata field.
func (o *V3BuildsPostRequest) SetMetadata(v V3AppsGuidTasksPostRequestMetadata) {
	o.Metadata = &v
}

// GetPackage returns the Package field value
func (o *V3BuildsPostRequest) GetPackage() V3BuildsPostRequestPackage {
	if o == nil {
		var ret V3BuildsPostRequestPackage
		return ret
	}

	return o.Package
}

// GetPackageOk returns a tuple with the Package field value
// and a boolean to check if the value has been set.
func (o *V3BuildsPostRequest) GetPackageOk() (*V3BuildsPostRequestPackage, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Package, true
}

// SetPackage sets field value
func (o *V3BuildsPostRequest) SetPackage(v V3BuildsPostRequestPackage) {
	o.Package = v
}

// GetStagingDiskInMb returns the StagingDiskInMb field value if set, zero value otherwise.
func (o *V3BuildsPostRequest) GetStagingDiskInMb() int32 {
	if o == nil || IsNil(o.StagingDiskInMb) {
		var ret int32
		return ret
	}
	return *o.StagingDiskInMb
}

// GetStagingDiskInMbOk returns a tuple with the StagingDiskInMb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3BuildsPostRequest) GetStagingDiskInMbOk() (*int32, bool) {
	if o == nil || IsNil(o.StagingDiskInMb) {
		return nil, false
	}
	return o.StagingDiskInMb, true
}

// HasStagingDiskInMb returns a boolean if a field has been set.
func (o *V3BuildsPostRequest) HasStagingDiskInMb() bool {
	if o != nil && !IsNil(o.StagingDiskInMb) {
		return true
	}

	return false
}

// SetStagingDiskInMb gets a reference to the given int32 and assigns it to the StagingDiskInMb field.
func (o *V3BuildsPostRequest) SetStagingDiskInMb(v int32) {
	o.StagingDiskInMb = &v
}

// GetStagingLogRateLimitBytesPerSecond returns the StagingLogRateLimitBytesPerSecond field value if set, zero value otherwise.
func (o *V3BuildsPostRequest) GetStagingLogRateLimitBytesPerSecond() int32 {
	if o == nil || IsNil(o.StagingLogRateLimitBytesPerSecond) {
		var ret int32
		return ret
	}
	return *o.StagingLogRateLimitBytesPerSecond
}

// GetStagingLogRateLimitBytesPerSecondOk returns a tuple with the StagingLogRateLimitBytesPerSecond field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3BuildsPostRequest) GetStagingLogRateLimitBytesPerSecondOk() (*int32, bool) {
	if o == nil || IsNil(o.StagingLogRateLimitBytesPerSecond) {
		return nil, false
	}
	return o.StagingLogRateLimitBytesPerSecond, true
}

// HasStagingLogRateLimitBytesPerSecond returns a boolean if a field has been set.
func (o *V3BuildsPostRequest) HasStagingLogRateLimitBytesPerSecond() bool {
	if o != nil && !IsNil(o.StagingLogRateLimitBytesPerSecond) {
		return true
	}

	return false
}

// SetStagingLogRateLimitBytesPerSecond gets a reference to the given int32 and assigns it to the StagingLogRateLimitBytesPerSecond field.
func (o *V3BuildsPostRequest) SetStagingLogRateLimitBytesPerSecond(v int32) {
	o.StagingLogRateLimitBytesPerSecond = &v
}

// GetStagingMemoryInMb returns the StagingMemoryInMb field value if set, zero value otherwise.
func (o *V3BuildsPostRequest) GetStagingMemoryInMb() int32 {
	if o == nil || IsNil(o.StagingMemoryInMb) {
		var ret int32
		return ret
	}
	return *o.StagingMemoryInMb
}

// GetStagingMemoryInMbOk returns a tuple with the StagingMemoryInMb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3BuildsPostRequest) GetStagingMemoryInMbOk() (*int32, bool) {
	if o == nil || IsNil(o.StagingMemoryInMb) {
		return nil, false
	}
	return o.StagingMemoryInMb, true
}

// HasStagingMemoryInMb returns a boolean if a field has been set.
func (o *V3BuildsPostRequest) HasStagingMemoryInMb() bool {
	if o != nil && !IsNil(o.StagingMemoryInMb) {
		return true
	}

	return false
}

// SetStagingMemoryInMb gets a reference to the given int32 and assigns it to the StagingMemoryInMb field.
func (o *V3BuildsPostRequest) SetStagingMemoryInMb(v int32) {
	o.StagingMemoryInMb = &v
}

func (o V3BuildsPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V3BuildsPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EnvironmentVariables) {
		toSerialize["environment_variables"] = o.EnvironmentVariables
	}
	if !IsNil(o.Lifecycle) {
		toSerialize["lifecycle"] = o.Lifecycle
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	toSerialize["package"] = o.Package
	if !IsNil(o.StagingDiskInMb) {
		toSerialize["staging_disk_in_mb"] = o.StagingDiskInMb
	}
	if !IsNil(o.StagingLogRateLimitBytesPerSecond) {
		toSerialize["staging_log_rate_limit_bytes_per_second"] = o.StagingLogRateLimitBytesPerSecond
	}
	if !IsNil(o.StagingMemoryInMb) {
		toSerialize["staging_memory_in_mb"] = o.StagingMemoryInMb
	}
	return toSerialize, nil
}

func (o *V3BuildsPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"package",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV3BuildsPostRequest := _V3BuildsPostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varV3BuildsPostRequest)

	if err != nil {
		return err
	}

	*o = V3BuildsPostRequest(varV3BuildsPostRequest)

	return err
}

type NullableV3BuildsPostRequest struct {
	value *V3BuildsPostRequest
	isSet bool
}

func (v NullableV3BuildsPostRequest) Get() *V3BuildsPostRequest {
	return v.value
}

func (v *NullableV3BuildsPostRequest) Set(val *V3BuildsPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV3BuildsPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV3BuildsPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV3BuildsPostRequest(val *V3BuildsPostRequest) *NullableV3BuildsPostRequest {
	return &NullableV3BuildsPostRequest{value: val, isSet: true}
}

func (v NullableV3BuildsPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV3BuildsPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


