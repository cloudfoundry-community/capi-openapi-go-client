/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the ServicePlanCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServicePlanCreate{}

// ServicePlanCreate struct for ServicePlanCreate
type ServicePlanCreate struct {
	Available *bool `json:"available,omitempty"`
	BrokerCatalog *BrokerCatalog `json:"broker_catalog,omitempty"`
	Costs []Cost `json:"costs,omitempty"`
	Description *string `json:"description,omitempty"`
	Free *bool `json:"free,omitempty"`
	Name *string `json:"name,omitempty"`
	Relationships *ServicePlanRelationships `json:"relationships,omitempty"`
	Schemas *PlanSchemas `json:"schemas,omitempty"`
	VisibilityType *string `json:"visibility_type,omitempty"`
}

// NewServicePlanCreate instantiates a new ServicePlanCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServicePlanCreate() *ServicePlanCreate {
	this := ServicePlanCreate{}
	return &this
}

// NewServicePlanCreateWithDefaults instantiates a new ServicePlanCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServicePlanCreateWithDefaults() *ServicePlanCreate {
	this := ServicePlanCreate{}
	return &this
}

// GetAvailable returns the Available field value if set, zero value otherwise.
func (o *ServicePlanCreate) GetAvailable() bool {
	if o == nil || IsNil(o.Available) {
		var ret bool
		return ret
	}
	return *o.Available
}

// GetAvailableOk returns a tuple with the Available field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanCreate) GetAvailableOk() (*bool, bool) {
	if o == nil || IsNil(o.Available) {
		return nil, false
	}
	return o.Available, true
}

// HasAvailable returns a boolean if a field has been set.
func (o *ServicePlanCreate) HasAvailable() bool {
	if o != nil && !IsNil(o.Available) {
		return true
	}

	return false
}

// SetAvailable gets a reference to the given bool and assigns it to the Available field.
func (o *ServicePlanCreate) SetAvailable(v bool) {
	o.Available = &v
}

// GetBrokerCatalog returns the BrokerCatalog field value if set, zero value otherwise.
func (o *ServicePlanCreate) GetBrokerCatalog() BrokerCatalog {
	if o == nil || IsNil(o.BrokerCatalog) {
		var ret BrokerCatalog
		return ret
	}
	return *o.BrokerCatalog
}

// GetBrokerCatalogOk returns a tuple with the BrokerCatalog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanCreate) GetBrokerCatalogOk() (*BrokerCatalog, bool) {
	if o == nil || IsNil(o.BrokerCatalog) {
		return nil, false
	}
	return o.BrokerCatalog, true
}

// HasBrokerCatalog returns a boolean if a field has been set.
func (o *ServicePlanCreate) HasBrokerCatalog() bool {
	if o != nil && !IsNil(o.BrokerCatalog) {
		return true
	}

	return false
}

// SetBrokerCatalog gets a reference to the given BrokerCatalog and assigns it to the BrokerCatalog field.
func (o *ServicePlanCreate) SetBrokerCatalog(v BrokerCatalog) {
	o.BrokerCatalog = &v
}

// GetCosts returns the Costs field value if set, zero value otherwise.
func (o *ServicePlanCreate) GetCosts() []Cost {
	if o == nil || IsNil(o.Costs) {
		var ret []Cost
		return ret
	}
	return o.Costs
}

// GetCostsOk returns a tuple with the Costs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanCreate) GetCostsOk() ([]Cost, bool) {
	if o == nil || IsNil(o.Costs) {
		return nil, false
	}
	return o.Costs, true
}

// HasCosts returns a boolean if a field has been set.
func (o *ServicePlanCreate) HasCosts() bool {
	if o != nil && !IsNil(o.Costs) {
		return true
	}

	return false
}

// SetCosts gets a reference to the given []Cost and assigns it to the Costs field.
func (o *ServicePlanCreate) SetCosts(v []Cost) {
	o.Costs = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ServicePlanCreate) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanCreate) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ServicePlanCreate) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ServicePlanCreate) SetDescription(v string) {
	o.Description = &v
}

// GetFree returns the Free field value if set, zero value otherwise.
func (o *ServicePlanCreate) GetFree() bool {
	if o == nil || IsNil(o.Free) {
		var ret bool
		return ret
	}
	return *o.Free
}

// GetFreeOk returns a tuple with the Free field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanCreate) GetFreeOk() (*bool, bool) {
	if o == nil || IsNil(o.Free) {
		return nil, false
	}
	return o.Free, true
}

// HasFree returns a boolean if a field has been set.
func (o *ServicePlanCreate) HasFree() bool {
	if o != nil && !IsNil(o.Free) {
		return true
	}

	return false
}

// SetFree gets a reference to the given bool and assigns it to the Free field.
func (o *ServicePlanCreate) SetFree(v bool) {
	o.Free = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ServicePlanCreate) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanCreate) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ServicePlanCreate) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ServicePlanCreate) SetName(v string) {
	o.Name = &v
}

// GetRelationships returns the Relationships field value if set, zero value otherwise.
func (o *ServicePlanCreate) GetRelationships() ServicePlanRelationships {
	if o == nil || IsNil(o.Relationships) {
		var ret ServicePlanRelationships
		return ret
	}
	return *o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanCreate) GetRelationshipsOk() (*ServicePlanRelationships, bool) {
	if o == nil || IsNil(o.Relationships) {
		return nil, false
	}
	return o.Relationships, true
}

// HasRelationships returns a boolean if a field has been set.
func (o *ServicePlanCreate) HasRelationships() bool {
	if o != nil && !IsNil(o.Relationships) {
		return true
	}

	return false
}

// SetRelationships gets a reference to the given ServicePlanRelationships and assigns it to the Relationships field.
func (o *ServicePlanCreate) SetRelationships(v ServicePlanRelationships) {
	o.Relationships = &v
}

// GetSchemas returns the Schemas field value if set, zero value otherwise.
func (o *ServicePlanCreate) GetSchemas() PlanSchemas {
	if o == nil || IsNil(o.Schemas) {
		var ret PlanSchemas
		return ret
	}
	return *o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanCreate) GetSchemasOk() (*PlanSchemas, bool) {
	if o == nil || IsNil(o.Schemas) {
		return nil, false
	}
	return o.Schemas, true
}

// HasSchemas returns a boolean if a field has been set.
func (o *ServicePlanCreate) HasSchemas() bool {
	if o != nil && !IsNil(o.Schemas) {
		return true
	}

	return false
}

// SetSchemas gets a reference to the given PlanSchemas and assigns it to the Schemas field.
func (o *ServicePlanCreate) SetSchemas(v PlanSchemas) {
	o.Schemas = &v
}

// GetVisibilityType returns the VisibilityType field value if set, zero value otherwise.
func (o *ServicePlanCreate) GetVisibilityType() string {
	if o == nil || IsNil(o.VisibilityType) {
		var ret string
		return ret
	}
	return *o.VisibilityType
}

// GetVisibilityTypeOk returns a tuple with the VisibilityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanCreate) GetVisibilityTypeOk() (*string, bool) {
	if o == nil || IsNil(o.VisibilityType) {
		return nil, false
	}
	return o.VisibilityType, true
}

// HasVisibilityType returns a boolean if a field has been set.
func (o *ServicePlanCreate) HasVisibilityType() bool {
	if o != nil && !IsNil(o.VisibilityType) {
		return true
	}

	return false
}

// SetVisibilityType gets a reference to the given string and assigns it to the VisibilityType field.
func (o *ServicePlanCreate) SetVisibilityType(v string) {
	o.VisibilityType = &v
}

func (o ServicePlanCreate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServicePlanCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Available) {
		toSerialize["available"] = o.Available
	}
	if !IsNil(o.BrokerCatalog) {
		toSerialize["broker_catalog"] = o.BrokerCatalog
	}
	if !IsNil(o.Costs) {
		toSerialize["costs"] = o.Costs
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Free) {
		toSerialize["free"] = o.Free
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Relationships) {
		toSerialize["relationships"] = o.Relationships
	}
	if !IsNil(o.Schemas) {
		toSerialize["schemas"] = o.Schemas
	}
	if !IsNil(o.VisibilityType) {
		toSerialize["visibility_type"] = o.VisibilityType
	}
	return toSerialize, nil
}

type NullableServicePlanCreate struct {
	value *ServicePlanCreate
	isSet bool
}

func (v NullableServicePlanCreate) Get() *ServicePlanCreate {
	return v.value
}

func (v *NullableServicePlanCreate) Set(val *ServicePlanCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableServicePlanCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableServicePlanCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServicePlanCreate(val *ServicePlanCreate) *NullableServicePlanCreate {
	return &NullableServicePlanCreate{value: val, isSet: true}
}

func (v NullableServicePlanCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServicePlanCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


