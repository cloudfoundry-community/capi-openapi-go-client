/*
Cloud Controller API

API specification for managing environment variable groups in Cloud Controller.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the V3RoutesPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V3RoutesPostRequest{}

// V3RoutesPostRequest struct for V3RoutesPostRequest
type V3RoutesPostRequest struct {
	Host *string `json:"host,omitempty"`
	Metadata *V3AppsGuidDropletsCurrentGet200ResponseMetadata `json:"metadata,omitempty"`
	Path *string `json:"path,omitempty"`
	Port *int32 `json:"port,omitempty"`
	Relationships *V3RoutesPostRequestRelationships `json:"relationships,omitempty"`
}

// NewV3RoutesPostRequest instantiates a new V3RoutesPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV3RoutesPostRequest() *V3RoutesPostRequest {
	this := V3RoutesPostRequest{}
	return &this
}

// NewV3RoutesPostRequestWithDefaults instantiates a new V3RoutesPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV3RoutesPostRequestWithDefaults() *V3RoutesPostRequest {
	this := V3RoutesPostRequest{}
	return &this
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *V3RoutesPostRequest) GetHost() string {
	if o == nil || IsNil(o.Host) {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3RoutesPostRequest) GetHostOk() (*string, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *V3RoutesPostRequest) HasHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *V3RoutesPostRequest) SetHost(v string) {
	o.Host = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *V3RoutesPostRequest) GetMetadata() V3AppsGuidDropletsCurrentGet200ResponseMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret V3AppsGuidDropletsCurrentGet200ResponseMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3RoutesPostRequest) GetMetadataOk() (*V3AppsGuidDropletsCurrentGet200ResponseMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *V3RoutesPostRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given V3AppsGuidDropletsCurrentGet200ResponseMetadata and assigns it to the Metadata field.
func (o *V3RoutesPostRequest) SetMetadata(v V3AppsGuidDropletsCurrentGet200ResponseMetadata) {
	o.Metadata = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *V3RoutesPostRequest) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3RoutesPostRequest) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *V3RoutesPostRequest) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *V3RoutesPostRequest) SetPath(v string) {
	o.Path = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *V3RoutesPostRequest) GetPort() int32 {
	if o == nil || IsNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3RoutesPostRequest) GetPortOk() (*int32, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *V3RoutesPostRequest) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *V3RoutesPostRequest) SetPort(v int32) {
	o.Port = &v
}

// GetRelationships returns the Relationships field value if set, zero value otherwise.
func (o *V3RoutesPostRequest) GetRelationships() V3RoutesPostRequestRelationships {
	if o == nil || IsNil(o.Relationships) {
		var ret V3RoutesPostRequestRelationships
		return ret
	}
	return *o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3RoutesPostRequest) GetRelationshipsOk() (*V3RoutesPostRequestRelationships, bool) {
	if o == nil || IsNil(o.Relationships) {
		return nil, false
	}
	return o.Relationships, true
}

// HasRelationships returns a boolean if a field has been set.
func (o *V3RoutesPostRequest) HasRelationships() bool {
	if o != nil && !IsNil(o.Relationships) {
		return true
	}

	return false
}

// SetRelationships gets a reference to the given V3RoutesPostRequestRelationships and assigns it to the Relationships field.
func (o *V3RoutesPostRequest) SetRelationships(v V3RoutesPostRequestRelationships) {
	o.Relationships = &v
}

func (o V3RoutesPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V3RoutesPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.Relationships) {
		toSerialize["relationships"] = o.Relationships
	}
	return toSerialize, nil
}

type NullableV3RoutesPostRequest struct {
	value *V3RoutesPostRequest
	isSet bool
}

func (v NullableV3RoutesPostRequest) Get() *V3RoutesPostRequest {
	return v.value
}

func (v *NullableV3RoutesPostRequest) Set(val *V3RoutesPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV3RoutesPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV3RoutesPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV3RoutesPostRequest(val *V3RoutesPostRequest) *NullableV3RoutesPostRequest {
	return &NullableV3RoutesPostRequest{value: val, isSet: true}
}

func (v NullableV3RoutesPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV3RoutesPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


