/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the SidecarUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SidecarUpdate{}

// SidecarUpdate struct for SidecarUpdate
type SidecarUpdate struct {
	// Command to execute for the sidecar process
	Command *string `json:"command,omitempty"`
	// Memory allocation for the sidecar in MB
	MemoryInMb *int32 `json:"memory_in_mb,omitempty"`
	Metadata *SidecarCreateMetadata `json:"metadata,omitempty"`
	// Human-readable name for the sidecar
	Name *string `json:"name,omitempty"`
	// Process types this sidecar runs alongside
	ProcessTypes []string `json:"process_types,omitempty"`
}

// NewSidecarUpdate instantiates a new SidecarUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSidecarUpdate() *SidecarUpdate {
	this := SidecarUpdate{}
	return &this
}

// NewSidecarUpdateWithDefaults instantiates a new SidecarUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSidecarUpdateWithDefaults() *SidecarUpdate {
	this := SidecarUpdate{}
	return &this
}

// GetCommand returns the Command field value if set, zero value otherwise.
func (o *SidecarUpdate) GetCommand() string {
	if o == nil || IsNil(o.Command) {
		var ret string
		return ret
	}
	return *o.Command
}

// GetCommandOk returns a tuple with the Command field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SidecarUpdate) GetCommandOk() (*string, bool) {
	if o == nil || IsNil(o.Command) {
		return nil, false
	}
	return o.Command, true
}

// HasCommand returns a boolean if a field has been set.
func (o *SidecarUpdate) HasCommand() bool {
	if o != nil && !IsNil(o.Command) {
		return true
	}

	return false
}

// SetCommand gets a reference to the given string and assigns it to the Command field.
func (o *SidecarUpdate) SetCommand(v string) {
	o.Command = &v
}

// GetMemoryInMb returns the MemoryInMb field value if set, zero value otherwise.
func (o *SidecarUpdate) GetMemoryInMb() int32 {
	if o == nil || IsNil(o.MemoryInMb) {
		var ret int32
		return ret
	}
	return *o.MemoryInMb
}

// GetMemoryInMbOk returns a tuple with the MemoryInMb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SidecarUpdate) GetMemoryInMbOk() (*int32, bool) {
	if o == nil || IsNil(o.MemoryInMb) {
		return nil, false
	}
	return o.MemoryInMb, true
}

// HasMemoryInMb returns a boolean if a field has been set.
func (o *SidecarUpdate) HasMemoryInMb() bool {
	if o != nil && !IsNil(o.MemoryInMb) {
		return true
	}

	return false
}

// SetMemoryInMb gets a reference to the given int32 and assigns it to the MemoryInMb field.
func (o *SidecarUpdate) SetMemoryInMb(v int32) {
	o.MemoryInMb = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *SidecarUpdate) GetMetadata() SidecarCreateMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret SidecarCreateMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SidecarUpdate) GetMetadataOk() (*SidecarCreateMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *SidecarUpdate) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given SidecarCreateMetadata and assigns it to the Metadata field.
func (o *SidecarUpdate) SetMetadata(v SidecarCreateMetadata) {
	o.Metadata = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SidecarUpdate) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SidecarUpdate) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SidecarUpdate) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SidecarUpdate) SetName(v string) {
	o.Name = &v
}

// GetProcessTypes returns the ProcessTypes field value if set, zero value otherwise.
func (o *SidecarUpdate) GetProcessTypes() []string {
	if o == nil || IsNil(o.ProcessTypes) {
		var ret []string
		return ret
	}
	return o.ProcessTypes
}

// GetProcessTypesOk returns a tuple with the ProcessTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SidecarUpdate) GetProcessTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.ProcessTypes) {
		return nil, false
	}
	return o.ProcessTypes, true
}

// HasProcessTypes returns a boolean if a field has been set.
func (o *SidecarUpdate) HasProcessTypes() bool {
	if o != nil && !IsNil(o.ProcessTypes) {
		return true
	}

	return false
}

// SetProcessTypes gets a reference to the given []string and assigns it to the ProcessTypes field.
func (o *SidecarUpdate) SetProcessTypes(v []string) {
	o.ProcessTypes = v
}

func (o SidecarUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SidecarUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Command) {
		toSerialize["command"] = o.Command
	}
	if !IsNil(o.MemoryInMb) {
		toSerialize["memory_in_mb"] = o.MemoryInMb
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ProcessTypes) {
		toSerialize["process_types"] = o.ProcessTypes
	}
	return toSerialize, nil
}

type NullableSidecarUpdate struct {
	value *SidecarUpdate
	isSet bool
}

func (v NullableSidecarUpdate) Get() *SidecarUpdate {
	return v.value
}

func (v *NullableSidecarUpdate) Set(val *SidecarUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableSidecarUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableSidecarUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSidecarUpdate(val *SidecarUpdate) *NullableSidecarUpdate {
	return &NullableSidecarUpdate{value: val, isSet: true}
}

func (v NullableSidecarUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSidecarUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


