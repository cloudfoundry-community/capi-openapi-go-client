/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the Sidecar type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Sidecar{}

// Sidecar struct for Sidecar
type Sidecar struct {
	// Command to execute for the sidecar process
	Command string `json:"command"`
	// Timestamp when the sidecar was created
	CreatedAt time.Time `json:"created_at"`
	// Unique identifier for the sidecar
	Guid string `json:"guid"`
	Links SidecarLinks `json:"links"`
	// Memory allocation for the sidecar in MB
	MemoryInMb int32 `json:"memory_in_mb"`
	Metadata *SidecarMetadata `json:"metadata,omitempty"`
	// Human-readable name for the sidecar
	Name string `json:"name"`
	// How the sidecar was created
	Origin string `json:"origin"`
	// Process types this sidecar runs alongside
	ProcessTypes []string `json:"process_types"`
	Relationships SidecarRelationships `json:"relationships"`
	// Timestamp when the sidecar was last updated
	UpdatedAt time.Time `json:"updated_at"`
}

type _Sidecar Sidecar

// NewSidecar instantiates a new Sidecar object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSidecar(command string, createdAt time.Time, guid string, links SidecarLinks, memoryInMb int32, name string, origin string, processTypes []string, relationships SidecarRelationships, updatedAt time.Time) *Sidecar {
	this := Sidecar{}
	this.Command = command
	this.CreatedAt = createdAt
	this.Guid = guid
	this.Links = links
	this.MemoryInMb = memoryInMb
	this.Name = name
	this.Origin = origin
	this.ProcessTypes = processTypes
	this.Relationships = relationships
	this.UpdatedAt = updatedAt
	return &this
}

// NewSidecarWithDefaults instantiates a new Sidecar object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSidecarWithDefaults() *Sidecar {
	this := Sidecar{}
	return &this
}

// GetCommand returns the Command field value
func (o *Sidecar) GetCommand() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Command
}

// GetCommandOk returns a tuple with the Command field value
// and a boolean to check if the value has been set.
func (o *Sidecar) GetCommandOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Command, true
}

// SetCommand sets field value
func (o *Sidecar) SetCommand(v string) {
	o.Command = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Sidecar) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Sidecar) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Sidecar) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetGuid returns the Guid field value
func (o *Sidecar) GetGuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Guid
}

// GetGuidOk returns a tuple with the Guid field value
// and a boolean to check if the value has been set.
func (o *Sidecar) GetGuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Guid, true
}

// SetGuid sets field value
func (o *Sidecar) SetGuid(v string) {
	o.Guid = v
}

// GetLinks returns the Links field value
func (o *Sidecar) GetLinks() SidecarLinks {
	if o == nil {
		var ret SidecarLinks
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *Sidecar) GetLinksOk() (*SidecarLinks, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Links, true
}

// SetLinks sets field value
func (o *Sidecar) SetLinks(v SidecarLinks) {
	o.Links = v
}

// GetMemoryInMb returns the MemoryInMb field value
func (o *Sidecar) GetMemoryInMb() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MemoryInMb
}

// GetMemoryInMbOk returns a tuple with the MemoryInMb field value
// and a boolean to check if the value has been set.
func (o *Sidecar) GetMemoryInMbOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MemoryInMb, true
}

// SetMemoryInMb sets field value
func (o *Sidecar) SetMemoryInMb(v int32) {
	o.MemoryInMb = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *Sidecar) GetMetadata() SidecarMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret SidecarMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sidecar) GetMetadataOk() (*SidecarMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *Sidecar) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given SidecarMetadata and assigns it to the Metadata field.
func (o *Sidecar) SetMetadata(v SidecarMetadata) {
	o.Metadata = &v
}

// GetName returns the Name field value
func (o *Sidecar) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Sidecar) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Sidecar) SetName(v string) {
	o.Name = v
}

// GetOrigin returns the Origin field value
func (o *Sidecar) GetOrigin() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Origin
}

// GetOriginOk returns a tuple with the Origin field value
// and a boolean to check if the value has been set.
func (o *Sidecar) GetOriginOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Origin, true
}

// SetOrigin sets field value
func (o *Sidecar) SetOrigin(v string) {
	o.Origin = v
}

// GetProcessTypes returns the ProcessTypes field value
func (o *Sidecar) GetProcessTypes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ProcessTypes
}

// GetProcessTypesOk returns a tuple with the ProcessTypes field value
// and a boolean to check if the value has been set.
func (o *Sidecar) GetProcessTypesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProcessTypes, true
}

// SetProcessTypes sets field value
func (o *Sidecar) SetProcessTypes(v []string) {
	o.ProcessTypes = v
}

// GetRelationships returns the Relationships field value
func (o *Sidecar) GetRelationships() SidecarRelationships {
	if o == nil {
		var ret SidecarRelationships
		return ret
	}

	return o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value
// and a boolean to check if the value has been set.
func (o *Sidecar) GetRelationshipsOk() (*SidecarRelationships, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Relationships, true
}

// SetRelationships sets field value
func (o *Sidecar) SetRelationships(v SidecarRelationships) {
	o.Relationships = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Sidecar) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Sidecar) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Sidecar) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o Sidecar) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Sidecar) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["command"] = o.Command
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["guid"] = o.Guid
	toSerialize["links"] = o.Links
	toSerialize["memory_in_mb"] = o.MemoryInMb
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	toSerialize["name"] = o.Name
	toSerialize["origin"] = o.Origin
	toSerialize["process_types"] = o.ProcessTypes
	toSerialize["relationships"] = o.Relationships
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *Sidecar) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"command",
		"created_at",
		"guid",
		"links",
		"memory_in_mb",
		"name",
		"origin",
		"process_types",
		"relationships",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSidecar := _Sidecar{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSidecar)

	if err != nil {
		return err
	}

	*o = Sidecar(varSidecar)

	return err
}

type NullableSidecar struct {
	value *Sidecar
	isSet bool
}

func (v NullableSidecar) Get() *Sidecar {
	return v.value
}

func (v *NullableSidecar) Set(val *Sidecar) {
	v.value = val
	v.isSet = true
}

func (v NullableSidecar) IsSet() bool {
	return v.isSet
}

func (v *NullableSidecar) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSidecar(val *Sidecar) *NullableSidecar {
	return &NullableSidecar{value: val, isSet: true}
}

func (v NullableSidecar) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSidecar) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


