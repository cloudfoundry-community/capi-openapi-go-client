/*
Cloud Controller API

API specification for managing environment variable groups in Cloud Controller.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the ResourceMatchObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceMatchObject{}

// ResourceMatchObject struct for ResourceMatchObject
type ResourceMatchObject struct {
	Checksum *V3PackagesGuidUploadPostRequestResourcesInnerChecksum `json:"checksum,omitempty"`
	Mode *string `json:"mode,omitempty"`
	Path *string `json:"path,omitempty"`
	SizeInBytes *int32 `json:"size_in_bytes,omitempty"`
}

// NewResourceMatchObject instantiates a new ResourceMatchObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceMatchObject() *ResourceMatchObject {
	this := ResourceMatchObject{}
	return &this
}

// NewResourceMatchObjectWithDefaults instantiates a new ResourceMatchObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceMatchObjectWithDefaults() *ResourceMatchObject {
	this := ResourceMatchObject{}
	return &this
}

// GetChecksum returns the Checksum field value if set, zero value otherwise.
func (o *ResourceMatchObject) GetChecksum() V3PackagesGuidUploadPostRequestResourcesInnerChecksum {
	if o == nil || IsNil(o.Checksum) {
		var ret V3PackagesGuidUploadPostRequestResourcesInnerChecksum
		return ret
	}
	return *o.Checksum
}

// GetChecksumOk returns a tuple with the Checksum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceMatchObject) GetChecksumOk() (*V3PackagesGuidUploadPostRequestResourcesInnerChecksum, bool) {
	if o == nil || IsNil(o.Checksum) {
		return nil, false
	}
	return o.Checksum, true
}

// HasChecksum returns a boolean if a field has been set.
func (o *ResourceMatchObject) HasChecksum() bool {
	if o != nil && !IsNil(o.Checksum) {
		return true
	}

	return false
}

// SetChecksum gets a reference to the given V3PackagesGuidUploadPostRequestResourcesInnerChecksum and assigns it to the Checksum field.
func (o *ResourceMatchObject) SetChecksum(v V3PackagesGuidUploadPostRequestResourcesInnerChecksum) {
	o.Checksum = &v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *ResourceMatchObject) GetMode() string {
	if o == nil || IsNil(o.Mode) {
		var ret string
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceMatchObject) GetModeOk() (*string, bool) {
	if o == nil || IsNil(o.Mode) {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *ResourceMatchObject) HasMode() bool {
	if o != nil && !IsNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given string and assigns it to the Mode field.
func (o *ResourceMatchObject) SetMode(v string) {
	o.Mode = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *ResourceMatchObject) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceMatchObject) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *ResourceMatchObject) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *ResourceMatchObject) SetPath(v string) {
	o.Path = &v
}

// GetSizeInBytes returns the SizeInBytes field value if set, zero value otherwise.
func (o *ResourceMatchObject) GetSizeInBytes() int32 {
	if o == nil || IsNil(o.SizeInBytes) {
		var ret int32
		return ret
	}
	return *o.SizeInBytes
}

// GetSizeInBytesOk returns a tuple with the SizeInBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceMatchObject) GetSizeInBytesOk() (*int32, bool) {
	if o == nil || IsNil(o.SizeInBytes) {
		return nil, false
	}
	return o.SizeInBytes, true
}

// HasSizeInBytes returns a boolean if a field has been set.
func (o *ResourceMatchObject) HasSizeInBytes() bool {
	if o != nil && !IsNil(o.SizeInBytes) {
		return true
	}

	return false
}

// SetSizeInBytes gets a reference to the given int32 and assigns it to the SizeInBytes field.
func (o *ResourceMatchObject) SetSizeInBytes(v int32) {
	o.SizeInBytes = &v
}

func (o ResourceMatchObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceMatchObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Checksum) {
		toSerialize["checksum"] = o.Checksum
	}
	if !IsNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.SizeInBytes) {
		toSerialize["size_in_bytes"] = o.SizeInBytes
	}
	return toSerialize, nil
}

type NullableResourceMatchObject struct {
	value *ResourceMatchObject
	isSet bool
}

func (v NullableResourceMatchObject) Get() *ResourceMatchObject {
	return v.value
}

func (v *NullableResourceMatchObject) Set(val *ResourceMatchObject) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceMatchObject) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceMatchObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceMatchObject(val *ResourceMatchObject) *NullableResourceMatchObject {
	return &NullableResourceMatchObject{value: val, isSet: true}
}

func (v NullableResourceMatchObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceMatchObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


