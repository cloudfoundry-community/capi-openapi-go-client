/*
Cloud Controller API

API specification for managing environment variable groups in Cloud Controller.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
	"time"
)

// checks if the SecurityGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityGroup{}

// SecurityGroup struct for SecurityGroup
type SecurityGroup struct {
	CreatedAt *time.Time `json:"created_at,omitempty"`
	GloballyEnabled *SecurityGroupGloballyEnabled `json:"globally_enabled,omitempty"`
	Guid *string `json:"guid,omitempty"`
	Links *SecurityGroupLinks `json:"links,omitempty"`
	Name *string `json:"name,omitempty"`
	Relationships *SecurityGroupRelationships `json:"relationships,omitempty"`
	Rules []Rule `json:"rules,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// NewSecurityGroup instantiates a new SecurityGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityGroup() *SecurityGroup {
	this := SecurityGroup{}
	return &this
}

// NewSecurityGroupWithDefaults instantiates a new SecurityGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityGroupWithDefaults() *SecurityGroup {
	this := SecurityGroup{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *SecurityGroup) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *SecurityGroup) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *SecurityGroup) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetGloballyEnabled returns the GloballyEnabled field value if set, zero value otherwise.
func (o *SecurityGroup) GetGloballyEnabled() SecurityGroupGloballyEnabled {
	if o == nil || IsNil(o.GloballyEnabled) {
		var ret SecurityGroupGloballyEnabled
		return ret
	}
	return *o.GloballyEnabled
}

// GetGloballyEnabledOk returns a tuple with the GloballyEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetGloballyEnabledOk() (*SecurityGroupGloballyEnabled, bool) {
	if o == nil || IsNil(o.GloballyEnabled) {
		return nil, false
	}
	return o.GloballyEnabled, true
}

// HasGloballyEnabled returns a boolean if a field has been set.
func (o *SecurityGroup) HasGloballyEnabled() bool {
	if o != nil && !IsNil(o.GloballyEnabled) {
		return true
	}

	return false
}

// SetGloballyEnabled gets a reference to the given SecurityGroupGloballyEnabled and assigns it to the GloballyEnabled field.
func (o *SecurityGroup) SetGloballyEnabled(v SecurityGroupGloballyEnabled) {
	o.GloballyEnabled = &v
}

// GetGuid returns the Guid field value if set, zero value otherwise.
func (o *SecurityGroup) GetGuid() string {
	if o == nil || IsNil(o.Guid) {
		var ret string
		return ret
	}
	return *o.Guid
}

// GetGuidOk returns a tuple with the Guid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetGuidOk() (*string, bool) {
	if o == nil || IsNil(o.Guid) {
		return nil, false
	}
	return o.Guid, true
}

// HasGuid returns a boolean if a field has been set.
func (o *SecurityGroup) HasGuid() bool {
	if o != nil && !IsNil(o.Guid) {
		return true
	}

	return false
}

// SetGuid gets a reference to the given string and assigns it to the Guid field.
func (o *SecurityGroup) SetGuid(v string) {
	o.Guid = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *SecurityGroup) GetLinks() SecurityGroupLinks {
	if o == nil || IsNil(o.Links) {
		var ret SecurityGroupLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetLinksOk() (*SecurityGroupLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *SecurityGroup) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given SecurityGroupLinks and assigns it to the Links field.
func (o *SecurityGroup) SetLinks(v SecurityGroupLinks) {
	o.Links = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SecurityGroup) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SecurityGroup) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SecurityGroup) SetName(v string) {
	o.Name = &v
}

// GetRelationships returns the Relationships field value if set, zero value otherwise.
func (o *SecurityGroup) GetRelationships() SecurityGroupRelationships {
	if o == nil || IsNil(o.Relationships) {
		var ret SecurityGroupRelationships
		return ret
	}
	return *o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetRelationshipsOk() (*SecurityGroupRelationships, bool) {
	if o == nil || IsNil(o.Relationships) {
		return nil, false
	}
	return o.Relationships, true
}

// HasRelationships returns a boolean if a field has been set.
func (o *SecurityGroup) HasRelationships() bool {
	if o != nil && !IsNil(o.Relationships) {
		return true
	}

	return false
}

// SetRelationships gets a reference to the given SecurityGroupRelationships and assigns it to the Relationships field.
func (o *SecurityGroup) SetRelationships(v SecurityGroupRelationships) {
	o.Relationships = &v
}

// GetRules returns the Rules field value if set, zero value otherwise.
func (o *SecurityGroup) GetRules() []Rule {
	if o == nil || IsNil(o.Rules) {
		var ret []Rule
		return ret
	}
	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetRulesOk() ([]Rule, bool) {
	if o == nil || IsNil(o.Rules) {
		return nil, false
	}
	return o.Rules, true
}

// HasRules returns a boolean if a field has been set.
func (o *SecurityGroup) HasRules() bool {
	if o != nil && !IsNil(o.Rules) {
		return true
	}

	return false
}

// SetRules gets a reference to the given []Rule and assigns it to the Rules field.
func (o *SecurityGroup) SetRules(v []Rule) {
	o.Rules = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *SecurityGroup) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *SecurityGroup) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *SecurityGroup) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o SecurityGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecurityGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.GloballyEnabled) {
		toSerialize["globally_enabled"] = o.GloballyEnabled
	}
	if !IsNil(o.Guid) {
		toSerialize["guid"] = o.Guid
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Relationships) {
		toSerialize["relationships"] = o.Relationships
	}
	if !IsNil(o.Rules) {
		toSerialize["rules"] = o.Rules
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableSecurityGroup struct {
	value *SecurityGroup
	isSet bool
}

func (v NullableSecurityGroup) Get() *SecurityGroup {
	return v.value
}

func (v *NullableSecurityGroup) Set(val *SecurityGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityGroup(val *SecurityGroup) *NullableSecurityGroup {
	return &NullableSecurityGroup{value: val, isSet: true}
}

func (v NullableSecurityGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


