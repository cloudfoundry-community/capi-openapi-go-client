/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the V3SpacesPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V3SpacesPostRequest{}

// V3SpacesPostRequest struct for V3SpacesPostRequest
type V3SpacesPostRequest struct {
	Metadata *V3DropletsGuidPatchRequestMetadata `json:"metadata,omitempty"`
	Name string `json:"name"`
	Relationships V3SpacesPostRequestRelationships `json:"relationships"`
}

type _V3SpacesPostRequest V3SpacesPostRequest

// NewV3SpacesPostRequest instantiates a new V3SpacesPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV3SpacesPostRequest(name string, relationships V3SpacesPostRequestRelationships) *V3SpacesPostRequest {
	this := V3SpacesPostRequest{}
	this.Name = name
	this.Relationships = relationships
	return &this
}

// NewV3SpacesPostRequestWithDefaults instantiates a new V3SpacesPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV3SpacesPostRequestWithDefaults() *V3SpacesPostRequest {
	this := V3SpacesPostRequest{}
	return &this
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *V3SpacesPostRequest) GetMetadata() V3DropletsGuidPatchRequestMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret V3DropletsGuidPatchRequestMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3SpacesPostRequest) GetMetadataOk() (*V3DropletsGuidPatchRequestMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *V3SpacesPostRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given V3DropletsGuidPatchRequestMetadata and assigns it to the Metadata field.
func (o *V3SpacesPostRequest) SetMetadata(v V3DropletsGuidPatchRequestMetadata) {
	o.Metadata = &v
}

// GetName returns the Name field value
func (o *V3SpacesPostRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *V3SpacesPostRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *V3SpacesPostRequest) SetName(v string) {
	o.Name = v
}

// GetRelationships returns the Relationships field value
func (o *V3SpacesPostRequest) GetRelationships() V3SpacesPostRequestRelationships {
	if o == nil {
		var ret V3SpacesPostRequestRelationships
		return ret
	}

	return o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value
// and a boolean to check if the value has been set.
func (o *V3SpacesPostRequest) GetRelationshipsOk() (*V3SpacesPostRequestRelationships, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Relationships, true
}

// SetRelationships sets field value
func (o *V3SpacesPostRequest) SetRelationships(v V3SpacesPostRequestRelationships) {
	o.Relationships = v
}

func (o V3SpacesPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V3SpacesPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	toSerialize["name"] = o.Name
	toSerialize["relationships"] = o.Relationships
	return toSerialize, nil
}

func (o *V3SpacesPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"relationships",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV3SpacesPostRequest := _V3SpacesPostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varV3SpacesPostRequest)

	if err != nil {
		return err
	}

	*o = V3SpacesPostRequest(varV3SpacesPostRequest)

	return err
}

type NullableV3SpacesPostRequest struct {
	value *V3SpacesPostRequest
	isSet bool
}

func (v NullableV3SpacesPostRequest) Get() *V3SpacesPostRequest {
	return v.value
}

func (v *NullableV3SpacesPostRequest) Set(val *V3SpacesPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV3SpacesPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV3SpacesPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV3SpacesPostRequest(val *V3SpacesPostRequest) *NullableV3SpacesPostRequest {
	return &NullableV3SpacesPostRequest{value: val, isSet: true}
}

func (v NullableV3SpacesPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV3SpacesPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


