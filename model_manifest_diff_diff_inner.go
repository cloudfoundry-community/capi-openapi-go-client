/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ManifestDiffDiffInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManifestDiffDiffInner{}

// ManifestDiffDiffInner struct for ManifestDiffDiffInner
type ManifestDiffDiffInner struct {
	// Name of the application
	AppName string `json:"app_name"`
	// List of changes for this application
	Changes []ManifestDiffDiffInnerChangesInner `json:"changes"`
}

type _ManifestDiffDiffInner ManifestDiffDiffInner

// NewManifestDiffDiffInner instantiates a new ManifestDiffDiffInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManifestDiffDiffInner(appName string, changes []ManifestDiffDiffInnerChangesInner) *ManifestDiffDiffInner {
	this := ManifestDiffDiffInner{}
	this.AppName = appName
	this.Changes = changes
	return &this
}

// NewManifestDiffDiffInnerWithDefaults instantiates a new ManifestDiffDiffInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManifestDiffDiffInnerWithDefaults() *ManifestDiffDiffInner {
	this := ManifestDiffDiffInner{}
	return &this
}

// GetAppName returns the AppName field value
func (o *ManifestDiffDiffInner) GetAppName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppName
}

// GetAppNameOk returns a tuple with the AppName field value
// and a boolean to check if the value has been set.
func (o *ManifestDiffDiffInner) GetAppNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppName, true
}

// SetAppName sets field value
func (o *ManifestDiffDiffInner) SetAppName(v string) {
	o.AppName = v
}

// GetChanges returns the Changes field value
func (o *ManifestDiffDiffInner) GetChanges() []ManifestDiffDiffInnerChangesInner {
	if o == nil {
		var ret []ManifestDiffDiffInnerChangesInner
		return ret
	}

	return o.Changes
}

// GetChangesOk returns a tuple with the Changes field value
// and a boolean to check if the value has been set.
func (o *ManifestDiffDiffInner) GetChangesOk() ([]ManifestDiffDiffInnerChangesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Changes, true
}

// SetChanges sets field value
func (o *ManifestDiffDiffInner) SetChanges(v []ManifestDiffDiffInnerChangesInner) {
	o.Changes = v
}

func (o ManifestDiffDiffInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManifestDiffDiffInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["app_name"] = o.AppName
	toSerialize["changes"] = o.Changes
	return toSerialize, nil
}

func (o *ManifestDiffDiffInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"app_name",
		"changes",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varManifestDiffDiffInner := _ManifestDiffDiffInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varManifestDiffDiffInner)

	if err != nil {
		return err
	}

	*o = ManifestDiffDiffInner(varManifestDiffDiffInner)

	return err
}

type NullableManifestDiffDiffInner struct {
	value *ManifestDiffDiffInner
	isSet bool
}

func (v NullableManifestDiffDiffInner) Get() *ManifestDiffDiffInner {
	return v.value
}

func (v *NullableManifestDiffDiffInner) Set(val *ManifestDiffDiffInner) {
	v.value = val
	v.isSet = true
}

func (v NullableManifestDiffDiffInner) IsSet() bool {
	return v.isSet
}

func (v *NullableManifestDiffDiffInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManifestDiffDiffInner(val *ManifestDiffDiffInner) *NullableManifestDiffDiffInner {
	return &NullableManifestDiffDiffInner{value: val, isSet: true}
}

func (v NullableManifestDiffDiffInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManifestDiffDiffInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


