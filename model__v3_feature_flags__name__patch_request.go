/*
Cloud Controller API

API specification for managing environment variable groups in Cloud Controller.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the V3FeatureFlagsNamePatchRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V3FeatureFlagsNamePatchRequest{}

// V3FeatureFlagsNamePatchRequest struct for V3FeatureFlagsNamePatchRequest
type V3FeatureFlagsNamePatchRequest struct {
	CustomErrorMessage *string `json:"custom_error_message,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
}

// NewV3FeatureFlagsNamePatchRequest instantiates a new V3FeatureFlagsNamePatchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV3FeatureFlagsNamePatchRequest() *V3FeatureFlagsNamePatchRequest {
	this := V3FeatureFlagsNamePatchRequest{}
	return &this
}

// NewV3FeatureFlagsNamePatchRequestWithDefaults instantiates a new V3FeatureFlagsNamePatchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV3FeatureFlagsNamePatchRequestWithDefaults() *V3FeatureFlagsNamePatchRequest {
	this := V3FeatureFlagsNamePatchRequest{}
	return &this
}

// GetCustomErrorMessage returns the CustomErrorMessage field value if set, zero value otherwise.
func (o *V3FeatureFlagsNamePatchRequest) GetCustomErrorMessage() string {
	if o == nil || IsNil(o.CustomErrorMessage) {
		var ret string
		return ret
	}
	return *o.CustomErrorMessage
}

// GetCustomErrorMessageOk returns a tuple with the CustomErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3FeatureFlagsNamePatchRequest) GetCustomErrorMessageOk() (*string, bool) {
	if o == nil || IsNil(o.CustomErrorMessage) {
		return nil, false
	}
	return o.CustomErrorMessage, true
}

// HasCustomErrorMessage returns a boolean if a field has been set.
func (o *V3FeatureFlagsNamePatchRequest) HasCustomErrorMessage() bool {
	if o != nil && !IsNil(o.CustomErrorMessage) {
		return true
	}

	return false
}

// SetCustomErrorMessage gets a reference to the given string and assigns it to the CustomErrorMessage field.
func (o *V3FeatureFlagsNamePatchRequest) SetCustomErrorMessage(v string) {
	o.CustomErrorMessage = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *V3FeatureFlagsNamePatchRequest) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3FeatureFlagsNamePatchRequest) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *V3FeatureFlagsNamePatchRequest) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *V3FeatureFlagsNamePatchRequest) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o V3FeatureFlagsNamePatchRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V3FeatureFlagsNamePatchRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomErrorMessage) {
		toSerialize["custom_error_message"] = o.CustomErrorMessage
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	return toSerialize, nil
}

type NullableV3FeatureFlagsNamePatchRequest struct {
	value *V3FeatureFlagsNamePatchRequest
	isSet bool
}

func (v NullableV3FeatureFlagsNamePatchRequest) Get() *V3FeatureFlagsNamePatchRequest {
	return v.value
}

func (v *NullableV3FeatureFlagsNamePatchRequest) Set(val *V3FeatureFlagsNamePatchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV3FeatureFlagsNamePatchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV3FeatureFlagsNamePatchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV3FeatureFlagsNamePatchRequest(val *V3FeatureFlagsNamePatchRequest) *NullableV3FeatureFlagsNamePatchRequest {
	return &NullableV3FeatureFlagsNamePatchRequest{value: val, isSet: true}
}

func (v NullableV3FeatureFlagsNamePatchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV3FeatureFlagsNamePatchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


