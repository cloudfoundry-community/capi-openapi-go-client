/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the SecurityGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityGroup{}

// SecurityGroup struct for SecurityGroup
type SecurityGroup struct {
	// Timestamp when the security group was created
	CreatedAt time.Time `json:"created_at"`
	GloballyEnabled SecurityGroupGloballyEnabled `json:"globally_enabled"`
	// Unique identifier for the security group
	Guid string `json:"guid"`
	Links SecurityGroupLinks `json:"links"`
	Metadata *SecurityGroupMetadata `json:"metadata,omitempty"`
	// Human-readable name for the security group
	Name string `json:"name"`
	Relationships SecurityGroupRelationships `json:"relationships"`
	// Array of egress traffic rules
	Rules []Rule `json:"rules"`
	// Timestamp when the security group was last updated
	UpdatedAt time.Time `json:"updated_at"`
}

type _SecurityGroup SecurityGroup

// NewSecurityGroup instantiates a new SecurityGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityGroup(createdAt time.Time, globallyEnabled SecurityGroupGloballyEnabled, guid string, links SecurityGroupLinks, name string, relationships SecurityGroupRelationships, rules []Rule, updatedAt time.Time) *SecurityGroup {
	this := SecurityGroup{}
	this.CreatedAt = createdAt
	this.GloballyEnabled = globallyEnabled
	this.Guid = guid
	this.Links = links
	this.Name = name
	this.Relationships = relationships
	this.Rules = rules
	this.UpdatedAt = updatedAt
	return &this
}

// NewSecurityGroupWithDefaults instantiates a new SecurityGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityGroupWithDefaults() *SecurityGroup {
	this := SecurityGroup{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *SecurityGroup) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *SecurityGroup) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetGloballyEnabled returns the GloballyEnabled field value
func (o *SecurityGroup) GetGloballyEnabled() SecurityGroupGloballyEnabled {
	if o == nil {
		var ret SecurityGroupGloballyEnabled
		return ret
	}

	return o.GloballyEnabled
}

// GetGloballyEnabledOk returns a tuple with the GloballyEnabled field value
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetGloballyEnabledOk() (*SecurityGroupGloballyEnabled, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GloballyEnabled, true
}

// SetGloballyEnabled sets field value
func (o *SecurityGroup) SetGloballyEnabled(v SecurityGroupGloballyEnabled) {
	o.GloballyEnabled = v
}

// GetGuid returns the Guid field value
func (o *SecurityGroup) GetGuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Guid
}

// GetGuidOk returns a tuple with the Guid field value
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetGuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Guid, true
}

// SetGuid sets field value
func (o *SecurityGroup) SetGuid(v string) {
	o.Guid = v
}

// GetLinks returns the Links field value
func (o *SecurityGroup) GetLinks() SecurityGroupLinks {
	if o == nil {
		var ret SecurityGroupLinks
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetLinksOk() (*SecurityGroupLinks, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Links, true
}

// SetLinks sets field value
func (o *SecurityGroup) SetLinks(v SecurityGroupLinks) {
	o.Links = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *SecurityGroup) GetMetadata() SecurityGroupMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret SecurityGroupMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetMetadataOk() (*SecurityGroupMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *SecurityGroup) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given SecurityGroupMetadata and assigns it to the Metadata field.
func (o *SecurityGroup) SetMetadata(v SecurityGroupMetadata) {
	o.Metadata = &v
}

// GetName returns the Name field value
func (o *SecurityGroup) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SecurityGroup) SetName(v string) {
	o.Name = v
}

// GetRelationships returns the Relationships field value
func (o *SecurityGroup) GetRelationships() SecurityGroupRelationships {
	if o == nil {
		var ret SecurityGroupRelationships
		return ret
	}

	return o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetRelationshipsOk() (*SecurityGroupRelationships, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Relationships, true
}

// SetRelationships sets field value
func (o *SecurityGroup) SetRelationships(v SecurityGroupRelationships) {
	o.Relationships = v
}

// GetRules returns the Rules field value
func (o *SecurityGroup) GetRules() []Rule {
	if o == nil {
		var ret []Rule
		return ret
	}

	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetRulesOk() ([]Rule, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rules, true
}

// SetRules sets field value
func (o *SecurityGroup) SetRules(v []Rule) {
	o.Rules = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *SecurityGroup) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *SecurityGroup) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o SecurityGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecurityGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["globally_enabled"] = o.GloballyEnabled
	toSerialize["guid"] = o.Guid
	toSerialize["links"] = o.Links
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	toSerialize["name"] = o.Name
	toSerialize["relationships"] = o.Relationships
	toSerialize["rules"] = o.Rules
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *SecurityGroup) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created_at",
		"globally_enabled",
		"guid",
		"links",
		"name",
		"relationships",
		"rules",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSecurityGroup := _SecurityGroup{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSecurityGroup)

	if err != nil {
		return err
	}

	*o = SecurityGroup(varSecurityGroup)

	return err
}

type NullableSecurityGroup struct {
	value *SecurityGroup
	isSet bool
}

func (v NullableSecurityGroup) Get() *SecurityGroup {
	return v.value
}

func (v *NullableSecurityGroup) Set(val *SecurityGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityGroup(val *SecurityGroup) *NullableSecurityGroup {
	return &NullableSecurityGroup{value: val, isSet: true}
}

func (v NullableSecurityGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


