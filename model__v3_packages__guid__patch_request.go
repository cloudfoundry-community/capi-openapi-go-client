/*
Cloud Controller API

API specification for managing environment variable groups in Cloud Controller.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the V3PackagesGuidPatchRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V3PackagesGuidPatchRequest{}

// V3PackagesGuidPatchRequest struct for V3PackagesGuidPatchRequest
type V3PackagesGuidPatchRequest struct {
	Metadata *V3PackagesPostRequestMetadata `json:"metadata,omitempty"`
	// The password for the image's registry. Only possible for Docker package.
	Password *string `json:"password,omitempty"`
	// The username for the image's registry. Only possible for Docker package.
	Username *string `json:"username,omitempty"`
}

// NewV3PackagesGuidPatchRequest instantiates a new V3PackagesGuidPatchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV3PackagesGuidPatchRequest() *V3PackagesGuidPatchRequest {
	this := V3PackagesGuidPatchRequest{}
	return &this
}

// NewV3PackagesGuidPatchRequestWithDefaults instantiates a new V3PackagesGuidPatchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV3PackagesGuidPatchRequestWithDefaults() *V3PackagesGuidPatchRequest {
	this := V3PackagesGuidPatchRequest{}
	return &this
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *V3PackagesGuidPatchRequest) GetMetadata() V3PackagesPostRequestMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret V3PackagesPostRequestMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3PackagesGuidPatchRequest) GetMetadataOk() (*V3PackagesPostRequestMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *V3PackagesGuidPatchRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given V3PackagesPostRequestMetadata and assigns it to the Metadata field.
func (o *V3PackagesGuidPatchRequest) SetMetadata(v V3PackagesPostRequestMetadata) {
	o.Metadata = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *V3PackagesGuidPatchRequest) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3PackagesGuidPatchRequest) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *V3PackagesGuidPatchRequest) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *V3PackagesGuidPatchRequest) SetPassword(v string) {
	o.Password = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *V3PackagesGuidPatchRequest) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3PackagesGuidPatchRequest) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *V3PackagesGuidPatchRequest) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *V3PackagesGuidPatchRequest) SetUsername(v string) {
	o.Username = &v
}

func (o V3PackagesGuidPatchRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V3PackagesGuidPatchRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	return toSerialize, nil
}

type NullableV3PackagesGuidPatchRequest struct {
	value *V3PackagesGuidPatchRequest
	isSet bool
}

func (v NullableV3PackagesGuidPatchRequest) Get() *V3PackagesGuidPatchRequest {
	return v.value
}

func (v *NullableV3PackagesGuidPatchRequest) Set(val *V3PackagesGuidPatchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV3PackagesGuidPatchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV3PackagesGuidPatchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV3PackagesGuidPatchRequest(val *V3PackagesGuidPatchRequest) *NullableV3PackagesGuidPatchRequest {
	return &NullableV3PackagesGuidPatchRequest{value: val, isSet: true}
}

func (v NullableV3PackagesGuidPatchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV3PackagesGuidPatchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


