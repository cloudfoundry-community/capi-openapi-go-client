/*
Cloud Controller API

API specification for managing environment variable groups in Cloud Controller.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the V3RolesPostRequestRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V3RolesPostRequestRelationships{}

// V3RolesPostRequestRelationships struct for V3RolesPostRequestRelationships
type V3RolesPostRequestRelationships struct {
	Organization *V3AppsPostRequestRelationshipsSpace `json:"organization,omitempty"`
	Space *V3AppsPostRequestRelationshipsSpace `json:"space,omitempty"`
	User *V3RolesPostRequestRelationshipsUser `json:"user,omitempty"`
}

// NewV3RolesPostRequestRelationships instantiates a new V3RolesPostRequestRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV3RolesPostRequestRelationships() *V3RolesPostRequestRelationships {
	this := V3RolesPostRequestRelationships{}
	return &this
}

// NewV3RolesPostRequestRelationshipsWithDefaults instantiates a new V3RolesPostRequestRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV3RolesPostRequestRelationshipsWithDefaults() *V3RolesPostRequestRelationships {
	this := V3RolesPostRequestRelationships{}
	return &this
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *V3RolesPostRequestRelationships) GetOrganization() V3AppsPostRequestRelationshipsSpace {
	if o == nil || IsNil(o.Organization) {
		var ret V3AppsPostRequestRelationshipsSpace
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3RolesPostRequestRelationships) GetOrganizationOk() (*V3AppsPostRequestRelationshipsSpace, bool) {
	if o == nil || IsNil(o.Organization) {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *V3RolesPostRequestRelationships) HasOrganization() bool {
	if o != nil && !IsNil(o.Organization) {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given V3AppsPostRequestRelationshipsSpace and assigns it to the Organization field.
func (o *V3RolesPostRequestRelationships) SetOrganization(v V3AppsPostRequestRelationshipsSpace) {
	o.Organization = &v
}

// GetSpace returns the Space field value if set, zero value otherwise.
func (o *V3RolesPostRequestRelationships) GetSpace() V3AppsPostRequestRelationshipsSpace {
	if o == nil || IsNil(o.Space) {
		var ret V3AppsPostRequestRelationshipsSpace
		return ret
	}
	return *o.Space
}

// GetSpaceOk returns a tuple with the Space field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3RolesPostRequestRelationships) GetSpaceOk() (*V3AppsPostRequestRelationshipsSpace, bool) {
	if o == nil || IsNil(o.Space) {
		return nil, false
	}
	return o.Space, true
}

// HasSpace returns a boolean if a field has been set.
func (o *V3RolesPostRequestRelationships) HasSpace() bool {
	if o != nil && !IsNil(o.Space) {
		return true
	}

	return false
}

// SetSpace gets a reference to the given V3AppsPostRequestRelationshipsSpace and assigns it to the Space field.
func (o *V3RolesPostRequestRelationships) SetSpace(v V3AppsPostRequestRelationshipsSpace) {
	o.Space = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *V3RolesPostRequestRelationships) GetUser() V3RolesPostRequestRelationshipsUser {
	if o == nil || IsNil(o.User) {
		var ret V3RolesPostRequestRelationshipsUser
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3RolesPostRequestRelationships) GetUserOk() (*V3RolesPostRequestRelationshipsUser, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *V3RolesPostRequestRelationships) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given V3RolesPostRequestRelationshipsUser and assigns it to the User field.
func (o *V3RolesPostRequestRelationships) SetUser(v V3RolesPostRequestRelationshipsUser) {
	o.User = &v
}

func (o V3RolesPostRequestRelationships) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V3RolesPostRequestRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Organization) {
		toSerialize["organization"] = o.Organization
	}
	if !IsNil(o.Space) {
		toSerialize["space"] = o.Space
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	return toSerialize, nil
}

type NullableV3RolesPostRequestRelationships struct {
	value *V3RolesPostRequestRelationships
	isSet bool
}

func (v NullableV3RolesPostRequestRelationships) Get() *V3RolesPostRequestRelationships {
	return v.value
}

func (v *NullableV3RolesPostRequestRelationships) Set(val *V3RolesPostRequestRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableV3RolesPostRequestRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableV3RolesPostRequestRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV3RolesPostRequestRelationships(val *V3RolesPostRequestRelationships) *NullableV3RolesPostRequestRelationships {
	return &NullableV3RolesPostRequestRelationships{value: val, isSet: true}
}

func (v NullableV3RolesPostRequestRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV3RolesPostRequestRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


