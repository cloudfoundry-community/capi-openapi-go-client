/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the BuildLifecycleData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BuildLifecycleData{}

// BuildLifecycleData struct for BuildLifecycleData
type BuildLifecycleData struct {
	// Detected buildpacks with versions
	BuildpackLifecycleBuildpacks []V3BuildsGuidPatchRequestLifecycleDataBuildpackLifecycleBuildpacksInner `json:"buildpack_lifecycle_buildpacks,omitempty"`
	// Buildpacks used (buildpack lifecycle)
	Buildpacks []string `json:"buildpacks,omitempty"`
	// Docker image (docker lifecycle) or resulting image (cnb)
	Image *string `json:"image,omitempty"`
	// Stack used for staging
	Stack *string `json:"stack,omitempty"`
}

// NewBuildLifecycleData instantiates a new BuildLifecycleData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBuildLifecycleData() *BuildLifecycleData {
	this := BuildLifecycleData{}
	return &this
}

// NewBuildLifecycleDataWithDefaults instantiates a new BuildLifecycleData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBuildLifecycleDataWithDefaults() *BuildLifecycleData {
	this := BuildLifecycleData{}
	return &this
}

// GetBuildpackLifecycleBuildpacks returns the BuildpackLifecycleBuildpacks field value if set, zero value otherwise.
func (o *BuildLifecycleData) GetBuildpackLifecycleBuildpacks() []V3BuildsGuidPatchRequestLifecycleDataBuildpackLifecycleBuildpacksInner {
	if o == nil || IsNil(o.BuildpackLifecycleBuildpacks) {
		var ret []V3BuildsGuidPatchRequestLifecycleDataBuildpackLifecycleBuildpacksInner
		return ret
	}
	return o.BuildpackLifecycleBuildpacks
}

// GetBuildpackLifecycleBuildpacksOk returns a tuple with the BuildpackLifecycleBuildpacks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildLifecycleData) GetBuildpackLifecycleBuildpacksOk() ([]V3BuildsGuidPatchRequestLifecycleDataBuildpackLifecycleBuildpacksInner, bool) {
	if o == nil || IsNil(o.BuildpackLifecycleBuildpacks) {
		return nil, false
	}
	return o.BuildpackLifecycleBuildpacks, true
}

// HasBuildpackLifecycleBuildpacks returns a boolean if a field has been set.
func (o *BuildLifecycleData) HasBuildpackLifecycleBuildpacks() bool {
	if o != nil && !IsNil(o.BuildpackLifecycleBuildpacks) {
		return true
	}

	return false
}

// SetBuildpackLifecycleBuildpacks gets a reference to the given []V3BuildsGuidPatchRequestLifecycleDataBuildpackLifecycleBuildpacksInner and assigns it to the BuildpackLifecycleBuildpacks field.
func (o *BuildLifecycleData) SetBuildpackLifecycleBuildpacks(v []V3BuildsGuidPatchRequestLifecycleDataBuildpackLifecycleBuildpacksInner) {
	o.BuildpackLifecycleBuildpacks = v
}

// GetBuildpacks returns the Buildpacks field value if set, zero value otherwise.
func (o *BuildLifecycleData) GetBuildpacks() []string {
	if o == nil || IsNil(o.Buildpacks) {
		var ret []string
		return ret
	}
	return o.Buildpacks
}

// GetBuildpacksOk returns a tuple with the Buildpacks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildLifecycleData) GetBuildpacksOk() ([]string, bool) {
	if o == nil || IsNil(o.Buildpacks) {
		return nil, false
	}
	return o.Buildpacks, true
}

// HasBuildpacks returns a boolean if a field has been set.
func (o *BuildLifecycleData) HasBuildpacks() bool {
	if o != nil && !IsNil(o.Buildpacks) {
		return true
	}

	return false
}

// SetBuildpacks gets a reference to the given []string and assigns it to the Buildpacks field.
func (o *BuildLifecycleData) SetBuildpacks(v []string) {
	o.Buildpacks = v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *BuildLifecycleData) GetImage() string {
	if o == nil || IsNil(o.Image) {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildLifecycleData) GetImageOk() (*string, bool) {
	if o == nil || IsNil(o.Image) {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *BuildLifecycleData) HasImage() bool {
	if o != nil && !IsNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *BuildLifecycleData) SetImage(v string) {
	o.Image = &v
}

// GetStack returns the Stack field value if set, zero value otherwise.
func (o *BuildLifecycleData) GetStack() string {
	if o == nil || IsNil(o.Stack) {
		var ret string
		return ret
	}
	return *o.Stack
}

// GetStackOk returns a tuple with the Stack field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildLifecycleData) GetStackOk() (*string, bool) {
	if o == nil || IsNil(o.Stack) {
		return nil, false
	}
	return o.Stack, true
}

// HasStack returns a boolean if a field has been set.
func (o *BuildLifecycleData) HasStack() bool {
	if o != nil && !IsNil(o.Stack) {
		return true
	}

	return false
}

// SetStack gets a reference to the given string and assigns it to the Stack field.
func (o *BuildLifecycleData) SetStack(v string) {
	o.Stack = &v
}

func (o BuildLifecycleData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BuildLifecycleData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BuildpackLifecycleBuildpacks) {
		toSerialize["buildpack_lifecycle_buildpacks"] = o.BuildpackLifecycleBuildpacks
	}
	if !IsNil(o.Buildpacks) {
		toSerialize["buildpacks"] = o.Buildpacks
	}
	if !IsNil(o.Image) {
		toSerialize["image"] = o.Image
	}
	if !IsNil(o.Stack) {
		toSerialize["stack"] = o.Stack
	}
	return toSerialize, nil
}

type NullableBuildLifecycleData struct {
	value *BuildLifecycleData
	isSet bool
}

func (v NullableBuildLifecycleData) Get() *BuildLifecycleData {
	return v.value
}

func (v *NullableBuildLifecycleData) Set(val *BuildLifecycleData) {
	v.value = val
	v.isSet = true
}

func (v NullableBuildLifecycleData) IsSet() bool {
	return v.isSet
}

func (v *NullableBuildLifecycleData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBuildLifecycleData(val *BuildLifecycleData) *NullableBuildLifecycleData {
	return &NullableBuildLifecycleData{value: val, isSet: true}
}

func (v NullableBuildLifecycleData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBuildLifecycleData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


