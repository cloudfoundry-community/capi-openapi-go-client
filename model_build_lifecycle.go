/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the BuildLifecycle type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BuildLifecycle{}

// BuildLifecycle struct for BuildLifecycle
type BuildLifecycle struct {
	Data *BuildLifecycleData `json:"data,omitempty"`
	// Type of lifecycle used
	Type *string `json:"type,omitempty"`
}

// NewBuildLifecycle instantiates a new BuildLifecycle object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBuildLifecycle() *BuildLifecycle {
	this := BuildLifecycle{}
	return &this
}

// NewBuildLifecycleWithDefaults instantiates a new BuildLifecycle object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBuildLifecycleWithDefaults() *BuildLifecycle {
	this := BuildLifecycle{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *BuildLifecycle) GetData() BuildLifecycleData {
	if o == nil || IsNil(o.Data) {
		var ret BuildLifecycleData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildLifecycle) GetDataOk() (*BuildLifecycleData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *BuildLifecycle) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given BuildLifecycleData and assigns it to the Data field.
func (o *BuildLifecycle) SetData(v BuildLifecycleData) {
	o.Data = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *BuildLifecycle) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildLifecycle) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *BuildLifecycle) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *BuildLifecycle) SetType(v string) {
	o.Type = &v
}

func (o BuildLifecycle) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BuildLifecycle) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableBuildLifecycle struct {
	value *BuildLifecycle
	isSet bool
}

func (v NullableBuildLifecycle) Get() *BuildLifecycle {
	return v.value
}

func (v *NullableBuildLifecycle) Set(val *BuildLifecycle) {
	v.value = val
	v.isSet = true
}

func (v NullableBuildLifecycle) IsSet() bool {
	return v.isSet
}

func (v *NullableBuildLifecycle) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBuildLifecycle(val *BuildLifecycle) *NullableBuildLifecycle {
	return &NullableBuildLifecycle{value: val, isSet: true}
}

func (v NullableBuildLifecycle) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBuildLifecycle) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


