/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the V3AppsPostRequestLifecycle type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V3AppsPostRequestLifecycle{}

// V3AppsPostRequestLifecycle App lifecycle configuration
type V3AppsPostRequestLifecycle struct {
	Data *V3AppsPostRequestLifecycleData `json:"data,omitempty"`
	// Type of app lifecycle
	Type *string `json:"type,omitempty"`
}

// NewV3AppsPostRequestLifecycle instantiates a new V3AppsPostRequestLifecycle object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV3AppsPostRequestLifecycle() *V3AppsPostRequestLifecycle {
	this := V3AppsPostRequestLifecycle{}
	return &this
}

// NewV3AppsPostRequestLifecycleWithDefaults instantiates a new V3AppsPostRequestLifecycle object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV3AppsPostRequestLifecycleWithDefaults() *V3AppsPostRequestLifecycle {
	this := V3AppsPostRequestLifecycle{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *V3AppsPostRequestLifecycle) GetData() V3AppsPostRequestLifecycleData {
	if o == nil || IsNil(o.Data) {
		var ret V3AppsPostRequestLifecycleData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3AppsPostRequestLifecycle) GetDataOk() (*V3AppsPostRequestLifecycleData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *V3AppsPostRequestLifecycle) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given V3AppsPostRequestLifecycleData and assigns it to the Data field.
func (o *V3AppsPostRequestLifecycle) SetData(v V3AppsPostRequestLifecycleData) {
	o.Data = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *V3AppsPostRequestLifecycle) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3AppsPostRequestLifecycle) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *V3AppsPostRequestLifecycle) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *V3AppsPostRequestLifecycle) SetType(v string) {
	o.Type = &v
}

func (o V3AppsPostRequestLifecycle) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V3AppsPostRequestLifecycle) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableV3AppsPostRequestLifecycle struct {
	value *V3AppsPostRequestLifecycle
	isSet bool
}

func (v NullableV3AppsPostRequestLifecycle) Get() *V3AppsPostRequestLifecycle {
	return v.value
}

func (v *NullableV3AppsPostRequestLifecycle) Set(val *V3AppsPostRequestLifecycle) {
	v.value = val
	v.isSet = true
}

func (v NullableV3AppsPostRequestLifecycle) IsSet() bool {
	return v.isSet
}

func (v *NullableV3AppsPostRequestLifecycle) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV3AppsPostRequestLifecycle(val *V3AppsPostRequestLifecycle) *NullableV3AppsPostRequestLifecycle {
	return &NullableV3AppsPostRequestLifecycle{value: val, isSet: true}
}

func (v NullableV3AppsPostRequestLifecycle) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV3AppsPostRequestLifecycle) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


