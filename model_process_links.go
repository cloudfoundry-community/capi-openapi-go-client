/*
Cloud Controller API

API specification for managing environment variable groups in Cloud Controller.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the ProcessLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProcessLinks{}

// ProcessLinks struct for ProcessLinks
type ProcessLinks struct {
	App *Link `json:"app,omitempty"`
	Scale *Link `json:"scale,omitempty"`
	Self *Link `json:"self,omitempty"`
	Space *Link `json:"space,omitempty"`
	Stats *Link `json:"stats,omitempty"`
}

// NewProcessLinks instantiates a new ProcessLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProcessLinks() *ProcessLinks {
	this := ProcessLinks{}
	return &this
}

// NewProcessLinksWithDefaults instantiates a new ProcessLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProcessLinksWithDefaults() *ProcessLinks {
	this := ProcessLinks{}
	return &this
}

// GetApp returns the App field value if set, zero value otherwise.
func (o *ProcessLinks) GetApp() Link {
	if o == nil || IsNil(o.App) {
		var ret Link
		return ret
	}
	return *o.App
}

// GetAppOk returns a tuple with the App field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessLinks) GetAppOk() (*Link, bool) {
	if o == nil || IsNil(o.App) {
		return nil, false
	}
	return o.App, true
}

// HasApp returns a boolean if a field has been set.
func (o *ProcessLinks) HasApp() bool {
	if o != nil && !IsNil(o.App) {
		return true
	}

	return false
}

// SetApp gets a reference to the given Link and assigns it to the App field.
func (o *ProcessLinks) SetApp(v Link) {
	o.App = &v
}

// GetScale returns the Scale field value if set, zero value otherwise.
func (o *ProcessLinks) GetScale() Link {
	if o == nil || IsNil(o.Scale) {
		var ret Link
		return ret
	}
	return *o.Scale
}

// GetScaleOk returns a tuple with the Scale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessLinks) GetScaleOk() (*Link, bool) {
	if o == nil || IsNil(o.Scale) {
		return nil, false
	}
	return o.Scale, true
}

// HasScale returns a boolean if a field has been set.
func (o *ProcessLinks) HasScale() bool {
	if o != nil && !IsNil(o.Scale) {
		return true
	}

	return false
}

// SetScale gets a reference to the given Link and assigns it to the Scale field.
func (o *ProcessLinks) SetScale(v Link) {
	o.Scale = &v
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *ProcessLinks) GetSelf() Link {
	if o == nil || IsNil(o.Self) {
		var ret Link
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessLinks) GetSelfOk() (*Link, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *ProcessLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given Link and assigns it to the Self field.
func (o *ProcessLinks) SetSelf(v Link) {
	o.Self = &v
}

// GetSpace returns the Space field value if set, zero value otherwise.
func (o *ProcessLinks) GetSpace() Link {
	if o == nil || IsNil(o.Space) {
		var ret Link
		return ret
	}
	return *o.Space
}

// GetSpaceOk returns a tuple with the Space field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessLinks) GetSpaceOk() (*Link, bool) {
	if o == nil || IsNil(o.Space) {
		return nil, false
	}
	return o.Space, true
}

// HasSpace returns a boolean if a field has been set.
func (o *ProcessLinks) HasSpace() bool {
	if o != nil && !IsNil(o.Space) {
		return true
	}

	return false
}

// SetSpace gets a reference to the given Link and assigns it to the Space field.
func (o *ProcessLinks) SetSpace(v Link) {
	o.Space = &v
}

// GetStats returns the Stats field value if set, zero value otherwise.
func (o *ProcessLinks) GetStats() Link {
	if o == nil || IsNil(o.Stats) {
		var ret Link
		return ret
	}
	return *o.Stats
}

// GetStatsOk returns a tuple with the Stats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessLinks) GetStatsOk() (*Link, bool) {
	if o == nil || IsNil(o.Stats) {
		return nil, false
	}
	return o.Stats, true
}

// HasStats returns a boolean if a field has been set.
func (o *ProcessLinks) HasStats() bool {
	if o != nil && !IsNil(o.Stats) {
		return true
	}

	return false
}

// SetStats gets a reference to the given Link and assigns it to the Stats field.
func (o *ProcessLinks) SetStats(v Link) {
	o.Stats = &v
}

func (o ProcessLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProcessLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.App) {
		toSerialize["app"] = o.App
	}
	if !IsNil(o.Scale) {
		toSerialize["scale"] = o.Scale
	}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}
	if !IsNil(o.Space) {
		toSerialize["space"] = o.Space
	}
	if !IsNil(o.Stats) {
		toSerialize["stats"] = o.Stats
	}
	return toSerialize, nil
}

type NullableProcessLinks struct {
	value *ProcessLinks
	isSet bool
}

func (v NullableProcessLinks) Get() *ProcessLinks {
	return v.value
}

func (v *NullableProcessLinks) Set(val *ProcessLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableProcessLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableProcessLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProcessLinks(val *ProcessLinks) *NullableProcessLinks {
	return &NullableProcessLinks{value: val, isSet: true}
}

func (v NullableProcessLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProcessLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


