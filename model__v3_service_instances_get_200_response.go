/*
Cloud Controller API

API specification for managing environment variable groups in Cloud Controller.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the V3ServiceInstancesGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V3ServiceInstancesGet200Response{}

// V3ServiceInstancesGet200Response struct for V3ServiceInstancesGet200Response
type V3ServiceInstancesGet200Response struct {
	Resources []ServiceInstance `json:"resources,omitempty"`
}

// NewV3ServiceInstancesGet200Response instantiates a new V3ServiceInstancesGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV3ServiceInstancesGet200Response() *V3ServiceInstancesGet200Response {
	this := V3ServiceInstancesGet200Response{}
	return &this
}

// NewV3ServiceInstancesGet200ResponseWithDefaults instantiates a new V3ServiceInstancesGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV3ServiceInstancesGet200ResponseWithDefaults() *V3ServiceInstancesGet200Response {
	this := V3ServiceInstancesGet200Response{}
	return &this
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *V3ServiceInstancesGet200Response) GetResources() []ServiceInstance {
	if o == nil || IsNil(o.Resources) {
		var ret []ServiceInstance
		return ret
	}
	return o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3ServiceInstancesGet200Response) GetResourcesOk() ([]ServiceInstance, bool) {
	if o == nil || IsNil(o.Resources) {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *V3ServiceInstancesGet200Response) HasResources() bool {
	if o != nil && !IsNil(o.Resources) {
		return true
	}

	return false
}

// SetResources gets a reference to the given []ServiceInstance and assigns it to the Resources field.
func (o *V3ServiceInstancesGet200Response) SetResources(v []ServiceInstance) {
	o.Resources = v
}

func (o V3ServiceInstancesGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V3ServiceInstancesGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Resources) {
		toSerialize["resources"] = o.Resources
	}
	return toSerialize, nil
}

type NullableV3ServiceInstancesGet200Response struct {
	value *V3ServiceInstancesGet200Response
	isSet bool
}

func (v NullableV3ServiceInstancesGet200Response) Get() *V3ServiceInstancesGet200Response {
	return v.value
}

func (v *NullableV3ServiceInstancesGet200Response) Set(val *V3ServiceInstancesGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableV3ServiceInstancesGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableV3ServiceInstancesGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV3ServiceInstancesGet200Response(val *V3ServiceInstancesGet200Response) *NullableV3ServiceInstancesGet200Response {
	return &NullableV3ServiceInstancesGet200Response{value: val, isSet: true}
}

func (v NullableV3ServiceInstancesGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV3ServiceInstancesGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


