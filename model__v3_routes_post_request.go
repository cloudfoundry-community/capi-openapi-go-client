/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the V3RoutesPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V3RoutesPostRequest{}

// V3RoutesPostRequest struct for V3RoutesPostRequest
type V3RoutesPostRequest struct {
	// Hostname for the route
	Host *string `json:"host,omitempty" validate:"regexp=^[\\\\w\\\\-]+$"`
	Metadata *V3AppsGuidPatchRequestMetadata `json:"metadata,omitempty"`
	// Path for the route
	Path *string `json:"path,omitempty" validate:"regexp=^(\\/.*)?$"`
	// Port for TCP route
	Port *int32 `json:"port,omitempty"`
	Relationships V3RoutesPostRequestRelationships `json:"relationships"`
}

type _V3RoutesPostRequest V3RoutesPostRequest

// NewV3RoutesPostRequest instantiates a new V3RoutesPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV3RoutesPostRequest(relationships V3RoutesPostRequestRelationships) *V3RoutesPostRequest {
	this := V3RoutesPostRequest{}
	this.Relationships = relationships
	return &this
}

// NewV3RoutesPostRequestWithDefaults instantiates a new V3RoutesPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV3RoutesPostRequestWithDefaults() *V3RoutesPostRequest {
	this := V3RoutesPostRequest{}
	return &this
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *V3RoutesPostRequest) GetHost() string {
	if o == nil || IsNil(o.Host) {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3RoutesPostRequest) GetHostOk() (*string, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *V3RoutesPostRequest) HasHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *V3RoutesPostRequest) SetHost(v string) {
	o.Host = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *V3RoutesPostRequest) GetMetadata() V3AppsGuidPatchRequestMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret V3AppsGuidPatchRequestMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3RoutesPostRequest) GetMetadataOk() (*V3AppsGuidPatchRequestMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *V3RoutesPostRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given V3AppsGuidPatchRequestMetadata and assigns it to the Metadata field.
func (o *V3RoutesPostRequest) SetMetadata(v V3AppsGuidPatchRequestMetadata) {
	o.Metadata = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *V3RoutesPostRequest) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3RoutesPostRequest) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *V3RoutesPostRequest) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *V3RoutesPostRequest) SetPath(v string) {
	o.Path = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *V3RoutesPostRequest) GetPort() int32 {
	if o == nil || IsNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3RoutesPostRequest) GetPortOk() (*int32, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *V3RoutesPostRequest) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *V3RoutesPostRequest) SetPort(v int32) {
	o.Port = &v
}

// GetRelationships returns the Relationships field value
func (o *V3RoutesPostRequest) GetRelationships() V3RoutesPostRequestRelationships {
	if o == nil {
		var ret V3RoutesPostRequestRelationships
		return ret
	}

	return o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value
// and a boolean to check if the value has been set.
func (o *V3RoutesPostRequest) GetRelationshipsOk() (*V3RoutesPostRequestRelationships, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Relationships, true
}

// SetRelationships sets field value
func (o *V3RoutesPostRequest) SetRelationships(v V3RoutesPostRequestRelationships) {
	o.Relationships = v
}

func (o V3RoutesPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V3RoutesPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	toSerialize["relationships"] = o.Relationships
	return toSerialize, nil
}

func (o *V3RoutesPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"relationships",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV3RoutesPostRequest := _V3RoutesPostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varV3RoutesPostRequest)

	if err != nil {
		return err
	}

	*o = V3RoutesPostRequest(varV3RoutesPostRequest)

	return err
}

type NullableV3RoutesPostRequest struct {
	value *V3RoutesPostRequest
	isSet bool
}

func (v NullableV3RoutesPostRequest) Get() *V3RoutesPostRequest {
	return v.value
}

func (v *NullableV3RoutesPostRequest) Set(val *V3RoutesPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV3RoutesPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV3RoutesPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV3RoutesPostRequest(val *V3RoutesPostRequest) *NullableV3RoutesPostRequest {
	return &NullableV3RoutesPostRequest{value: val, isSet: true}
}

func (v NullableV3RoutesPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV3RoutesPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


