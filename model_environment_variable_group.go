/*
Cloud Controller API

API specification for managing environment variable groups in Cloud Controller.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
	"time"
)

// checks if the EnvironmentVariableGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnvironmentVariableGroup{}

// EnvironmentVariableGroup struct for EnvironmentVariableGroup
type EnvironmentVariableGroup struct {
	Links *V3IsolationSegmentsGuidRelationshipsSpacesGet200ResponseLinks `json:"links,omitempty"`
	Name *string `json:"name,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	Var *map[string]string `json:"var,omitempty"`
}

// NewEnvironmentVariableGroup instantiates a new EnvironmentVariableGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentVariableGroup() *EnvironmentVariableGroup {
	this := EnvironmentVariableGroup{}
	return &this
}

// NewEnvironmentVariableGroupWithDefaults instantiates a new EnvironmentVariableGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentVariableGroupWithDefaults() *EnvironmentVariableGroup {
	this := EnvironmentVariableGroup{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *EnvironmentVariableGroup) GetLinks() V3IsolationSegmentsGuidRelationshipsSpacesGet200ResponseLinks {
	if o == nil || IsNil(o.Links) {
		var ret V3IsolationSegmentsGuidRelationshipsSpacesGet200ResponseLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentVariableGroup) GetLinksOk() (*V3IsolationSegmentsGuidRelationshipsSpacesGet200ResponseLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *EnvironmentVariableGroup) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given V3IsolationSegmentsGuidRelationshipsSpacesGet200ResponseLinks and assigns it to the Links field.
func (o *EnvironmentVariableGroup) SetLinks(v V3IsolationSegmentsGuidRelationshipsSpacesGet200ResponseLinks) {
	o.Links = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *EnvironmentVariableGroup) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentVariableGroup) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *EnvironmentVariableGroup) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *EnvironmentVariableGroup) SetName(v string) {
	o.Name = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *EnvironmentVariableGroup) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentVariableGroup) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *EnvironmentVariableGroup) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *EnvironmentVariableGroup) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetVar returns the Var field value if set, zero value otherwise.
func (o *EnvironmentVariableGroup) GetVar() map[string]string {
	if o == nil || IsNil(o.Var) {
		var ret map[string]string
		return ret
	}
	return *o.Var
}

// GetVarOk returns a tuple with the Var field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentVariableGroup) GetVarOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Var) {
		return nil, false
	}
	return o.Var, true
}

// HasVar returns a boolean if a field has been set.
func (o *EnvironmentVariableGroup) HasVar() bool {
	if o != nil && !IsNil(o.Var) {
		return true
	}

	return false
}

// SetVar gets a reference to the given map[string]string and assigns it to the Var field.
func (o *EnvironmentVariableGroup) SetVar(v map[string]string) {
	o.Var = &v
}

func (o EnvironmentVariableGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnvironmentVariableGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.Var) {
		toSerialize["var"] = o.Var
	}
	return toSerialize, nil
}

type NullableEnvironmentVariableGroup struct {
	value *EnvironmentVariableGroup
	isSet bool
}

func (v NullableEnvironmentVariableGroup) Get() *EnvironmentVariableGroup {
	return v.value
}

func (v *NullableEnvironmentVariableGroup) Set(val *EnvironmentVariableGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentVariableGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentVariableGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentVariableGroup(val *EnvironmentVariableGroup) *NullableEnvironmentVariableGroup {
	return &NullableEnvironmentVariableGroup{value: val, isSet: true}
}

func (v NullableEnvironmentVariableGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentVariableGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


