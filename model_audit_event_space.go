/*
Cloud Controller API

API specification for managing environment variable groups in Cloud Controller.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the AuditEventSpace type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuditEventSpace{}

// AuditEventSpace struct for AuditEventSpace
type AuditEventSpace struct {
	// Unique identifier for the space where the event occurred
	Guid *string `json:"guid,omitempty"`
}

// NewAuditEventSpace instantiates a new AuditEventSpace object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuditEventSpace() *AuditEventSpace {
	this := AuditEventSpace{}
	return &this
}

// NewAuditEventSpaceWithDefaults instantiates a new AuditEventSpace object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuditEventSpaceWithDefaults() *AuditEventSpace {
	this := AuditEventSpace{}
	return &this
}

// GetGuid returns the Guid field value if set, zero value otherwise.
func (o *AuditEventSpace) GetGuid() string {
	if o == nil || IsNil(o.Guid) {
		var ret string
		return ret
	}
	return *o.Guid
}

// GetGuidOk returns a tuple with the Guid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditEventSpace) GetGuidOk() (*string, bool) {
	if o == nil || IsNil(o.Guid) {
		return nil, false
	}
	return o.Guid, true
}

// HasGuid returns a boolean if a field has been set.
func (o *AuditEventSpace) HasGuid() bool {
	if o != nil && !IsNil(o.Guid) {
		return true
	}

	return false
}

// SetGuid gets a reference to the given string and assigns it to the Guid field.
func (o *AuditEventSpace) SetGuid(v string) {
	o.Guid = &v
}

func (o AuditEventSpace) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuditEventSpace) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Guid) {
		toSerialize["guid"] = o.Guid
	}
	return toSerialize, nil
}

type NullableAuditEventSpace struct {
	value *AuditEventSpace
	isSet bool
}

func (v NullableAuditEventSpace) Get() *AuditEventSpace {
	return v.value
}

func (v *NullableAuditEventSpace) Set(val *AuditEventSpace) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditEventSpace) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditEventSpace) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditEventSpace(val *AuditEventSpace) *NullableAuditEventSpace {
	return &NullableAuditEventSpace{value: val, isSet: true}
}

func (v NullableAuditEventSpace) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditEventSpace) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


