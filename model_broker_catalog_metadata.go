/*
Cloud Controller API

API specification for managing environment variable groups in Cloud Controller.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the BrokerCatalogMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BrokerCatalogMetadata{}

// BrokerCatalogMetadata struct for BrokerCatalogMetadata
type BrokerCatalogMetadata struct {
	Shareable *bool `json:"shareable,omitempty"`
}

// NewBrokerCatalogMetadata instantiates a new BrokerCatalogMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBrokerCatalogMetadata() *BrokerCatalogMetadata {
	this := BrokerCatalogMetadata{}
	return &this
}

// NewBrokerCatalogMetadataWithDefaults instantiates a new BrokerCatalogMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBrokerCatalogMetadataWithDefaults() *BrokerCatalogMetadata {
	this := BrokerCatalogMetadata{}
	return &this
}

// GetShareable returns the Shareable field value if set, zero value otherwise.
func (o *BrokerCatalogMetadata) GetShareable() bool {
	if o == nil || IsNil(o.Shareable) {
		var ret bool
		return ret
	}
	return *o.Shareable
}

// GetShareableOk returns a tuple with the Shareable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrokerCatalogMetadata) GetShareableOk() (*bool, bool) {
	if o == nil || IsNil(o.Shareable) {
		return nil, false
	}
	return o.Shareable, true
}

// HasShareable returns a boolean if a field has been set.
func (o *BrokerCatalogMetadata) HasShareable() bool {
	if o != nil && !IsNil(o.Shareable) {
		return true
	}

	return false
}

// SetShareable gets a reference to the given bool and assigns it to the Shareable field.
func (o *BrokerCatalogMetadata) SetShareable(v bool) {
	o.Shareable = &v
}

func (o BrokerCatalogMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BrokerCatalogMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Shareable) {
		toSerialize["shareable"] = o.Shareable
	}
	return toSerialize, nil
}

type NullableBrokerCatalogMetadata struct {
	value *BrokerCatalogMetadata
	isSet bool
}

func (v NullableBrokerCatalogMetadata) Get() *BrokerCatalogMetadata {
	return v.value
}

func (v *NullableBrokerCatalogMetadata) Set(val *BrokerCatalogMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableBrokerCatalogMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableBrokerCatalogMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBrokerCatalogMetadata(val *BrokerCatalogMetadata) *NullableBrokerCatalogMetadata {
	return &NullableBrokerCatalogMetadata{value: val, isSet: true}
}

func (v NullableBrokerCatalogMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBrokerCatalogMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


