/*
Cloud Controller API

API specification for managing environment variable groups in Cloud Controller.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the V3SpaceQuotasPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V3SpaceQuotasPostRequest{}

// V3SpaceQuotasPostRequest struct for V3SpaceQuotasPostRequest
type V3SpaceQuotasPostRequest struct {
	Apps *V3SpaceQuotasPostRequestApps `json:"apps,omitempty"`
	Name string `json:"name"`
	Relationships V3SpaceQuotasPostRequestRelationships `json:"relationships"`
	Routes *V3SpaceQuotasPostRequestRoutes `json:"routes,omitempty"`
	Services *V3SpaceQuotasPostRequestServices `json:"services,omitempty"`
}

type _V3SpaceQuotasPostRequest V3SpaceQuotasPostRequest

// NewV3SpaceQuotasPostRequest instantiates a new V3SpaceQuotasPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV3SpaceQuotasPostRequest(name string, relationships V3SpaceQuotasPostRequestRelationships) *V3SpaceQuotasPostRequest {
	this := V3SpaceQuotasPostRequest{}
	this.Name = name
	this.Relationships = relationships
	return &this
}

// NewV3SpaceQuotasPostRequestWithDefaults instantiates a new V3SpaceQuotasPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV3SpaceQuotasPostRequestWithDefaults() *V3SpaceQuotasPostRequest {
	this := V3SpaceQuotasPostRequest{}
	return &this
}

// GetApps returns the Apps field value if set, zero value otherwise.
func (o *V3SpaceQuotasPostRequest) GetApps() V3SpaceQuotasPostRequestApps {
	if o == nil || IsNil(o.Apps) {
		var ret V3SpaceQuotasPostRequestApps
		return ret
	}
	return *o.Apps
}

// GetAppsOk returns a tuple with the Apps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3SpaceQuotasPostRequest) GetAppsOk() (*V3SpaceQuotasPostRequestApps, bool) {
	if o == nil || IsNil(o.Apps) {
		return nil, false
	}
	return o.Apps, true
}

// HasApps returns a boolean if a field has been set.
func (o *V3SpaceQuotasPostRequest) HasApps() bool {
	if o != nil && !IsNil(o.Apps) {
		return true
	}

	return false
}

// SetApps gets a reference to the given V3SpaceQuotasPostRequestApps and assigns it to the Apps field.
func (o *V3SpaceQuotasPostRequest) SetApps(v V3SpaceQuotasPostRequestApps) {
	o.Apps = &v
}

// GetName returns the Name field value
func (o *V3SpaceQuotasPostRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *V3SpaceQuotasPostRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *V3SpaceQuotasPostRequest) SetName(v string) {
	o.Name = v
}

// GetRelationships returns the Relationships field value
func (o *V3SpaceQuotasPostRequest) GetRelationships() V3SpaceQuotasPostRequestRelationships {
	if o == nil {
		var ret V3SpaceQuotasPostRequestRelationships
		return ret
	}

	return o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value
// and a boolean to check if the value has been set.
func (o *V3SpaceQuotasPostRequest) GetRelationshipsOk() (*V3SpaceQuotasPostRequestRelationships, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Relationships, true
}

// SetRelationships sets field value
func (o *V3SpaceQuotasPostRequest) SetRelationships(v V3SpaceQuotasPostRequestRelationships) {
	o.Relationships = v
}

// GetRoutes returns the Routes field value if set, zero value otherwise.
func (o *V3SpaceQuotasPostRequest) GetRoutes() V3SpaceQuotasPostRequestRoutes {
	if o == nil || IsNil(o.Routes) {
		var ret V3SpaceQuotasPostRequestRoutes
		return ret
	}
	return *o.Routes
}

// GetRoutesOk returns a tuple with the Routes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3SpaceQuotasPostRequest) GetRoutesOk() (*V3SpaceQuotasPostRequestRoutes, bool) {
	if o == nil || IsNil(o.Routes) {
		return nil, false
	}
	return o.Routes, true
}

// HasRoutes returns a boolean if a field has been set.
func (o *V3SpaceQuotasPostRequest) HasRoutes() bool {
	if o != nil && !IsNil(o.Routes) {
		return true
	}

	return false
}

// SetRoutes gets a reference to the given V3SpaceQuotasPostRequestRoutes and assigns it to the Routes field.
func (o *V3SpaceQuotasPostRequest) SetRoutes(v V3SpaceQuotasPostRequestRoutes) {
	o.Routes = &v
}

// GetServices returns the Services field value if set, zero value otherwise.
func (o *V3SpaceQuotasPostRequest) GetServices() V3SpaceQuotasPostRequestServices {
	if o == nil || IsNil(o.Services) {
		var ret V3SpaceQuotasPostRequestServices
		return ret
	}
	return *o.Services
}

// GetServicesOk returns a tuple with the Services field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3SpaceQuotasPostRequest) GetServicesOk() (*V3SpaceQuotasPostRequestServices, bool) {
	if o == nil || IsNil(o.Services) {
		return nil, false
	}
	return o.Services, true
}

// HasServices returns a boolean if a field has been set.
func (o *V3SpaceQuotasPostRequest) HasServices() bool {
	if o != nil && !IsNil(o.Services) {
		return true
	}

	return false
}

// SetServices gets a reference to the given V3SpaceQuotasPostRequestServices and assigns it to the Services field.
func (o *V3SpaceQuotasPostRequest) SetServices(v V3SpaceQuotasPostRequestServices) {
	o.Services = &v
}

func (o V3SpaceQuotasPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V3SpaceQuotasPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Apps) {
		toSerialize["apps"] = o.Apps
	}
	toSerialize["name"] = o.Name
	toSerialize["relationships"] = o.Relationships
	if !IsNil(o.Routes) {
		toSerialize["routes"] = o.Routes
	}
	if !IsNil(o.Services) {
		toSerialize["services"] = o.Services
	}
	return toSerialize, nil
}

func (o *V3SpaceQuotasPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"relationships",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV3SpaceQuotasPostRequest := _V3SpaceQuotasPostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varV3SpaceQuotasPostRequest)

	if err != nil {
		return err
	}

	*o = V3SpaceQuotasPostRequest(varV3SpaceQuotasPostRequest)

	return err
}

type NullableV3SpaceQuotasPostRequest struct {
	value *V3SpaceQuotasPostRequest
	isSet bool
}

func (v NullableV3SpaceQuotasPostRequest) Get() *V3SpaceQuotasPostRequest {
	return v.value
}

func (v *NullableV3SpaceQuotasPostRequest) Set(val *V3SpaceQuotasPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV3SpaceQuotasPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV3SpaceQuotasPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV3SpaceQuotasPostRequest(val *V3SpaceQuotasPostRequest) *NullableV3SpaceQuotasPostRequest {
	return &NullableV3SpaceQuotasPostRequest{value: val, isSet: true}
}

func (v NullableV3SpaceQuotasPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV3SpaceQuotasPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


