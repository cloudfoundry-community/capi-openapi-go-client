/*
Cloud Controller API

API specification for managing environment variable groups in Cloud Controller.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
	"time"
)

// checks if the OrganizationQuota type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationQuota{}

// OrganizationQuota struct for OrganizationQuota
type OrganizationQuota struct {
	Apps *AppsQuota `json:"apps,omitempty"`
	// The time with zone when the organization quota was created
	CreatedAt *time.Time `json:"created_at,omitempty"`
	Domains *DomainsQuota `json:"domains,omitempty"`
	// Unique identifier for the organization quota
	Guid *string `json:"guid,omitempty"`
	Links *OrganizationQuotaLinks `json:"links,omitempty"`
	// Name of the quota
	Name *string `json:"name,omitempty"`
	Relationships *OrganizationQuotaRelationships `json:"relationships,omitempty"`
	Routes *RoutesQuota `json:"routes,omitempty"`
	Services *ServicesQuota `json:"services,omitempty"`
	// The time with zone when the organization quota was last updated
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// NewOrganizationQuota instantiates a new OrganizationQuota object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationQuota() *OrganizationQuota {
	this := OrganizationQuota{}
	return &this
}

// NewOrganizationQuotaWithDefaults instantiates a new OrganizationQuota object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationQuotaWithDefaults() *OrganizationQuota {
	this := OrganizationQuota{}
	return &this
}

// GetApps returns the Apps field value if set, zero value otherwise.
func (o *OrganizationQuota) GetApps() AppsQuota {
	if o == nil || IsNil(o.Apps) {
		var ret AppsQuota
		return ret
	}
	return *o.Apps
}

// GetAppsOk returns a tuple with the Apps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationQuota) GetAppsOk() (*AppsQuota, bool) {
	if o == nil || IsNil(o.Apps) {
		return nil, false
	}
	return o.Apps, true
}

// HasApps returns a boolean if a field has been set.
func (o *OrganizationQuota) HasApps() bool {
	if o != nil && !IsNil(o.Apps) {
		return true
	}

	return false
}

// SetApps gets a reference to the given AppsQuota and assigns it to the Apps field.
func (o *OrganizationQuota) SetApps(v AppsQuota) {
	o.Apps = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *OrganizationQuota) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationQuota) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *OrganizationQuota) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *OrganizationQuota) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetDomains returns the Domains field value if set, zero value otherwise.
func (o *OrganizationQuota) GetDomains() DomainsQuota {
	if o == nil || IsNil(o.Domains) {
		var ret DomainsQuota
		return ret
	}
	return *o.Domains
}

// GetDomainsOk returns a tuple with the Domains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationQuota) GetDomainsOk() (*DomainsQuota, bool) {
	if o == nil || IsNil(o.Domains) {
		return nil, false
	}
	return o.Domains, true
}

// HasDomains returns a boolean if a field has been set.
func (o *OrganizationQuota) HasDomains() bool {
	if o != nil && !IsNil(o.Domains) {
		return true
	}

	return false
}

// SetDomains gets a reference to the given DomainsQuota and assigns it to the Domains field.
func (o *OrganizationQuota) SetDomains(v DomainsQuota) {
	o.Domains = &v
}

// GetGuid returns the Guid field value if set, zero value otherwise.
func (o *OrganizationQuota) GetGuid() string {
	if o == nil || IsNil(o.Guid) {
		var ret string
		return ret
	}
	return *o.Guid
}

// GetGuidOk returns a tuple with the Guid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationQuota) GetGuidOk() (*string, bool) {
	if o == nil || IsNil(o.Guid) {
		return nil, false
	}
	return o.Guid, true
}

// HasGuid returns a boolean if a field has been set.
func (o *OrganizationQuota) HasGuid() bool {
	if o != nil && !IsNil(o.Guid) {
		return true
	}

	return false
}

// SetGuid gets a reference to the given string and assigns it to the Guid field.
func (o *OrganizationQuota) SetGuid(v string) {
	o.Guid = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *OrganizationQuota) GetLinks() OrganizationQuotaLinks {
	if o == nil || IsNil(o.Links) {
		var ret OrganizationQuotaLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationQuota) GetLinksOk() (*OrganizationQuotaLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *OrganizationQuota) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given OrganizationQuotaLinks and assigns it to the Links field.
func (o *OrganizationQuota) SetLinks(v OrganizationQuotaLinks) {
	o.Links = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OrganizationQuota) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationQuota) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OrganizationQuota) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OrganizationQuota) SetName(v string) {
	o.Name = &v
}

// GetRelationships returns the Relationships field value if set, zero value otherwise.
func (o *OrganizationQuota) GetRelationships() OrganizationQuotaRelationships {
	if o == nil || IsNil(o.Relationships) {
		var ret OrganizationQuotaRelationships
		return ret
	}
	return *o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationQuota) GetRelationshipsOk() (*OrganizationQuotaRelationships, bool) {
	if o == nil || IsNil(o.Relationships) {
		return nil, false
	}
	return o.Relationships, true
}

// HasRelationships returns a boolean if a field has been set.
func (o *OrganizationQuota) HasRelationships() bool {
	if o != nil && !IsNil(o.Relationships) {
		return true
	}

	return false
}

// SetRelationships gets a reference to the given OrganizationQuotaRelationships and assigns it to the Relationships field.
func (o *OrganizationQuota) SetRelationships(v OrganizationQuotaRelationships) {
	o.Relationships = &v
}

// GetRoutes returns the Routes field value if set, zero value otherwise.
func (o *OrganizationQuota) GetRoutes() RoutesQuota {
	if o == nil || IsNil(o.Routes) {
		var ret RoutesQuota
		return ret
	}
	return *o.Routes
}

// GetRoutesOk returns a tuple with the Routes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationQuota) GetRoutesOk() (*RoutesQuota, bool) {
	if o == nil || IsNil(o.Routes) {
		return nil, false
	}
	return o.Routes, true
}

// HasRoutes returns a boolean if a field has been set.
func (o *OrganizationQuota) HasRoutes() bool {
	if o != nil && !IsNil(o.Routes) {
		return true
	}

	return false
}

// SetRoutes gets a reference to the given RoutesQuota and assigns it to the Routes field.
func (o *OrganizationQuota) SetRoutes(v RoutesQuota) {
	o.Routes = &v
}

// GetServices returns the Services field value if set, zero value otherwise.
func (o *OrganizationQuota) GetServices() ServicesQuota {
	if o == nil || IsNil(o.Services) {
		var ret ServicesQuota
		return ret
	}
	return *o.Services
}

// GetServicesOk returns a tuple with the Services field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationQuota) GetServicesOk() (*ServicesQuota, bool) {
	if o == nil || IsNil(o.Services) {
		return nil, false
	}
	return o.Services, true
}

// HasServices returns a boolean if a field has been set.
func (o *OrganizationQuota) HasServices() bool {
	if o != nil && !IsNil(o.Services) {
		return true
	}

	return false
}

// SetServices gets a reference to the given ServicesQuota and assigns it to the Services field.
func (o *OrganizationQuota) SetServices(v ServicesQuota) {
	o.Services = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *OrganizationQuota) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationQuota) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *OrganizationQuota) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *OrganizationQuota) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o OrganizationQuota) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationQuota) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Apps) {
		toSerialize["apps"] = o.Apps
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Domains) {
		toSerialize["domains"] = o.Domains
	}
	if !IsNil(o.Guid) {
		toSerialize["guid"] = o.Guid
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Relationships) {
		toSerialize["relationships"] = o.Relationships
	}
	if !IsNil(o.Routes) {
		toSerialize["routes"] = o.Routes
	}
	if !IsNil(o.Services) {
		toSerialize["services"] = o.Services
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableOrganizationQuota struct {
	value *OrganizationQuota
	isSet bool
}

func (v NullableOrganizationQuota) Get() *OrganizationQuota {
	return v.value
}

func (v *NullableOrganizationQuota) Set(val *OrganizationQuota) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationQuota) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationQuota) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationQuota(val *OrganizationQuota) *NullableOrganizationQuota {
	return &NullableOrganizationQuota{value: val, isSet: true}
}

func (v NullableOrganizationQuota) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationQuota) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


