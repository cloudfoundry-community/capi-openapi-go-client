/*
Cloud Controller API

API specification for managing environment variable groups in Cloud Controller.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the V3AppsGuidEnvironmentVariablesPatchRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V3AppsGuidEnvironmentVariablesPatchRequest{}

// V3AppsGuidEnvironmentVariablesPatchRequest struct for V3AppsGuidEnvironmentVariablesPatchRequest
type V3AppsGuidEnvironmentVariablesPatchRequest struct {
	Var *map[string]string `json:"var,omitempty"`
}

// NewV3AppsGuidEnvironmentVariablesPatchRequest instantiates a new V3AppsGuidEnvironmentVariablesPatchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV3AppsGuidEnvironmentVariablesPatchRequest() *V3AppsGuidEnvironmentVariablesPatchRequest {
	this := V3AppsGuidEnvironmentVariablesPatchRequest{}
	return &this
}

// NewV3AppsGuidEnvironmentVariablesPatchRequestWithDefaults instantiates a new V3AppsGuidEnvironmentVariablesPatchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV3AppsGuidEnvironmentVariablesPatchRequestWithDefaults() *V3AppsGuidEnvironmentVariablesPatchRequest {
	this := V3AppsGuidEnvironmentVariablesPatchRequest{}
	return &this
}

// GetVar returns the Var field value if set, zero value otherwise.
func (o *V3AppsGuidEnvironmentVariablesPatchRequest) GetVar() map[string]string {
	if o == nil || IsNil(o.Var) {
		var ret map[string]string
		return ret
	}
	return *o.Var
}

// GetVarOk returns a tuple with the Var field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3AppsGuidEnvironmentVariablesPatchRequest) GetVarOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Var) {
		return nil, false
	}
	return o.Var, true
}

// HasVar returns a boolean if a field has been set.
func (o *V3AppsGuidEnvironmentVariablesPatchRequest) HasVar() bool {
	if o != nil && !IsNil(o.Var) {
		return true
	}

	return false
}

// SetVar gets a reference to the given map[string]string and assigns it to the Var field.
func (o *V3AppsGuidEnvironmentVariablesPatchRequest) SetVar(v map[string]string) {
	o.Var = &v
}

func (o V3AppsGuidEnvironmentVariablesPatchRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V3AppsGuidEnvironmentVariablesPatchRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Var) {
		toSerialize["var"] = o.Var
	}
	return toSerialize, nil
}

type NullableV3AppsGuidEnvironmentVariablesPatchRequest struct {
	value *V3AppsGuidEnvironmentVariablesPatchRequest
	isSet bool
}

func (v NullableV3AppsGuidEnvironmentVariablesPatchRequest) Get() *V3AppsGuidEnvironmentVariablesPatchRequest {
	return v.value
}

func (v *NullableV3AppsGuidEnvironmentVariablesPatchRequest) Set(val *V3AppsGuidEnvironmentVariablesPatchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV3AppsGuidEnvironmentVariablesPatchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV3AppsGuidEnvironmentVariablesPatchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV3AppsGuidEnvironmentVariablesPatchRequest(val *V3AppsGuidEnvironmentVariablesPatchRequest) *NullableV3AppsGuidEnvironmentVariablesPatchRequest {
	return &NullableV3AppsGuidEnvironmentVariablesPatchRequest{value: val, isSet: true}
}

func (v NullableV3AppsGuidEnvironmentVariablesPatchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV3AppsGuidEnvironmentVariablesPatchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


