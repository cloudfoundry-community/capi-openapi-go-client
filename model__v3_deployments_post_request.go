/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the V3DeploymentsPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V3DeploymentsPostRequest{}

// V3DeploymentsPostRequest struct for V3DeploymentsPostRequest
type V3DeploymentsPostRequest struct {
	Droplet *V3DeploymentsPostRequestDroplet `json:"droplet,omitempty"`
	Metadata *V3AppsGuidTasksPostRequestMetadata `json:"metadata,omitempty"`
	Options *V3DeploymentsPostRequestOptions `json:"options,omitempty"`
	Relationships V3DeploymentsPostRequestRelationships `json:"relationships"`
	Revision *V3DeploymentsPostRequestRevision `json:"revision,omitempty"`
	// Deployment strategy to use
	Strategy *string `json:"strategy,omitempty"`
}

type _V3DeploymentsPostRequest V3DeploymentsPostRequest

// NewV3DeploymentsPostRequest instantiates a new V3DeploymentsPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV3DeploymentsPostRequest(relationships V3DeploymentsPostRequestRelationships) *V3DeploymentsPostRequest {
	this := V3DeploymentsPostRequest{}
	this.Relationships = relationships
	var strategy string = "rolling"
	this.Strategy = &strategy
	return &this
}

// NewV3DeploymentsPostRequestWithDefaults instantiates a new V3DeploymentsPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV3DeploymentsPostRequestWithDefaults() *V3DeploymentsPostRequest {
	this := V3DeploymentsPostRequest{}
	var strategy string = "rolling"
	this.Strategy = &strategy
	return &this
}

// GetDroplet returns the Droplet field value if set, zero value otherwise.
func (o *V3DeploymentsPostRequest) GetDroplet() V3DeploymentsPostRequestDroplet {
	if o == nil || IsNil(o.Droplet) {
		var ret V3DeploymentsPostRequestDroplet
		return ret
	}
	return *o.Droplet
}

// GetDropletOk returns a tuple with the Droplet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3DeploymentsPostRequest) GetDropletOk() (*V3DeploymentsPostRequestDroplet, bool) {
	if o == nil || IsNil(o.Droplet) {
		return nil, false
	}
	return o.Droplet, true
}

// HasDroplet returns a boolean if a field has been set.
func (o *V3DeploymentsPostRequest) HasDroplet() bool {
	if o != nil && !IsNil(o.Droplet) {
		return true
	}

	return false
}

// SetDroplet gets a reference to the given V3DeploymentsPostRequestDroplet and assigns it to the Droplet field.
func (o *V3DeploymentsPostRequest) SetDroplet(v V3DeploymentsPostRequestDroplet) {
	o.Droplet = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *V3DeploymentsPostRequest) GetMetadata() V3AppsGuidTasksPostRequestMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret V3AppsGuidTasksPostRequestMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3DeploymentsPostRequest) GetMetadataOk() (*V3AppsGuidTasksPostRequestMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *V3DeploymentsPostRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given V3AppsGuidTasksPostRequestMetadata and assigns it to the Metadata field.
func (o *V3DeploymentsPostRequest) SetMetadata(v V3AppsGuidTasksPostRequestMetadata) {
	o.Metadata = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *V3DeploymentsPostRequest) GetOptions() V3DeploymentsPostRequestOptions {
	if o == nil || IsNil(o.Options) {
		var ret V3DeploymentsPostRequestOptions
		return ret
	}
	return *o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3DeploymentsPostRequest) GetOptionsOk() (*V3DeploymentsPostRequestOptions, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *V3DeploymentsPostRequest) HasOptions() bool {
	if o != nil && !IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given V3DeploymentsPostRequestOptions and assigns it to the Options field.
func (o *V3DeploymentsPostRequest) SetOptions(v V3DeploymentsPostRequestOptions) {
	o.Options = &v
}

// GetRelationships returns the Relationships field value
func (o *V3DeploymentsPostRequest) GetRelationships() V3DeploymentsPostRequestRelationships {
	if o == nil {
		var ret V3DeploymentsPostRequestRelationships
		return ret
	}

	return o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value
// and a boolean to check if the value has been set.
func (o *V3DeploymentsPostRequest) GetRelationshipsOk() (*V3DeploymentsPostRequestRelationships, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Relationships, true
}

// SetRelationships sets field value
func (o *V3DeploymentsPostRequest) SetRelationships(v V3DeploymentsPostRequestRelationships) {
	o.Relationships = v
}

// GetRevision returns the Revision field value if set, zero value otherwise.
func (o *V3DeploymentsPostRequest) GetRevision() V3DeploymentsPostRequestRevision {
	if o == nil || IsNil(o.Revision) {
		var ret V3DeploymentsPostRequestRevision
		return ret
	}
	return *o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3DeploymentsPostRequest) GetRevisionOk() (*V3DeploymentsPostRequestRevision, bool) {
	if o == nil || IsNil(o.Revision) {
		return nil, false
	}
	return o.Revision, true
}

// HasRevision returns a boolean if a field has been set.
func (o *V3DeploymentsPostRequest) HasRevision() bool {
	if o != nil && !IsNil(o.Revision) {
		return true
	}

	return false
}

// SetRevision gets a reference to the given V3DeploymentsPostRequestRevision and assigns it to the Revision field.
func (o *V3DeploymentsPostRequest) SetRevision(v V3DeploymentsPostRequestRevision) {
	o.Revision = &v
}

// GetStrategy returns the Strategy field value if set, zero value otherwise.
func (o *V3DeploymentsPostRequest) GetStrategy() string {
	if o == nil || IsNil(o.Strategy) {
		var ret string
		return ret
	}
	return *o.Strategy
}

// GetStrategyOk returns a tuple with the Strategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3DeploymentsPostRequest) GetStrategyOk() (*string, bool) {
	if o == nil || IsNil(o.Strategy) {
		return nil, false
	}
	return o.Strategy, true
}

// HasStrategy returns a boolean if a field has been set.
func (o *V3DeploymentsPostRequest) HasStrategy() bool {
	if o != nil && !IsNil(o.Strategy) {
		return true
	}

	return false
}

// SetStrategy gets a reference to the given string and assigns it to the Strategy field.
func (o *V3DeploymentsPostRequest) SetStrategy(v string) {
	o.Strategy = &v
}

func (o V3DeploymentsPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V3DeploymentsPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Droplet) {
		toSerialize["droplet"] = o.Droplet
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	toSerialize["relationships"] = o.Relationships
	if !IsNil(o.Revision) {
		toSerialize["revision"] = o.Revision
	}
	if !IsNil(o.Strategy) {
		toSerialize["strategy"] = o.Strategy
	}
	return toSerialize, nil
}

func (o *V3DeploymentsPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"relationships",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV3DeploymentsPostRequest := _V3DeploymentsPostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varV3DeploymentsPostRequest)

	if err != nil {
		return err
	}

	*o = V3DeploymentsPostRequest(varV3DeploymentsPostRequest)

	return err
}

type NullableV3DeploymentsPostRequest struct {
	value *V3DeploymentsPostRequest
	isSet bool
}

func (v NullableV3DeploymentsPostRequest) Get() *V3DeploymentsPostRequest {
	return v.value
}

func (v *NullableV3DeploymentsPostRequest) Set(val *V3DeploymentsPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV3DeploymentsPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV3DeploymentsPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV3DeploymentsPostRequest(val *V3DeploymentsPostRequest) *NullableV3DeploymentsPostRequest {
	return &NullableV3DeploymentsPostRequest{value: val, isSet: true}
}

func (v NullableV3DeploymentsPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV3DeploymentsPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


