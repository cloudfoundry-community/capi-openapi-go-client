/*
Cloud Foundry API

Testing SecurityGroupsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package capiclient

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID/capiclient"
)

func Test_capiclient_SecurityGroupsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test SecurityGroupsAPIService V3SecurityGroupsGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.SecurityGroupsAPI.V3SecurityGroupsGet(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SecurityGroupsAPIService V3SecurityGroupsGuidDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var guid string

		resp, httpRes, err := apiClient.SecurityGroupsAPI.V3SecurityGroupsGuidDelete(context.Background(), guid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SecurityGroupsAPIService V3SecurityGroupsGuidGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var guid string

		resp, httpRes, err := apiClient.SecurityGroupsAPI.V3SecurityGroupsGuidGet(context.Background(), guid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SecurityGroupsAPIService V3SecurityGroupsGuidPatch", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var guid string

		resp, httpRes, err := apiClient.SecurityGroupsAPI.V3SecurityGroupsGuidPatch(context.Background(), guid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SecurityGroupsAPIService V3SecurityGroupsGuidRelationshipsRunningSpacesPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var guid string

		resp, httpRes, err := apiClient.SecurityGroupsAPI.V3SecurityGroupsGuidRelationshipsRunningSpacesPost(context.Background(), guid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SecurityGroupsAPIService V3SecurityGroupsGuidRelationshipsRunningSpacesSpaceGuidDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var guid string
		var spaceGuid string

		httpRes, err := apiClient.SecurityGroupsAPI.V3SecurityGroupsGuidRelationshipsRunningSpacesSpaceGuidDelete(context.Background(), guid, spaceGuid).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SecurityGroupsAPIService V3SecurityGroupsGuidRelationshipsStagingSpacesPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var guid string

		resp, httpRes, err := apiClient.SecurityGroupsAPI.V3SecurityGroupsGuidRelationshipsStagingSpacesPost(context.Background(), guid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SecurityGroupsAPIService V3SecurityGroupsGuidRelationshipsStagingSpacesSpaceGuidDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var guid string
		var spaceGuid string

		httpRes, err := apiClient.SecurityGroupsAPI.V3SecurityGroupsGuidRelationshipsStagingSpacesSpaceGuidDelete(context.Background(), guid, spaceGuid).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SecurityGroupsAPIService V3SecurityGroupsPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.SecurityGroupsAPI.V3SecurityGroupsPost(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SecurityGroupsAPIService V3SpacesGuidRunningSecurityGroupsGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var guid string

		resp, httpRes, err := apiClient.SecurityGroupsAPI.V3SpacesGuidRunningSecurityGroupsGet(context.Background(), guid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SecurityGroupsAPIService V3SpacesGuidStagingSecurityGroupsGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var guid string

		resp, httpRes, err := apiClient.SecurityGroupsAPI.V3SpacesGuidStagingSecurityGroupsGet(context.Background(), guid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
