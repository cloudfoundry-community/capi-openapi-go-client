/*
Cloud Foundry API

Testing ProcessesAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package capiclient

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID/capiclient"
)

func Test_capiclient_ProcessesAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ProcessesAPIService V3AppsGuidProcessesGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var guid string

		resp, httpRes, err := apiClient.ProcessesAPI.V3AppsGuidProcessesGet(context.Background(), guid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProcessesAPIService V3AppsGuidProcessesTypeGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var guid string
		var type_ string

		resp, httpRes, err := apiClient.ProcessesAPI.V3AppsGuidProcessesTypeGet(context.Background(), guid, type_).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProcessesAPIService V3ProcessesGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.ProcessesAPI.V3ProcessesGet(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProcessesAPIService V3ProcessesGuidActionsScalePost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var guid string

		resp, httpRes, err := apiClient.ProcessesAPI.V3ProcessesGuidActionsScalePost(context.Background(), guid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProcessesAPIService V3ProcessesGuidGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var guid string

		resp, httpRes, err := apiClient.ProcessesAPI.V3ProcessesGuidGet(context.Background(), guid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProcessesAPIService V3ProcessesGuidInstancesIndexDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var guid string
		var index int32

		httpRes, err := apiClient.ProcessesAPI.V3ProcessesGuidInstancesIndexDelete(context.Background(), guid, index).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProcessesAPIService V3ProcessesGuidPatch", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var guid string

		resp, httpRes, err := apiClient.ProcessesAPI.V3ProcessesGuidPatch(context.Background(), guid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProcessesAPIService V3ProcessesGuidSidecarsGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var guid string

		resp, httpRes, err := apiClient.ProcessesAPI.V3ProcessesGuidSidecarsGet(context.Background(), guid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProcessesAPIService V3ProcessesGuidStatsGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var guid string

		resp, httpRes, err := apiClient.ProcessesAPI.V3ProcessesGuidStatsGet(context.Background(), guid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProcessesAPIService V3SidecarsGuidProcessesGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var guid string

		resp, httpRes, err := apiClient.ProcessesAPI.V3SidecarsGuidProcessesGet(context.Background(), guid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
