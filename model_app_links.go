/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the AppLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppLinks{}

// AppLinks struct for AppLinks
type AppLinks struct {
	CurrentDroplet *Link `json:"current_droplet,omitempty"`
	DeployedRevisions *Link `json:"deployed_revisions,omitempty"`
	Droplets *Link `json:"droplets,omitempty"`
	EnvironmentVariables *Link `json:"environment_variables,omitempty"`
	Features *Link `json:"features,omitempty"`
	Packages *Link `json:"packages,omitempty"`
	Processes *Link `json:"processes,omitempty"`
	Revisions *Link `json:"revisions,omitempty"`
	Self *Link `json:"self,omitempty"`
	Space *Link `json:"space,omitempty"`
	Start *LinkWithMethod `json:"start,omitempty"`
	Stop *LinkWithMethod `json:"stop,omitempty"`
	Tasks *Link `json:"tasks,omitempty"`
}

// NewAppLinks instantiates a new AppLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppLinks() *AppLinks {
	this := AppLinks{}
	return &this
}

// NewAppLinksWithDefaults instantiates a new AppLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppLinksWithDefaults() *AppLinks {
	this := AppLinks{}
	return &this
}

// GetCurrentDroplet returns the CurrentDroplet field value if set, zero value otherwise.
func (o *AppLinks) GetCurrentDroplet() Link {
	if o == nil || IsNil(o.CurrentDroplet) {
		var ret Link
		return ret
	}
	return *o.CurrentDroplet
}

// GetCurrentDropletOk returns a tuple with the CurrentDroplet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLinks) GetCurrentDropletOk() (*Link, bool) {
	if o == nil || IsNil(o.CurrentDroplet) {
		return nil, false
	}
	return o.CurrentDroplet, true
}

// HasCurrentDroplet returns a boolean if a field has been set.
func (o *AppLinks) HasCurrentDroplet() bool {
	if o != nil && !IsNil(o.CurrentDroplet) {
		return true
	}

	return false
}

// SetCurrentDroplet gets a reference to the given Link and assigns it to the CurrentDroplet field.
func (o *AppLinks) SetCurrentDroplet(v Link) {
	o.CurrentDroplet = &v
}

// GetDeployedRevisions returns the DeployedRevisions field value if set, zero value otherwise.
func (o *AppLinks) GetDeployedRevisions() Link {
	if o == nil || IsNil(o.DeployedRevisions) {
		var ret Link
		return ret
	}
	return *o.DeployedRevisions
}

// GetDeployedRevisionsOk returns a tuple with the DeployedRevisions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLinks) GetDeployedRevisionsOk() (*Link, bool) {
	if o == nil || IsNil(o.DeployedRevisions) {
		return nil, false
	}
	return o.DeployedRevisions, true
}

// HasDeployedRevisions returns a boolean if a field has been set.
func (o *AppLinks) HasDeployedRevisions() bool {
	if o != nil && !IsNil(o.DeployedRevisions) {
		return true
	}

	return false
}

// SetDeployedRevisions gets a reference to the given Link and assigns it to the DeployedRevisions field.
func (o *AppLinks) SetDeployedRevisions(v Link) {
	o.DeployedRevisions = &v
}

// GetDroplets returns the Droplets field value if set, zero value otherwise.
func (o *AppLinks) GetDroplets() Link {
	if o == nil || IsNil(o.Droplets) {
		var ret Link
		return ret
	}
	return *o.Droplets
}

// GetDropletsOk returns a tuple with the Droplets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLinks) GetDropletsOk() (*Link, bool) {
	if o == nil || IsNil(o.Droplets) {
		return nil, false
	}
	return o.Droplets, true
}

// HasDroplets returns a boolean if a field has been set.
func (o *AppLinks) HasDroplets() bool {
	if o != nil && !IsNil(o.Droplets) {
		return true
	}

	return false
}

// SetDroplets gets a reference to the given Link and assigns it to the Droplets field.
func (o *AppLinks) SetDroplets(v Link) {
	o.Droplets = &v
}

// GetEnvironmentVariables returns the EnvironmentVariables field value if set, zero value otherwise.
func (o *AppLinks) GetEnvironmentVariables() Link {
	if o == nil || IsNil(o.EnvironmentVariables) {
		var ret Link
		return ret
	}
	return *o.EnvironmentVariables
}

// GetEnvironmentVariablesOk returns a tuple with the EnvironmentVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLinks) GetEnvironmentVariablesOk() (*Link, bool) {
	if o == nil || IsNil(o.EnvironmentVariables) {
		return nil, false
	}
	return o.EnvironmentVariables, true
}

// HasEnvironmentVariables returns a boolean if a field has been set.
func (o *AppLinks) HasEnvironmentVariables() bool {
	if o != nil && !IsNil(o.EnvironmentVariables) {
		return true
	}

	return false
}

// SetEnvironmentVariables gets a reference to the given Link and assigns it to the EnvironmentVariables field.
func (o *AppLinks) SetEnvironmentVariables(v Link) {
	o.EnvironmentVariables = &v
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *AppLinks) GetFeatures() Link {
	if o == nil || IsNil(o.Features) {
		var ret Link
		return ret
	}
	return *o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLinks) GetFeaturesOk() (*Link, bool) {
	if o == nil || IsNil(o.Features) {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *AppLinks) HasFeatures() bool {
	if o != nil && !IsNil(o.Features) {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given Link and assigns it to the Features field.
func (o *AppLinks) SetFeatures(v Link) {
	o.Features = &v
}

// GetPackages returns the Packages field value if set, zero value otherwise.
func (o *AppLinks) GetPackages() Link {
	if o == nil || IsNil(o.Packages) {
		var ret Link
		return ret
	}
	return *o.Packages
}

// GetPackagesOk returns a tuple with the Packages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLinks) GetPackagesOk() (*Link, bool) {
	if o == nil || IsNil(o.Packages) {
		return nil, false
	}
	return o.Packages, true
}

// HasPackages returns a boolean if a field has been set.
func (o *AppLinks) HasPackages() bool {
	if o != nil && !IsNil(o.Packages) {
		return true
	}

	return false
}

// SetPackages gets a reference to the given Link and assigns it to the Packages field.
func (o *AppLinks) SetPackages(v Link) {
	o.Packages = &v
}

// GetProcesses returns the Processes field value if set, zero value otherwise.
func (o *AppLinks) GetProcesses() Link {
	if o == nil || IsNil(o.Processes) {
		var ret Link
		return ret
	}
	return *o.Processes
}

// GetProcessesOk returns a tuple with the Processes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLinks) GetProcessesOk() (*Link, bool) {
	if o == nil || IsNil(o.Processes) {
		return nil, false
	}
	return o.Processes, true
}

// HasProcesses returns a boolean if a field has been set.
func (o *AppLinks) HasProcesses() bool {
	if o != nil && !IsNil(o.Processes) {
		return true
	}

	return false
}

// SetProcesses gets a reference to the given Link and assigns it to the Processes field.
func (o *AppLinks) SetProcesses(v Link) {
	o.Processes = &v
}

// GetRevisions returns the Revisions field value if set, zero value otherwise.
func (o *AppLinks) GetRevisions() Link {
	if o == nil || IsNil(o.Revisions) {
		var ret Link
		return ret
	}
	return *o.Revisions
}

// GetRevisionsOk returns a tuple with the Revisions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLinks) GetRevisionsOk() (*Link, bool) {
	if o == nil || IsNil(o.Revisions) {
		return nil, false
	}
	return o.Revisions, true
}

// HasRevisions returns a boolean if a field has been set.
func (o *AppLinks) HasRevisions() bool {
	if o != nil && !IsNil(o.Revisions) {
		return true
	}

	return false
}

// SetRevisions gets a reference to the given Link and assigns it to the Revisions field.
func (o *AppLinks) SetRevisions(v Link) {
	o.Revisions = &v
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *AppLinks) GetSelf() Link {
	if o == nil || IsNil(o.Self) {
		var ret Link
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLinks) GetSelfOk() (*Link, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *AppLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given Link and assigns it to the Self field.
func (o *AppLinks) SetSelf(v Link) {
	o.Self = &v
}

// GetSpace returns the Space field value if set, zero value otherwise.
func (o *AppLinks) GetSpace() Link {
	if o == nil || IsNil(o.Space) {
		var ret Link
		return ret
	}
	return *o.Space
}

// GetSpaceOk returns a tuple with the Space field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLinks) GetSpaceOk() (*Link, bool) {
	if o == nil || IsNil(o.Space) {
		return nil, false
	}
	return o.Space, true
}

// HasSpace returns a boolean if a field has been set.
func (o *AppLinks) HasSpace() bool {
	if o != nil && !IsNil(o.Space) {
		return true
	}

	return false
}

// SetSpace gets a reference to the given Link and assigns it to the Space field.
func (o *AppLinks) SetSpace(v Link) {
	o.Space = &v
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *AppLinks) GetStart() LinkWithMethod {
	if o == nil || IsNil(o.Start) {
		var ret LinkWithMethod
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLinks) GetStartOk() (*LinkWithMethod, bool) {
	if o == nil || IsNil(o.Start) {
		return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *AppLinks) HasStart() bool {
	if o != nil && !IsNil(o.Start) {
		return true
	}

	return false
}

// SetStart gets a reference to the given LinkWithMethod and assigns it to the Start field.
func (o *AppLinks) SetStart(v LinkWithMethod) {
	o.Start = &v
}

// GetStop returns the Stop field value if set, zero value otherwise.
func (o *AppLinks) GetStop() LinkWithMethod {
	if o == nil || IsNil(o.Stop) {
		var ret LinkWithMethod
		return ret
	}
	return *o.Stop
}

// GetStopOk returns a tuple with the Stop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLinks) GetStopOk() (*LinkWithMethod, bool) {
	if o == nil || IsNil(o.Stop) {
		return nil, false
	}
	return o.Stop, true
}

// HasStop returns a boolean if a field has been set.
func (o *AppLinks) HasStop() bool {
	if o != nil && !IsNil(o.Stop) {
		return true
	}

	return false
}

// SetStop gets a reference to the given LinkWithMethod and assigns it to the Stop field.
func (o *AppLinks) SetStop(v LinkWithMethod) {
	o.Stop = &v
}

// GetTasks returns the Tasks field value if set, zero value otherwise.
func (o *AppLinks) GetTasks() Link {
	if o == nil || IsNil(o.Tasks) {
		var ret Link
		return ret
	}
	return *o.Tasks
}

// GetTasksOk returns a tuple with the Tasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLinks) GetTasksOk() (*Link, bool) {
	if o == nil || IsNil(o.Tasks) {
		return nil, false
	}
	return o.Tasks, true
}

// HasTasks returns a boolean if a field has been set.
func (o *AppLinks) HasTasks() bool {
	if o != nil && !IsNil(o.Tasks) {
		return true
	}

	return false
}

// SetTasks gets a reference to the given Link and assigns it to the Tasks field.
func (o *AppLinks) SetTasks(v Link) {
	o.Tasks = &v
}

func (o AppLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CurrentDroplet) {
		toSerialize["current_droplet"] = o.CurrentDroplet
	}
	if !IsNil(o.DeployedRevisions) {
		toSerialize["deployed_revisions"] = o.DeployedRevisions
	}
	if !IsNil(o.Droplets) {
		toSerialize["droplets"] = o.Droplets
	}
	if !IsNil(o.EnvironmentVariables) {
		toSerialize["environment_variables"] = o.EnvironmentVariables
	}
	if !IsNil(o.Features) {
		toSerialize["features"] = o.Features
	}
	if !IsNil(o.Packages) {
		toSerialize["packages"] = o.Packages
	}
	if !IsNil(o.Processes) {
		toSerialize["processes"] = o.Processes
	}
	if !IsNil(o.Revisions) {
		toSerialize["revisions"] = o.Revisions
	}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}
	if !IsNil(o.Space) {
		toSerialize["space"] = o.Space
	}
	if !IsNil(o.Start) {
		toSerialize["start"] = o.Start
	}
	if !IsNil(o.Stop) {
		toSerialize["stop"] = o.Stop
	}
	if !IsNil(o.Tasks) {
		toSerialize["tasks"] = o.Tasks
	}
	return toSerialize, nil
}

type NullableAppLinks struct {
	value *AppLinks
	isSet bool
}

func (v NullableAppLinks) Get() *AppLinks {
	return v.value
}

func (v *NullableAppLinks) Set(val *AppLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableAppLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableAppLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppLinks(val *AppLinks) *NullableAppLinks {
	return &NullableAppLinks{value: val, isSet: true}
}

func (v NullableAppLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


