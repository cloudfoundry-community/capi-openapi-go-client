/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the V3BuildpacksGuidPatchRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V3BuildpacksGuidPatchRequest{}

// V3BuildpacksGuidPatchRequest struct for V3BuildpacksGuidPatchRequest
type V3BuildpacksGuidPatchRequest struct {
	// Whether buildpack is available for use
	Enabled *bool `json:"enabled,omitempty"`
	// Whether buildpack updates are prevented
	Locked *bool `json:"locked,omitempty"`
	Metadata *V3AppsGuidTasksPostRequestMetadata `json:"metadata,omitempty"`
	// Name of the buildpack
	Name *string `json:"name,omitempty"`
	// Priority position for automatic detection
	Position *int32 `json:"position,omitempty"`
	// Stack the buildpack runs on
	Stack *string `json:"stack,omitempty"`
}

// NewV3BuildpacksGuidPatchRequest instantiates a new V3BuildpacksGuidPatchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV3BuildpacksGuidPatchRequest() *V3BuildpacksGuidPatchRequest {
	this := V3BuildpacksGuidPatchRequest{}
	return &this
}

// NewV3BuildpacksGuidPatchRequestWithDefaults instantiates a new V3BuildpacksGuidPatchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV3BuildpacksGuidPatchRequestWithDefaults() *V3BuildpacksGuidPatchRequest {
	this := V3BuildpacksGuidPatchRequest{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *V3BuildpacksGuidPatchRequest) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3BuildpacksGuidPatchRequest) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *V3BuildpacksGuidPatchRequest) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *V3BuildpacksGuidPatchRequest) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetLocked returns the Locked field value if set, zero value otherwise.
func (o *V3BuildpacksGuidPatchRequest) GetLocked() bool {
	if o == nil || IsNil(o.Locked) {
		var ret bool
		return ret
	}
	return *o.Locked
}

// GetLockedOk returns a tuple with the Locked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3BuildpacksGuidPatchRequest) GetLockedOk() (*bool, bool) {
	if o == nil || IsNil(o.Locked) {
		return nil, false
	}
	return o.Locked, true
}

// HasLocked returns a boolean if a field has been set.
func (o *V3BuildpacksGuidPatchRequest) HasLocked() bool {
	if o != nil && !IsNil(o.Locked) {
		return true
	}

	return false
}

// SetLocked gets a reference to the given bool and assigns it to the Locked field.
func (o *V3BuildpacksGuidPatchRequest) SetLocked(v bool) {
	o.Locked = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *V3BuildpacksGuidPatchRequest) GetMetadata() V3AppsGuidTasksPostRequestMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret V3AppsGuidTasksPostRequestMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3BuildpacksGuidPatchRequest) GetMetadataOk() (*V3AppsGuidTasksPostRequestMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *V3BuildpacksGuidPatchRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given V3AppsGuidTasksPostRequestMetadata and assigns it to the Metadata field.
func (o *V3BuildpacksGuidPatchRequest) SetMetadata(v V3AppsGuidTasksPostRequestMetadata) {
	o.Metadata = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V3BuildpacksGuidPatchRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3BuildpacksGuidPatchRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V3BuildpacksGuidPatchRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V3BuildpacksGuidPatchRequest) SetName(v string) {
	o.Name = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *V3BuildpacksGuidPatchRequest) GetPosition() int32 {
	if o == nil || IsNil(o.Position) {
		var ret int32
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3BuildpacksGuidPatchRequest) GetPositionOk() (*int32, bool) {
	if o == nil || IsNil(o.Position) {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *V3BuildpacksGuidPatchRequest) HasPosition() bool {
	if o != nil && !IsNil(o.Position) {
		return true
	}

	return false
}

// SetPosition gets a reference to the given int32 and assigns it to the Position field.
func (o *V3BuildpacksGuidPatchRequest) SetPosition(v int32) {
	o.Position = &v
}

// GetStack returns the Stack field value if set, zero value otherwise.
func (o *V3BuildpacksGuidPatchRequest) GetStack() string {
	if o == nil || IsNil(o.Stack) {
		var ret string
		return ret
	}
	return *o.Stack
}

// GetStackOk returns a tuple with the Stack field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3BuildpacksGuidPatchRequest) GetStackOk() (*string, bool) {
	if o == nil || IsNil(o.Stack) {
		return nil, false
	}
	return o.Stack, true
}

// HasStack returns a boolean if a field has been set.
func (o *V3BuildpacksGuidPatchRequest) HasStack() bool {
	if o != nil && !IsNil(o.Stack) {
		return true
	}

	return false
}

// SetStack gets a reference to the given string and assigns it to the Stack field.
func (o *V3BuildpacksGuidPatchRequest) SetStack(v string) {
	o.Stack = &v
}

func (o V3BuildpacksGuidPatchRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V3BuildpacksGuidPatchRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Locked) {
		toSerialize["locked"] = o.Locked
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Position) {
		toSerialize["position"] = o.Position
	}
	if !IsNil(o.Stack) {
		toSerialize["stack"] = o.Stack
	}
	return toSerialize, nil
}

type NullableV3BuildpacksGuidPatchRequest struct {
	value *V3BuildpacksGuidPatchRequest
	isSet bool
}

func (v NullableV3BuildpacksGuidPatchRequest) Get() *V3BuildpacksGuidPatchRequest {
	return v.value
}

func (v *NullableV3BuildpacksGuidPatchRequest) Set(val *V3BuildpacksGuidPatchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV3BuildpacksGuidPatchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV3BuildpacksGuidPatchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV3BuildpacksGuidPatchRequest(val *V3BuildpacksGuidPatchRequest) *NullableV3BuildpacksGuidPatchRequest {
	return &NullableV3BuildpacksGuidPatchRequest{value: val, isSet: true}
}

func (v NullableV3BuildpacksGuidPatchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV3BuildpacksGuidPatchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


