/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the AppUsageEventList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppUsageEventList{}

// AppUsageEventList struct for AppUsageEventList
type AppUsageEventList struct {
	Pagination *AppUsageEventListPagination `json:"pagination,omitempty"`
	Resources []AppUsageEvent `json:"resources,omitempty"`
}

// NewAppUsageEventList instantiates a new AppUsageEventList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppUsageEventList() *AppUsageEventList {
	this := AppUsageEventList{}
	return &this
}

// NewAppUsageEventListWithDefaults instantiates a new AppUsageEventList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppUsageEventListWithDefaults() *AppUsageEventList {
	this := AppUsageEventList{}
	return &this
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *AppUsageEventList) GetPagination() AppUsageEventListPagination {
	if o == nil || IsNil(o.Pagination) {
		var ret AppUsageEventListPagination
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppUsageEventList) GetPaginationOk() (*AppUsageEventListPagination, bool) {
	if o == nil || IsNil(o.Pagination) {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *AppUsageEventList) HasPagination() bool {
	if o != nil && !IsNil(o.Pagination) {
		return true
	}

	return false
}

// SetPagination gets a reference to the given AppUsageEventListPagination and assigns it to the Pagination field.
func (o *AppUsageEventList) SetPagination(v AppUsageEventListPagination) {
	o.Pagination = &v
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *AppUsageEventList) GetResources() []AppUsageEvent {
	if o == nil || IsNil(o.Resources) {
		var ret []AppUsageEvent
		return ret
	}
	return o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppUsageEventList) GetResourcesOk() ([]AppUsageEvent, bool) {
	if o == nil || IsNil(o.Resources) {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *AppUsageEventList) HasResources() bool {
	if o != nil && !IsNil(o.Resources) {
		return true
	}

	return false
}

// SetResources gets a reference to the given []AppUsageEvent and assigns it to the Resources field.
func (o *AppUsageEventList) SetResources(v []AppUsageEvent) {
	o.Resources = v
}

func (o AppUsageEventList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppUsageEventList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Pagination) {
		toSerialize["pagination"] = o.Pagination
	}
	if !IsNil(o.Resources) {
		toSerialize["resources"] = o.Resources
	}
	return toSerialize, nil
}

type NullableAppUsageEventList struct {
	value *AppUsageEventList
	isSet bool
}

func (v NullableAppUsageEventList) Get() *AppUsageEventList {
	return v.value
}

func (v *NullableAppUsageEventList) Set(val *AppUsageEventList) {
	v.value = val
	v.isSet = true
}

func (v NullableAppUsageEventList) IsSet() bool {
	return v.isSet
}

func (v *NullableAppUsageEventList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppUsageEventList(val *AppUsageEventList) *NullableAppUsageEventList {
	return &NullableAppUsageEventList{value: val, isSet: true}
}

func (v NullableAppUsageEventList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppUsageEventList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


