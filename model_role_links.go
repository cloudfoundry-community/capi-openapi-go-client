/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RoleLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoleLinks{}

// RoleLinks struct for RoleLinks
type RoleLinks struct {
	Organization NullableRoleLinksOrganization `json:"organization,omitempty"`
	Self RoleLinksSelf `json:"self"`
	Space NullableRoleLinksSpace `json:"space,omitempty"`
	User RoleLinksUser `json:"user"`
}

type _RoleLinks RoleLinks

// NewRoleLinks instantiates a new RoleLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleLinks(self RoleLinksSelf, user RoleLinksUser) *RoleLinks {
	this := RoleLinks{}
	this.Self = self
	this.User = user
	return &this
}

// NewRoleLinksWithDefaults instantiates a new RoleLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleLinksWithDefaults() *RoleLinks {
	this := RoleLinks{}
	return &this
}

// GetOrganization returns the Organization field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RoleLinks) GetOrganization() RoleLinksOrganization {
	if o == nil || IsNil(o.Organization.Get()) {
		var ret RoleLinksOrganization
		return ret
	}
	return *o.Organization.Get()
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RoleLinks) GetOrganizationOk() (*RoleLinksOrganization, bool) {
	if o == nil {
		return nil, false
	}
	return o.Organization.Get(), o.Organization.IsSet()
}

// HasOrganization returns a boolean if a field has been set.
func (o *RoleLinks) HasOrganization() bool {
	if o != nil && o.Organization.IsSet() {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given NullableRoleLinksOrganization and assigns it to the Organization field.
func (o *RoleLinks) SetOrganization(v RoleLinksOrganization) {
	o.Organization.Set(&v)
}
// SetOrganizationNil sets the value for Organization to be an explicit nil
func (o *RoleLinks) SetOrganizationNil() {
	o.Organization.Set(nil)
}

// UnsetOrganization ensures that no value is present for Organization, not even an explicit nil
func (o *RoleLinks) UnsetOrganization() {
	o.Organization.Unset()
}

// GetSelf returns the Self field value
func (o *RoleLinks) GetSelf() RoleLinksSelf {
	if o == nil {
		var ret RoleLinksSelf
		return ret
	}

	return o.Self
}

// GetSelfOk returns a tuple with the Self field value
// and a boolean to check if the value has been set.
func (o *RoleLinks) GetSelfOk() (*RoleLinksSelf, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Self, true
}

// SetSelf sets field value
func (o *RoleLinks) SetSelf(v RoleLinksSelf) {
	o.Self = v
}

// GetSpace returns the Space field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RoleLinks) GetSpace() RoleLinksSpace {
	if o == nil || IsNil(o.Space.Get()) {
		var ret RoleLinksSpace
		return ret
	}
	return *o.Space.Get()
}

// GetSpaceOk returns a tuple with the Space field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RoleLinks) GetSpaceOk() (*RoleLinksSpace, bool) {
	if o == nil {
		return nil, false
	}
	return o.Space.Get(), o.Space.IsSet()
}

// HasSpace returns a boolean if a field has been set.
func (o *RoleLinks) HasSpace() bool {
	if o != nil && o.Space.IsSet() {
		return true
	}

	return false
}

// SetSpace gets a reference to the given NullableRoleLinksSpace and assigns it to the Space field.
func (o *RoleLinks) SetSpace(v RoleLinksSpace) {
	o.Space.Set(&v)
}
// SetSpaceNil sets the value for Space to be an explicit nil
func (o *RoleLinks) SetSpaceNil() {
	o.Space.Set(nil)
}

// UnsetSpace ensures that no value is present for Space, not even an explicit nil
func (o *RoleLinks) UnsetSpace() {
	o.Space.Unset()
}

// GetUser returns the User field value
func (o *RoleLinks) GetUser() RoleLinksUser {
	if o == nil {
		var ret RoleLinksUser
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *RoleLinks) GetUserOk() (*RoleLinksUser, bool) {
	if o == nil {
		return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *RoleLinks) SetUser(v RoleLinksUser) {
	o.User = v
}

func (o RoleLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoleLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Organization.IsSet() {
		toSerialize["organization"] = o.Organization.Get()
	}
	toSerialize["self"] = o.Self
	if o.Space.IsSet() {
		toSerialize["space"] = o.Space.Get()
	}
	toSerialize["user"] = o.User
	return toSerialize, nil
}

func (o *RoleLinks) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"self",
		"user",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRoleLinks := _RoleLinks{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRoleLinks)

	if err != nil {
		return err
	}

	*o = RoleLinks(varRoleLinks)

	return err
}

type NullableRoleLinks struct {
	value *RoleLinks
	isSet bool
}

func (v NullableRoleLinks) Get() *RoleLinks {
	return v.value
}

func (v *NullableRoleLinks) Set(val *RoleLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleLinks(val *RoleLinks) *NullableRoleLinks {
	return &NullableRoleLinks{value: val, isSet: true}
}

func (v NullableRoleLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


