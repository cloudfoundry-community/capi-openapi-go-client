/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ManifestDiffDiffInnerChangesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManifestDiffDiffInnerChangesInner{}

// ManifestDiffDiffInnerChangesInner struct for ManifestDiffDiffInnerChangesInner
type ManifestDiffDiffInnerChangesInner struct {
	// Current value of the property
	CurrentValue interface{} `json:"current_value,omitempty"`
	// New value from the manifest
	NewValue interface{} `json:"new_value,omitempty"`
	// Property being changed
	Property string `json:"property"`
	// Type of change
	Type string `json:"type"`
}

type _ManifestDiffDiffInnerChangesInner ManifestDiffDiffInnerChangesInner

// NewManifestDiffDiffInnerChangesInner instantiates a new ManifestDiffDiffInnerChangesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManifestDiffDiffInnerChangesInner(property string, type_ string) *ManifestDiffDiffInnerChangesInner {
	this := ManifestDiffDiffInnerChangesInner{}
	this.Property = property
	this.Type = type_
	return &this
}

// NewManifestDiffDiffInnerChangesInnerWithDefaults instantiates a new ManifestDiffDiffInnerChangesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManifestDiffDiffInnerChangesInnerWithDefaults() *ManifestDiffDiffInnerChangesInner {
	this := ManifestDiffDiffInnerChangesInner{}
	return &this
}

// GetCurrentValue returns the CurrentValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ManifestDiffDiffInnerChangesInner) GetCurrentValue() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.CurrentValue
}

// GetCurrentValueOk returns a tuple with the CurrentValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManifestDiffDiffInnerChangesInner) GetCurrentValueOk() (*interface{}, bool) {
	if o == nil || IsNil(o.CurrentValue) {
		return nil, false
	}
	return &o.CurrentValue, true
}

// HasCurrentValue returns a boolean if a field has been set.
func (o *ManifestDiffDiffInnerChangesInner) HasCurrentValue() bool {
	if o != nil && !IsNil(o.CurrentValue) {
		return true
	}

	return false
}

// SetCurrentValue gets a reference to the given interface{} and assigns it to the CurrentValue field.
func (o *ManifestDiffDiffInnerChangesInner) SetCurrentValue(v interface{}) {
	o.CurrentValue = v
}

// GetNewValue returns the NewValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ManifestDiffDiffInnerChangesInner) GetNewValue() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.NewValue
}

// GetNewValueOk returns a tuple with the NewValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManifestDiffDiffInnerChangesInner) GetNewValueOk() (*interface{}, bool) {
	if o == nil || IsNil(o.NewValue) {
		return nil, false
	}
	return &o.NewValue, true
}

// HasNewValue returns a boolean if a field has been set.
func (o *ManifestDiffDiffInnerChangesInner) HasNewValue() bool {
	if o != nil && !IsNil(o.NewValue) {
		return true
	}

	return false
}

// SetNewValue gets a reference to the given interface{} and assigns it to the NewValue field.
func (o *ManifestDiffDiffInnerChangesInner) SetNewValue(v interface{}) {
	o.NewValue = v
}

// GetProperty returns the Property field value
func (o *ManifestDiffDiffInnerChangesInner) GetProperty() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Property
}

// GetPropertyOk returns a tuple with the Property field value
// and a boolean to check if the value has been set.
func (o *ManifestDiffDiffInnerChangesInner) GetPropertyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Property, true
}

// SetProperty sets field value
func (o *ManifestDiffDiffInnerChangesInner) SetProperty(v string) {
	o.Property = v
}

// GetType returns the Type field value
func (o *ManifestDiffDiffInnerChangesInner) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ManifestDiffDiffInnerChangesInner) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ManifestDiffDiffInnerChangesInner) SetType(v string) {
	o.Type = v
}

func (o ManifestDiffDiffInnerChangesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManifestDiffDiffInnerChangesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CurrentValue != nil {
		toSerialize["current_value"] = o.CurrentValue
	}
	if o.NewValue != nil {
		toSerialize["new_value"] = o.NewValue
	}
	toSerialize["property"] = o.Property
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *ManifestDiffDiffInnerChangesInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"property",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varManifestDiffDiffInnerChangesInner := _ManifestDiffDiffInnerChangesInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varManifestDiffDiffInnerChangesInner)

	if err != nil {
		return err
	}

	*o = ManifestDiffDiffInnerChangesInner(varManifestDiffDiffInnerChangesInner)

	return err
}

type NullableManifestDiffDiffInnerChangesInner struct {
	value *ManifestDiffDiffInnerChangesInner
	isSet bool
}

func (v NullableManifestDiffDiffInnerChangesInner) Get() *ManifestDiffDiffInnerChangesInner {
	return v.value
}

func (v *NullableManifestDiffDiffInnerChangesInner) Set(val *ManifestDiffDiffInnerChangesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableManifestDiffDiffInnerChangesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableManifestDiffDiffInnerChangesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManifestDiffDiffInnerChangesInner(val *ManifestDiffDiffInnerChangesInner) *NullableManifestDiffDiffInnerChangesInner {
	return &NullableManifestDiffDiffInnerChangesInner{value: val, isSet: true}
}

func (v NullableManifestDiffDiffInnerChangesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManifestDiffDiffInnerChangesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


