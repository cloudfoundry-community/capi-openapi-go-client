/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the DeploymentStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeploymentStatus{}

// DeploymentStatus struct for DeploymentStatus
type DeploymentStatus struct {
	// Additional status details
	Details map[string]interface{} `json:"details,omitempty"`
	// Reason for the current status
	Reason NullableString `json:"reason,omitempty"`
	// Status value
	Value *string `json:"value,omitempty"`
}

// NewDeploymentStatus instantiates a new DeploymentStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeploymentStatus() *DeploymentStatus {
	this := DeploymentStatus{}
	return &this
}

// NewDeploymentStatusWithDefaults instantiates a new DeploymentStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentStatusWithDefaults() *DeploymentStatus {
	this := DeploymentStatus{}
	return &this
}

// GetDetails returns the Details field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeploymentStatus) GetDetails() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentStatus) GetDetailsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Details) {
		return map[string]interface{}{}, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *DeploymentStatus) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given map[string]interface{} and assigns it to the Details field.
func (o *DeploymentStatus) SetDetails(v map[string]interface{}) {
	o.Details = v
}

// GetReason returns the Reason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeploymentStatus) GetReason() string {
	if o == nil || IsNil(o.Reason.Get()) {
		var ret string
		return ret
	}
	return *o.Reason.Get()
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentStatus) GetReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Reason.Get(), o.Reason.IsSet()
}

// HasReason returns a boolean if a field has been set.
func (o *DeploymentStatus) HasReason() bool {
	if o != nil && o.Reason.IsSet() {
		return true
	}

	return false
}

// SetReason gets a reference to the given NullableString and assigns it to the Reason field.
func (o *DeploymentStatus) SetReason(v string) {
	o.Reason.Set(&v)
}
// SetReasonNil sets the value for Reason to be an explicit nil
func (o *DeploymentStatus) SetReasonNil() {
	o.Reason.Set(nil)
}

// UnsetReason ensures that no value is present for Reason, not even an explicit nil
func (o *DeploymentStatus) UnsetReason() {
	o.Reason.Unset()
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *DeploymentStatus) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentStatus) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *DeploymentStatus) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *DeploymentStatus) SetValue(v string) {
	o.Value = &v
}

func (o DeploymentStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeploymentStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Details != nil {
		toSerialize["details"] = o.Details
	}
	if o.Reason.IsSet() {
		toSerialize["reason"] = o.Reason.Get()
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableDeploymentStatus struct {
	value *DeploymentStatus
	isSet bool
}

func (v NullableDeploymentStatus) Get() *DeploymentStatus {
	return v.value
}

func (v *NullableDeploymentStatus) Set(val *DeploymentStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploymentStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploymentStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploymentStatus(val *DeploymentStatus) *NullableDeploymentStatus {
	return &NullableDeploymentStatus{value: val, isSet: true}
}

func (v NullableDeploymentStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploymentStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


