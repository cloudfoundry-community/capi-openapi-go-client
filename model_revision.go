/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the Revision type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Revision{}

// Revision struct for Revision
type Revision struct {
	CreatedAt time.Time `json:"created_at"`
	// Whether this revision can be deployed
	Deployable bool `json:"deployable"`
	Description NullableString `json:"description"`
	Droplet V3AppsGuidRelationshipsCurrentDropletPatch200ResponseData `json:"droplet"`
	Guid string `json:"guid"`
	Links RevisionLinks `json:"links"`
	Metadata V3AppsGuidTasksPostRequestMetadata `json:"metadata"`
	Processes map[string]RevisionProcessesValue `json:"processes"`
	Relationships *RevisionRelationships `json:"relationships,omitempty"`
	Sidecars []Sidecar `json:"sidecars"`
	UpdatedAt time.Time `json:"updated_at"`
	// Revision version number
	Version int32 `json:"version"`
}

type _Revision Revision

// NewRevision instantiates a new Revision object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRevision(createdAt time.Time, deployable bool, description NullableString, droplet V3AppsGuidRelationshipsCurrentDropletPatch200ResponseData, guid string, links RevisionLinks, metadata V3AppsGuidTasksPostRequestMetadata, processes map[string]RevisionProcessesValue, sidecars []Sidecar, updatedAt time.Time, version int32) *Revision {
	this := Revision{}
	this.CreatedAt = createdAt
	this.Deployable = deployable
	this.Description = description
	this.Droplet = droplet
	this.Guid = guid
	this.Links = links
	this.Metadata = metadata
	this.Processes = processes
	this.Sidecars = sidecars
	this.UpdatedAt = updatedAt
	this.Version = version
	return &this
}

// NewRevisionWithDefaults instantiates a new Revision object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRevisionWithDefaults() *Revision {
	this := Revision{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *Revision) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Revision) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Revision) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetDeployable returns the Deployable field value
func (o *Revision) GetDeployable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Deployable
}

// GetDeployableOk returns a tuple with the Deployable field value
// and a boolean to check if the value has been set.
func (o *Revision) GetDeployableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Deployable, true
}

// SetDeployable sets field value
func (o *Revision) SetDeployable(v bool) {
	o.Deployable = v
}

// GetDescription returns the Description field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Revision) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}

	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Revision) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// SetDescription sets field value
func (o *Revision) SetDescription(v string) {
	o.Description.Set(&v)
}

// GetDroplet returns the Droplet field value
func (o *Revision) GetDroplet() V3AppsGuidRelationshipsCurrentDropletPatch200ResponseData {
	if o == nil {
		var ret V3AppsGuidRelationshipsCurrentDropletPatch200ResponseData
		return ret
	}

	return o.Droplet
}

// GetDropletOk returns a tuple with the Droplet field value
// and a boolean to check if the value has been set.
func (o *Revision) GetDropletOk() (*V3AppsGuidRelationshipsCurrentDropletPatch200ResponseData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Droplet, true
}

// SetDroplet sets field value
func (o *Revision) SetDroplet(v V3AppsGuidRelationshipsCurrentDropletPatch200ResponseData) {
	o.Droplet = v
}

// GetGuid returns the Guid field value
func (o *Revision) GetGuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Guid
}

// GetGuidOk returns a tuple with the Guid field value
// and a boolean to check if the value has been set.
func (o *Revision) GetGuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Guid, true
}

// SetGuid sets field value
func (o *Revision) SetGuid(v string) {
	o.Guid = v
}

// GetLinks returns the Links field value
func (o *Revision) GetLinks() RevisionLinks {
	if o == nil {
		var ret RevisionLinks
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *Revision) GetLinksOk() (*RevisionLinks, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Links, true
}

// SetLinks sets field value
func (o *Revision) SetLinks(v RevisionLinks) {
	o.Links = v
}

// GetMetadata returns the Metadata field value
func (o *Revision) GetMetadata() V3AppsGuidTasksPostRequestMetadata {
	if o == nil {
		var ret V3AppsGuidTasksPostRequestMetadata
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *Revision) GetMetadataOk() (*V3AppsGuidTasksPostRequestMetadata, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metadata, true
}

// SetMetadata sets field value
func (o *Revision) SetMetadata(v V3AppsGuidTasksPostRequestMetadata) {
	o.Metadata = v
}

// GetProcesses returns the Processes field value
func (o *Revision) GetProcesses() map[string]RevisionProcessesValue {
	if o == nil {
		var ret map[string]RevisionProcessesValue
		return ret
	}

	return o.Processes
}

// GetProcessesOk returns a tuple with the Processes field value
// and a boolean to check if the value has been set.
func (o *Revision) GetProcessesOk() (*map[string]RevisionProcessesValue, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Processes, true
}

// SetProcesses sets field value
func (o *Revision) SetProcesses(v map[string]RevisionProcessesValue) {
	o.Processes = v
}

// GetRelationships returns the Relationships field value if set, zero value otherwise.
func (o *Revision) GetRelationships() RevisionRelationships {
	if o == nil || IsNil(o.Relationships) {
		var ret RevisionRelationships
		return ret
	}
	return *o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Revision) GetRelationshipsOk() (*RevisionRelationships, bool) {
	if o == nil || IsNil(o.Relationships) {
		return nil, false
	}
	return o.Relationships, true
}

// HasRelationships returns a boolean if a field has been set.
func (o *Revision) HasRelationships() bool {
	if o != nil && !IsNil(o.Relationships) {
		return true
	}

	return false
}

// SetRelationships gets a reference to the given RevisionRelationships and assigns it to the Relationships field.
func (o *Revision) SetRelationships(v RevisionRelationships) {
	o.Relationships = &v
}

// GetSidecars returns the Sidecars field value
func (o *Revision) GetSidecars() []Sidecar {
	if o == nil {
		var ret []Sidecar
		return ret
	}

	return o.Sidecars
}

// GetSidecarsOk returns a tuple with the Sidecars field value
// and a boolean to check if the value has been set.
func (o *Revision) GetSidecarsOk() ([]Sidecar, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sidecars, true
}

// SetSidecars sets field value
func (o *Revision) SetSidecars(v []Sidecar) {
	o.Sidecars = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Revision) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Revision) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Revision) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetVersion returns the Version field value
func (o *Revision) GetVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *Revision) GetVersionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *Revision) SetVersion(v int32) {
	o.Version = v
}

func (o Revision) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Revision) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["deployable"] = o.Deployable
	toSerialize["description"] = o.Description.Get()
	toSerialize["droplet"] = o.Droplet
	toSerialize["guid"] = o.Guid
	toSerialize["links"] = o.Links
	toSerialize["metadata"] = o.Metadata
	toSerialize["processes"] = o.Processes
	if !IsNil(o.Relationships) {
		toSerialize["relationships"] = o.Relationships
	}
	toSerialize["sidecars"] = o.Sidecars
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["version"] = o.Version
	return toSerialize, nil
}

func (o *Revision) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created_at",
		"deployable",
		"description",
		"droplet",
		"guid",
		"links",
		"metadata",
		"processes",
		"sidecars",
		"updated_at",
		"version",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRevision := _Revision{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRevision)

	if err != nil {
		return err
	}

	*o = Revision(varRevision)

	return err
}

type NullableRevision struct {
	value *Revision
	isSet bool
}

func (v NullableRevision) Get() *Revision {
	return v.value
}

func (v *NullableRevision) Set(val *Revision) {
	v.value = val
	v.isSet = true
}

func (v NullableRevision) IsSet() bool {
	return v.isSet
}

func (v *NullableRevision) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRevision(val *Revision) *NullableRevision {
	return &NullableRevision{value: val, isSet: true}
}

func (v NullableRevision) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRevision) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


