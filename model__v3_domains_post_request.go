/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the V3DomainsPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V3DomainsPostRequest{}

// V3DomainsPostRequest struct for V3DomainsPostRequest
type V3DomainsPostRequest struct {
	// Whether the domain is used for internal traffic
	Internal *bool `json:"internal,omitempty"`
	Metadata *V3DomainsPostRequestMetadata `json:"metadata,omitempty"`
	// Name of the domain
	Name *string `json:"name,omitempty"`
	Organization *V3DomainsPostRequestOrganization `json:"organization,omitempty"`
	RouterGroup *V3DomainsPostRequestRouterGroup `json:"router_group,omitempty"`
	SharedOrganizations []V3DomainsPostRequestOrganizationData `json:"shared_organizations,omitempty"`
}

// NewV3DomainsPostRequest instantiates a new V3DomainsPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV3DomainsPostRequest() *V3DomainsPostRequest {
	this := V3DomainsPostRequest{}
	return &this
}

// NewV3DomainsPostRequestWithDefaults instantiates a new V3DomainsPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV3DomainsPostRequestWithDefaults() *V3DomainsPostRequest {
	this := V3DomainsPostRequest{}
	return &this
}

// GetInternal returns the Internal field value if set, zero value otherwise.
func (o *V3DomainsPostRequest) GetInternal() bool {
	if o == nil || IsNil(o.Internal) {
		var ret bool
		return ret
	}
	return *o.Internal
}

// GetInternalOk returns a tuple with the Internal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3DomainsPostRequest) GetInternalOk() (*bool, bool) {
	if o == nil || IsNil(o.Internal) {
		return nil, false
	}
	return o.Internal, true
}

// HasInternal returns a boolean if a field has been set.
func (o *V3DomainsPostRequest) HasInternal() bool {
	if o != nil && !IsNil(o.Internal) {
		return true
	}

	return false
}

// SetInternal gets a reference to the given bool and assigns it to the Internal field.
func (o *V3DomainsPostRequest) SetInternal(v bool) {
	o.Internal = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *V3DomainsPostRequest) GetMetadata() V3DomainsPostRequestMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret V3DomainsPostRequestMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3DomainsPostRequest) GetMetadataOk() (*V3DomainsPostRequestMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *V3DomainsPostRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given V3DomainsPostRequestMetadata and assigns it to the Metadata field.
func (o *V3DomainsPostRequest) SetMetadata(v V3DomainsPostRequestMetadata) {
	o.Metadata = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V3DomainsPostRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3DomainsPostRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V3DomainsPostRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V3DomainsPostRequest) SetName(v string) {
	o.Name = &v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *V3DomainsPostRequest) GetOrganization() V3DomainsPostRequestOrganization {
	if o == nil || IsNil(o.Organization) {
		var ret V3DomainsPostRequestOrganization
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3DomainsPostRequest) GetOrganizationOk() (*V3DomainsPostRequestOrganization, bool) {
	if o == nil || IsNil(o.Organization) {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *V3DomainsPostRequest) HasOrganization() bool {
	if o != nil && !IsNil(o.Organization) {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given V3DomainsPostRequestOrganization and assigns it to the Organization field.
func (o *V3DomainsPostRequest) SetOrganization(v V3DomainsPostRequestOrganization) {
	o.Organization = &v
}

// GetRouterGroup returns the RouterGroup field value if set, zero value otherwise.
func (o *V3DomainsPostRequest) GetRouterGroup() V3DomainsPostRequestRouterGroup {
	if o == nil || IsNil(o.RouterGroup) {
		var ret V3DomainsPostRequestRouterGroup
		return ret
	}
	return *o.RouterGroup
}

// GetRouterGroupOk returns a tuple with the RouterGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3DomainsPostRequest) GetRouterGroupOk() (*V3DomainsPostRequestRouterGroup, bool) {
	if o == nil || IsNil(o.RouterGroup) {
		return nil, false
	}
	return o.RouterGroup, true
}

// HasRouterGroup returns a boolean if a field has been set.
func (o *V3DomainsPostRequest) HasRouterGroup() bool {
	if o != nil && !IsNil(o.RouterGroup) {
		return true
	}

	return false
}

// SetRouterGroup gets a reference to the given V3DomainsPostRequestRouterGroup and assigns it to the RouterGroup field.
func (o *V3DomainsPostRequest) SetRouterGroup(v V3DomainsPostRequestRouterGroup) {
	o.RouterGroup = &v
}

// GetSharedOrganizations returns the SharedOrganizations field value if set, zero value otherwise.
func (o *V3DomainsPostRequest) GetSharedOrganizations() []V3DomainsPostRequestOrganizationData {
	if o == nil || IsNil(o.SharedOrganizations) {
		var ret []V3DomainsPostRequestOrganizationData
		return ret
	}
	return o.SharedOrganizations
}

// GetSharedOrganizationsOk returns a tuple with the SharedOrganizations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3DomainsPostRequest) GetSharedOrganizationsOk() ([]V3DomainsPostRequestOrganizationData, bool) {
	if o == nil || IsNil(o.SharedOrganizations) {
		return nil, false
	}
	return o.SharedOrganizations, true
}

// HasSharedOrganizations returns a boolean if a field has been set.
func (o *V3DomainsPostRequest) HasSharedOrganizations() bool {
	if o != nil && !IsNil(o.SharedOrganizations) {
		return true
	}

	return false
}

// SetSharedOrganizations gets a reference to the given []V3DomainsPostRequestOrganizationData and assigns it to the SharedOrganizations field.
func (o *V3DomainsPostRequest) SetSharedOrganizations(v []V3DomainsPostRequestOrganizationData) {
	o.SharedOrganizations = v
}

func (o V3DomainsPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V3DomainsPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Internal) {
		toSerialize["internal"] = o.Internal
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Organization) {
		toSerialize["organization"] = o.Organization
	}
	if !IsNil(o.RouterGroup) {
		toSerialize["router_group"] = o.RouterGroup
	}
	if !IsNil(o.SharedOrganizations) {
		toSerialize["shared_organizations"] = o.SharedOrganizations
	}
	return toSerialize, nil
}

type NullableV3DomainsPostRequest struct {
	value *V3DomainsPostRequest
	isSet bool
}

func (v NullableV3DomainsPostRequest) Get() *V3DomainsPostRequest {
	return v.value
}

func (v *NullableV3DomainsPostRequest) Set(val *V3DomainsPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV3DomainsPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV3DomainsPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV3DomainsPostRequest(val *V3DomainsPostRequest) *NullableV3DomainsPostRequest {
	return &NullableV3DomainsPostRequest{value: val, isSet: true}
}

func (v NullableV3DomainsPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV3DomainsPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


