/*
Cloud Controller API

API specification for managing environment variable groups in Cloud Controller.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the RoleRelationshipsSpace type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoleRelationshipsSpace{}

// RoleRelationshipsSpace struct for RoleRelationshipsSpace
type RoleRelationshipsSpace struct {
	Data NullableRoleRelationshipsSpaceData `json:"data,omitempty"`
}

// NewRoleRelationshipsSpace instantiates a new RoleRelationshipsSpace object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleRelationshipsSpace() *RoleRelationshipsSpace {
	this := RoleRelationshipsSpace{}
	return &this
}

// NewRoleRelationshipsSpaceWithDefaults instantiates a new RoleRelationshipsSpace object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleRelationshipsSpaceWithDefaults() *RoleRelationshipsSpace {
	this := RoleRelationshipsSpace{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RoleRelationshipsSpace) GetData() RoleRelationshipsSpaceData {
	if o == nil || IsNil(o.Data.Get()) {
		var ret RoleRelationshipsSpaceData
		return ret
	}
	return *o.Data.Get()
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RoleRelationshipsSpace) GetDataOk() (*RoleRelationshipsSpaceData, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data.Get(), o.Data.IsSet()
}

// HasData returns a boolean if a field has been set.
func (o *RoleRelationshipsSpace) HasData() bool {
	if o != nil && o.Data.IsSet() {
		return true
	}

	return false
}

// SetData gets a reference to the given NullableRoleRelationshipsSpaceData and assigns it to the Data field.
func (o *RoleRelationshipsSpace) SetData(v RoleRelationshipsSpaceData) {
	o.Data.Set(&v)
}
// SetDataNil sets the value for Data to be an explicit nil
func (o *RoleRelationshipsSpace) SetDataNil() {
	o.Data.Set(nil)
}

// UnsetData ensures that no value is present for Data, not even an explicit nil
func (o *RoleRelationshipsSpace) UnsetData() {
	o.Data.Unset()
}

func (o RoleRelationshipsSpace) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoleRelationshipsSpace) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Data.IsSet() {
		toSerialize["data"] = o.Data.Get()
	}
	return toSerialize, nil
}

type NullableRoleRelationshipsSpace struct {
	value *RoleRelationshipsSpace
	isSet bool
}

func (v NullableRoleRelationshipsSpace) Get() *RoleRelationshipsSpace {
	return v.value
}

func (v *NullableRoleRelationshipsSpace) Set(val *RoleRelationshipsSpace) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleRelationshipsSpace) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleRelationshipsSpace) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleRelationshipsSpace(val *RoleRelationshipsSpace) *NullableRoleRelationshipsSpace {
	return &NullableRoleRelationshipsSpace{value: val, isSet: true}
}

func (v NullableRoleRelationshipsSpace) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleRelationshipsSpace) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


