/*
Cloud Controller API

API specification for managing environment variable groups in Cloud Controller.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the AppUsageEventProcess type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppUsageEventProcess{}

// AppUsageEventProcess struct for AppUsageEventProcess
type AppUsageEventProcess struct {
	// Unique identifier of the process that this event pertains to, if applicable
	Guid NullableString `json:"guid,omitempty"`
	// Type of the process that this event pertains to, if applicable
	Type NullableString `json:"type,omitempty"`
}

// NewAppUsageEventProcess instantiates a new AppUsageEventProcess object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppUsageEventProcess() *AppUsageEventProcess {
	this := AppUsageEventProcess{}
	return &this
}

// NewAppUsageEventProcessWithDefaults instantiates a new AppUsageEventProcess object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppUsageEventProcessWithDefaults() *AppUsageEventProcess {
	this := AppUsageEventProcess{}
	return &this
}

// GetGuid returns the Guid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppUsageEventProcess) GetGuid() string {
	if o == nil || IsNil(o.Guid.Get()) {
		var ret string
		return ret
	}
	return *o.Guid.Get()
}

// GetGuidOk returns a tuple with the Guid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppUsageEventProcess) GetGuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Guid.Get(), o.Guid.IsSet()
}

// HasGuid returns a boolean if a field has been set.
func (o *AppUsageEventProcess) HasGuid() bool {
	if o != nil && o.Guid.IsSet() {
		return true
	}

	return false
}

// SetGuid gets a reference to the given NullableString and assigns it to the Guid field.
func (o *AppUsageEventProcess) SetGuid(v string) {
	o.Guid.Set(&v)
}
// SetGuidNil sets the value for Guid to be an explicit nil
func (o *AppUsageEventProcess) SetGuidNil() {
	o.Guid.Set(nil)
}

// UnsetGuid ensures that no value is present for Guid, not even an explicit nil
func (o *AppUsageEventProcess) UnsetGuid() {
	o.Guid.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppUsageEventProcess) GetType() string {
	if o == nil || IsNil(o.Type.Get()) {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppUsageEventProcess) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *AppUsageEventProcess) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *AppUsageEventProcess) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *AppUsageEventProcess) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *AppUsageEventProcess) UnsetType() {
	o.Type.Unset()
}

func (o AppUsageEventProcess) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppUsageEventProcess) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Guid.IsSet() {
		toSerialize["guid"] = o.Guid.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	return toSerialize, nil
}

type NullableAppUsageEventProcess struct {
	value *AppUsageEventProcess
	isSet bool
}

func (v NullableAppUsageEventProcess) Get() *AppUsageEventProcess {
	return v.value
}

func (v *NullableAppUsageEventProcess) Set(val *AppUsageEventProcess) {
	v.value = val
	v.isSet = true
}

func (v NullableAppUsageEventProcess) IsSet() bool {
	return v.isSet
}

func (v *NullableAppUsageEventProcess) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppUsageEventProcess(val *AppUsageEventProcess) *NullableAppUsageEventProcess {
	return &NullableAppUsageEventProcess{value: val, isSet: true}
}

func (v NullableAppUsageEventProcess) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppUsageEventProcess) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


