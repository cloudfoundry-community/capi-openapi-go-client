/*
Cloud Controller API

API specification for managing environment variable groups in Cloud Controller.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the SecurityGroupCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityGroupCreate{}

// SecurityGroupCreate struct for SecurityGroupCreate
type SecurityGroupCreate struct {
	GloballyEnabled *SecurityGroupGloballyEnabled `json:"globally_enabled,omitempty"`
	Name *string `json:"name,omitempty"`
	Rules []Rule `json:"rules,omitempty"`
}

// NewSecurityGroupCreate instantiates a new SecurityGroupCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityGroupCreate() *SecurityGroupCreate {
	this := SecurityGroupCreate{}
	return &this
}

// NewSecurityGroupCreateWithDefaults instantiates a new SecurityGroupCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityGroupCreateWithDefaults() *SecurityGroupCreate {
	this := SecurityGroupCreate{}
	return &this
}

// GetGloballyEnabled returns the GloballyEnabled field value if set, zero value otherwise.
func (o *SecurityGroupCreate) GetGloballyEnabled() SecurityGroupGloballyEnabled {
	if o == nil || IsNil(o.GloballyEnabled) {
		var ret SecurityGroupGloballyEnabled
		return ret
	}
	return *o.GloballyEnabled
}

// GetGloballyEnabledOk returns a tuple with the GloballyEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroupCreate) GetGloballyEnabledOk() (*SecurityGroupGloballyEnabled, bool) {
	if o == nil || IsNil(o.GloballyEnabled) {
		return nil, false
	}
	return o.GloballyEnabled, true
}

// HasGloballyEnabled returns a boolean if a field has been set.
func (o *SecurityGroupCreate) HasGloballyEnabled() bool {
	if o != nil && !IsNil(o.GloballyEnabled) {
		return true
	}

	return false
}

// SetGloballyEnabled gets a reference to the given SecurityGroupGloballyEnabled and assigns it to the GloballyEnabled field.
func (o *SecurityGroupCreate) SetGloballyEnabled(v SecurityGroupGloballyEnabled) {
	o.GloballyEnabled = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SecurityGroupCreate) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroupCreate) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SecurityGroupCreate) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SecurityGroupCreate) SetName(v string) {
	o.Name = &v
}

// GetRules returns the Rules field value if set, zero value otherwise.
func (o *SecurityGroupCreate) GetRules() []Rule {
	if o == nil || IsNil(o.Rules) {
		var ret []Rule
		return ret
	}
	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroupCreate) GetRulesOk() ([]Rule, bool) {
	if o == nil || IsNil(o.Rules) {
		return nil, false
	}
	return o.Rules, true
}

// HasRules returns a boolean if a field has been set.
func (o *SecurityGroupCreate) HasRules() bool {
	if o != nil && !IsNil(o.Rules) {
		return true
	}

	return false
}

// SetRules gets a reference to the given []Rule and assigns it to the Rules field.
func (o *SecurityGroupCreate) SetRules(v []Rule) {
	o.Rules = v
}

func (o SecurityGroupCreate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecurityGroupCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GloballyEnabled) {
		toSerialize["globally_enabled"] = o.GloballyEnabled
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Rules) {
		toSerialize["rules"] = o.Rules
	}
	return toSerialize, nil
}

type NullableSecurityGroupCreate struct {
	value *SecurityGroupCreate
	isSet bool
}

func (v NullableSecurityGroupCreate) Get() *SecurityGroupCreate {
	return v.value
}

func (v *NullableSecurityGroupCreate) Set(val *SecurityGroupCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityGroupCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityGroupCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityGroupCreate(val *SecurityGroupCreate) *NullableSecurityGroupCreate {
	return &NullableSecurityGroupCreate{value: val, isSet: true}
}

func (v NullableSecurityGroupCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityGroupCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


