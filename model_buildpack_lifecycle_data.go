/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the BuildpackLifecycleData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BuildpackLifecycleData{}

// BuildpackLifecycleData struct for BuildpackLifecycleData
type BuildpackLifecycleData struct {
	// Image reference for Cloud Native Buildpack
	Image *string `json:"image,omitempty"`
	// Version of the buildpack
	Version *string `json:"version,omitempty"`
}

// NewBuildpackLifecycleData instantiates a new BuildpackLifecycleData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBuildpackLifecycleData() *BuildpackLifecycleData {
	this := BuildpackLifecycleData{}
	return &this
}

// NewBuildpackLifecycleDataWithDefaults instantiates a new BuildpackLifecycleData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBuildpackLifecycleDataWithDefaults() *BuildpackLifecycleData {
	this := BuildpackLifecycleData{}
	return &this
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *BuildpackLifecycleData) GetImage() string {
	if o == nil || IsNil(o.Image) {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildpackLifecycleData) GetImageOk() (*string, bool) {
	if o == nil || IsNil(o.Image) {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *BuildpackLifecycleData) HasImage() bool {
	if o != nil && !IsNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *BuildpackLifecycleData) SetImage(v string) {
	o.Image = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *BuildpackLifecycleData) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildpackLifecycleData) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *BuildpackLifecycleData) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *BuildpackLifecycleData) SetVersion(v string) {
	o.Version = &v
}

func (o BuildpackLifecycleData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BuildpackLifecycleData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Image) {
		toSerialize["image"] = o.Image
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableBuildpackLifecycleData struct {
	value *BuildpackLifecycleData
	isSet bool
}

func (v NullableBuildpackLifecycleData) Get() *BuildpackLifecycleData {
	return v.value
}

func (v *NullableBuildpackLifecycleData) Set(val *BuildpackLifecycleData) {
	v.value = val
	v.isSet = true
}

func (v NullableBuildpackLifecycleData) IsSet() bool {
	return v.isSet
}

func (v *NullableBuildpackLifecycleData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBuildpackLifecycleData(val *BuildpackLifecycleData) *NullableBuildpackLifecycleData {
	return &NullableBuildpackLifecycleData{value: val, isSet: true}
}

func (v NullableBuildpackLifecycleData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBuildpackLifecycleData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


