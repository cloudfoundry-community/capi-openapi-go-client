/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the App type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &App{}

// App struct for App
type App struct {
	// When the app was created
	CreatedAt time.Time `json:"created_at"`
	// Unique identifier for the app
	Guid string `json:"guid"`
	Lifecycle AppLifecycle `json:"lifecycle"`
	Links AppLinks `json:"links"`
	Metadata V3AppsGuidTasksPostRequestMetadata `json:"metadata"`
	// Name of the app
	Name string `json:"name"`
	Relationships AppRelationships `json:"relationships"`
	// Current desired state of the app
	State string `json:"state"`
	// When the app was last updated
	UpdatedAt time.Time `json:"updated_at"`
}

type _App App

// NewApp instantiates a new App object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApp(createdAt time.Time, guid string, lifecycle AppLifecycle, links AppLinks, metadata V3AppsGuidTasksPostRequestMetadata, name string, relationships AppRelationships, state string, updatedAt time.Time) *App {
	this := App{}
	this.CreatedAt = createdAt
	this.Guid = guid
	this.Lifecycle = lifecycle
	this.Links = links
	this.Metadata = metadata
	this.Name = name
	this.Relationships = relationships
	this.State = state
	this.UpdatedAt = updatedAt
	return &this
}

// NewAppWithDefaults instantiates a new App object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppWithDefaults() *App {
	this := App{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *App) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *App) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *App) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetGuid returns the Guid field value
func (o *App) GetGuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Guid
}

// GetGuidOk returns a tuple with the Guid field value
// and a boolean to check if the value has been set.
func (o *App) GetGuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Guid, true
}

// SetGuid sets field value
func (o *App) SetGuid(v string) {
	o.Guid = v
}

// GetLifecycle returns the Lifecycle field value
func (o *App) GetLifecycle() AppLifecycle {
	if o == nil {
		var ret AppLifecycle
		return ret
	}

	return o.Lifecycle
}

// GetLifecycleOk returns a tuple with the Lifecycle field value
// and a boolean to check if the value has been set.
func (o *App) GetLifecycleOk() (*AppLifecycle, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Lifecycle, true
}

// SetLifecycle sets field value
func (o *App) SetLifecycle(v AppLifecycle) {
	o.Lifecycle = v
}

// GetLinks returns the Links field value
func (o *App) GetLinks() AppLinks {
	if o == nil {
		var ret AppLinks
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *App) GetLinksOk() (*AppLinks, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Links, true
}

// SetLinks sets field value
func (o *App) SetLinks(v AppLinks) {
	o.Links = v
}

// GetMetadata returns the Metadata field value
func (o *App) GetMetadata() V3AppsGuidTasksPostRequestMetadata {
	if o == nil {
		var ret V3AppsGuidTasksPostRequestMetadata
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *App) GetMetadataOk() (*V3AppsGuidTasksPostRequestMetadata, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metadata, true
}

// SetMetadata sets field value
func (o *App) SetMetadata(v V3AppsGuidTasksPostRequestMetadata) {
	o.Metadata = v
}

// GetName returns the Name field value
func (o *App) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *App) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *App) SetName(v string) {
	o.Name = v
}

// GetRelationships returns the Relationships field value
func (o *App) GetRelationships() AppRelationships {
	if o == nil {
		var ret AppRelationships
		return ret
	}

	return o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value
// and a boolean to check if the value has been set.
func (o *App) GetRelationshipsOk() (*AppRelationships, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Relationships, true
}

// SetRelationships sets field value
func (o *App) SetRelationships(v AppRelationships) {
	o.Relationships = v
}

// GetState returns the State field value
func (o *App) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *App) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *App) SetState(v string) {
	o.State = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *App) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *App) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *App) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o App) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o App) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["guid"] = o.Guid
	toSerialize["lifecycle"] = o.Lifecycle
	toSerialize["links"] = o.Links
	toSerialize["metadata"] = o.Metadata
	toSerialize["name"] = o.Name
	toSerialize["relationships"] = o.Relationships
	toSerialize["state"] = o.State
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *App) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created_at",
		"guid",
		"lifecycle",
		"links",
		"metadata",
		"name",
		"relationships",
		"state",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApp := _App{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApp)

	if err != nil {
		return err
	}

	*o = App(varApp)

	return err
}

type NullableApp struct {
	value *App
	isSet bool
}

func (v NullableApp) Get() *App {
	return v.value
}

func (v *NullableApp) Set(val *App) {
	v.value = val
	v.isSet = true
}

func (v NullableApp) IsSet() bool {
	return v.isSet
}

func (v *NullableApp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApp(val *App) *NullableApp {
	return &NullableApp{value: val, isSet: true}
}

func (v NullableApp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


