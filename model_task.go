/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
	"time"
)

// checks if the Task type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Task{}

// Task struct for Task
type Task struct {
	Command *string `json:"command,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	DiskInMb *int32 `json:"disk_in_mb,omitempty"`
	DropletGuid *string `json:"droplet_guid,omitempty"`
	Guid *string `json:"guid,omitempty"`
	Links *TaskLinks `json:"links,omitempty"`
	LogRateLimitInBytesPerSecond *int32 `json:"log_rate_limit_in_bytes_per_second,omitempty"`
	MemoryInMb *int32 `json:"memory_in_mb,omitempty"`
	Metadata *V3AppsGuidTasksPostRequestMetadata `json:"metadata,omitempty"`
	Name *string `json:"name,omitempty"`
	Relationships *RevisionRelationships `json:"relationships,omitempty"`
	Result *TaskResult `json:"result,omitempty"`
	SequenceId *int32 `json:"sequence_id,omitempty"`
	State *string `json:"state,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// NewTask instantiates a new Task object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTask() *Task {
	this := Task{}
	return &this
}

// NewTaskWithDefaults instantiates a new Task object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskWithDefaults() *Task {
	this := Task{}
	return &this
}

// GetCommand returns the Command field value if set, zero value otherwise.
func (o *Task) GetCommand() string {
	if o == nil || IsNil(o.Command) {
		var ret string
		return ret
	}
	return *o.Command
}

// GetCommandOk returns a tuple with the Command field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetCommandOk() (*string, bool) {
	if o == nil || IsNil(o.Command) {
		return nil, false
	}
	return o.Command, true
}

// HasCommand returns a boolean if a field has been set.
func (o *Task) HasCommand() bool {
	if o != nil && !IsNil(o.Command) {
		return true
	}

	return false
}

// SetCommand gets a reference to the given string and assigns it to the Command field.
func (o *Task) SetCommand(v string) {
	o.Command = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Task) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Task) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *Task) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetDiskInMb returns the DiskInMb field value if set, zero value otherwise.
func (o *Task) GetDiskInMb() int32 {
	if o == nil || IsNil(o.DiskInMb) {
		var ret int32
		return ret
	}
	return *o.DiskInMb
}

// GetDiskInMbOk returns a tuple with the DiskInMb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetDiskInMbOk() (*int32, bool) {
	if o == nil || IsNil(o.DiskInMb) {
		return nil, false
	}
	return o.DiskInMb, true
}

// HasDiskInMb returns a boolean if a field has been set.
func (o *Task) HasDiskInMb() bool {
	if o != nil && !IsNil(o.DiskInMb) {
		return true
	}

	return false
}

// SetDiskInMb gets a reference to the given int32 and assigns it to the DiskInMb field.
func (o *Task) SetDiskInMb(v int32) {
	o.DiskInMb = &v
}

// GetDropletGuid returns the DropletGuid field value if set, zero value otherwise.
func (o *Task) GetDropletGuid() string {
	if o == nil || IsNil(o.DropletGuid) {
		var ret string
		return ret
	}
	return *o.DropletGuid
}

// GetDropletGuidOk returns a tuple with the DropletGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetDropletGuidOk() (*string, bool) {
	if o == nil || IsNil(o.DropletGuid) {
		return nil, false
	}
	return o.DropletGuid, true
}

// HasDropletGuid returns a boolean if a field has been set.
func (o *Task) HasDropletGuid() bool {
	if o != nil && !IsNil(o.DropletGuid) {
		return true
	}

	return false
}

// SetDropletGuid gets a reference to the given string and assigns it to the DropletGuid field.
func (o *Task) SetDropletGuid(v string) {
	o.DropletGuid = &v
}

// GetGuid returns the Guid field value if set, zero value otherwise.
func (o *Task) GetGuid() string {
	if o == nil || IsNil(o.Guid) {
		var ret string
		return ret
	}
	return *o.Guid
}

// GetGuidOk returns a tuple with the Guid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetGuidOk() (*string, bool) {
	if o == nil || IsNil(o.Guid) {
		return nil, false
	}
	return o.Guid, true
}

// HasGuid returns a boolean if a field has been set.
func (o *Task) HasGuid() bool {
	if o != nil && !IsNil(o.Guid) {
		return true
	}

	return false
}

// SetGuid gets a reference to the given string and assigns it to the Guid field.
func (o *Task) SetGuid(v string) {
	o.Guid = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *Task) GetLinks() TaskLinks {
	if o == nil || IsNil(o.Links) {
		var ret TaskLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetLinksOk() (*TaskLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *Task) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given TaskLinks and assigns it to the Links field.
func (o *Task) SetLinks(v TaskLinks) {
	o.Links = &v
}

// GetLogRateLimitInBytesPerSecond returns the LogRateLimitInBytesPerSecond field value if set, zero value otherwise.
func (o *Task) GetLogRateLimitInBytesPerSecond() int32 {
	if o == nil || IsNil(o.LogRateLimitInBytesPerSecond) {
		var ret int32
		return ret
	}
	return *o.LogRateLimitInBytesPerSecond
}

// GetLogRateLimitInBytesPerSecondOk returns a tuple with the LogRateLimitInBytesPerSecond field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetLogRateLimitInBytesPerSecondOk() (*int32, bool) {
	if o == nil || IsNil(o.LogRateLimitInBytesPerSecond) {
		return nil, false
	}
	return o.LogRateLimitInBytesPerSecond, true
}

// HasLogRateLimitInBytesPerSecond returns a boolean if a field has been set.
func (o *Task) HasLogRateLimitInBytesPerSecond() bool {
	if o != nil && !IsNil(o.LogRateLimitInBytesPerSecond) {
		return true
	}

	return false
}

// SetLogRateLimitInBytesPerSecond gets a reference to the given int32 and assigns it to the LogRateLimitInBytesPerSecond field.
func (o *Task) SetLogRateLimitInBytesPerSecond(v int32) {
	o.LogRateLimitInBytesPerSecond = &v
}

// GetMemoryInMb returns the MemoryInMb field value if set, zero value otherwise.
func (o *Task) GetMemoryInMb() int32 {
	if o == nil || IsNil(o.MemoryInMb) {
		var ret int32
		return ret
	}
	return *o.MemoryInMb
}

// GetMemoryInMbOk returns a tuple with the MemoryInMb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetMemoryInMbOk() (*int32, bool) {
	if o == nil || IsNil(o.MemoryInMb) {
		return nil, false
	}
	return o.MemoryInMb, true
}

// HasMemoryInMb returns a boolean if a field has been set.
func (o *Task) HasMemoryInMb() bool {
	if o != nil && !IsNil(o.MemoryInMb) {
		return true
	}

	return false
}

// SetMemoryInMb gets a reference to the given int32 and assigns it to the MemoryInMb field.
func (o *Task) SetMemoryInMb(v int32) {
	o.MemoryInMb = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *Task) GetMetadata() V3AppsGuidTasksPostRequestMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret V3AppsGuidTasksPostRequestMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetMetadataOk() (*V3AppsGuidTasksPostRequestMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *Task) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given V3AppsGuidTasksPostRequestMetadata and assigns it to the Metadata field.
func (o *Task) SetMetadata(v V3AppsGuidTasksPostRequestMetadata) {
	o.Metadata = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Task) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Task) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Task) SetName(v string) {
	o.Name = &v
}

// GetRelationships returns the Relationships field value if set, zero value otherwise.
func (o *Task) GetRelationships() RevisionRelationships {
	if o == nil || IsNil(o.Relationships) {
		var ret RevisionRelationships
		return ret
	}
	return *o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetRelationshipsOk() (*RevisionRelationships, bool) {
	if o == nil || IsNil(o.Relationships) {
		return nil, false
	}
	return o.Relationships, true
}

// HasRelationships returns a boolean if a field has been set.
func (o *Task) HasRelationships() bool {
	if o != nil && !IsNil(o.Relationships) {
		return true
	}

	return false
}

// SetRelationships gets a reference to the given RevisionRelationships and assigns it to the Relationships field.
func (o *Task) SetRelationships(v RevisionRelationships) {
	o.Relationships = &v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *Task) GetResult() TaskResult {
	if o == nil || IsNil(o.Result) {
		var ret TaskResult
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetResultOk() (*TaskResult, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *Task) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given TaskResult and assigns it to the Result field.
func (o *Task) SetResult(v TaskResult) {
	o.Result = &v
}

// GetSequenceId returns the SequenceId field value if set, zero value otherwise.
func (o *Task) GetSequenceId() int32 {
	if o == nil || IsNil(o.SequenceId) {
		var ret int32
		return ret
	}
	return *o.SequenceId
}

// GetSequenceIdOk returns a tuple with the SequenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetSequenceIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SequenceId) {
		return nil, false
	}
	return o.SequenceId, true
}

// HasSequenceId returns a boolean if a field has been set.
func (o *Task) HasSequenceId() bool {
	if o != nil && !IsNil(o.SequenceId) {
		return true
	}

	return false
}

// SetSequenceId gets a reference to the given int32 and assigns it to the SequenceId field.
func (o *Task) SetSequenceId(v int32) {
	o.SequenceId = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *Task) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *Task) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *Task) SetState(v string) {
	o.State = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *Task) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Task) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *Task) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o Task) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Task) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Command) {
		toSerialize["command"] = o.Command
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.DiskInMb) {
		toSerialize["disk_in_mb"] = o.DiskInMb
	}
	if !IsNil(o.DropletGuid) {
		toSerialize["droplet_guid"] = o.DropletGuid
	}
	if !IsNil(o.Guid) {
		toSerialize["guid"] = o.Guid
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.LogRateLimitInBytesPerSecond) {
		toSerialize["log_rate_limit_in_bytes_per_second"] = o.LogRateLimitInBytesPerSecond
	}
	if !IsNil(o.MemoryInMb) {
		toSerialize["memory_in_mb"] = o.MemoryInMb
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Relationships) {
		toSerialize["relationships"] = o.Relationships
	}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	if !IsNil(o.SequenceId) {
		toSerialize["sequence_id"] = o.SequenceId
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableTask struct {
	value *Task
	isSet bool
}

func (v NullableTask) Get() *Task {
	return v.value
}

func (v *NullableTask) Set(val *Task) {
	v.value = val
	v.isSet = true
}

func (v NullableTask) IsSet() bool {
	return v.isSet
}

func (v *NullableTask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTask(val *Task) *NullableTask {
	return &NullableTask{value: val, isSet: true}
}

func (v NullableTask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


