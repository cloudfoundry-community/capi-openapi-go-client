/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
	"time"
)

// checks if the ServicePlan type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServicePlan{}

// ServicePlan struct for ServicePlan
type ServicePlan struct {
	Available *bool `json:"available,omitempty"`
	BrokerCatalog *BrokerCatalog `json:"broker_catalog,omitempty"`
	Costs []Cost `json:"costs,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	Description *string `json:"description,omitempty"`
	Free *bool `json:"free,omitempty"`
	Guid *string `json:"guid,omitempty"`
	Links *ServicePlanLinks `json:"links,omitempty"`
	MaintenanceInfo *MaintenanceInfo `json:"maintenance_info,omitempty"`
	Metadata *V3DropletsGuidPatchRequestMetadata `json:"metadata,omitempty"`
	Name *string `json:"name,omitempty"`
	Relationships *ServicePlanRelationships `json:"relationships,omitempty"`
	Schemas *PlanSchemas `json:"schemas,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// Denotes the visibility of the plan; can be public, admin, organization, space
	VisibilityType *string `json:"visibility_type,omitempty"`
}

// NewServicePlan instantiates a new ServicePlan object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServicePlan() *ServicePlan {
	this := ServicePlan{}
	return &this
}

// NewServicePlanWithDefaults instantiates a new ServicePlan object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServicePlanWithDefaults() *ServicePlan {
	this := ServicePlan{}
	return &this
}

// GetAvailable returns the Available field value if set, zero value otherwise.
func (o *ServicePlan) GetAvailable() bool {
	if o == nil || IsNil(o.Available) {
		var ret bool
		return ret
	}
	return *o.Available
}

// GetAvailableOk returns a tuple with the Available field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlan) GetAvailableOk() (*bool, bool) {
	if o == nil || IsNil(o.Available) {
		return nil, false
	}
	return o.Available, true
}

// HasAvailable returns a boolean if a field has been set.
func (o *ServicePlan) HasAvailable() bool {
	if o != nil && !IsNil(o.Available) {
		return true
	}

	return false
}

// SetAvailable gets a reference to the given bool and assigns it to the Available field.
func (o *ServicePlan) SetAvailable(v bool) {
	o.Available = &v
}

// GetBrokerCatalog returns the BrokerCatalog field value if set, zero value otherwise.
func (o *ServicePlan) GetBrokerCatalog() BrokerCatalog {
	if o == nil || IsNil(o.BrokerCatalog) {
		var ret BrokerCatalog
		return ret
	}
	return *o.BrokerCatalog
}

// GetBrokerCatalogOk returns a tuple with the BrokerCatalog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlan) GetBrokerCatalogOk() (*BrokerCatalog, bool) {
	if o == nil || IsNil(o.BrokerCatalog) {
		return nil, false
	}
	return o.BrokerCatalog, true
}

// HasBrokerCatalog returns a boolean if a field has been set.
func (o *ServicePlan) HasBrokerCatalog() bool {
	if o != nil && !IsNil(o.BrokerCatalog) {
		return true
	}

	return false
}

// SetBrokerCatalog gets a reference to the given BrokerCatalog and assigns it to the BrokerCatalog field.
func (o *ServicePlan) SetBrokerCatalog(v BrokerCatalog) {
	o.BrokerCatalog = &v
}

// GetCosts returns the Costs field value if set, zero value otherwise.
func (o *ServicePlan) GetCosts() []Cost {
	if o == nil || IsNil(o.Costs) {
		var ret []Cost
		return ret
	}
	return o.Costs
}

// GetCostsOk returns a tuple with the Costs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlan) GetCostsOk() ([]Cost, bool) {
	if o == nil || IsNil(o.Costs) {
		return nil, false
	}
	return o.Costs, true
}

// HasCosts returns a boolean if a field has been set.
func (o *ServicePlan) HasCosts() bool {
	if o != nil && !IsNil(o.Costs) {
		return true
	}

	return false
}

// SetCosts gets a reference to the given []Cost and assigns it to the Costs field.
func (o *ServicePlan) SetCosts(v []Cost) {
	o.Costs = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ServicePlan) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlan) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ServicePlan) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ServicePlan) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ServicePlan) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlan) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ServicePlan) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ServicePlan) SetDescription(v string) {
	o.Description = &v
}

// GetFree returns the Free field value if set, zero value otherwise.
func (o *ServicePlan) GetFree() bool {
	if o == nil || IsNil(o.Free) {
		var ret bool
		return ret
	}
	return *o.Free
}

// GetFreeOk returns a tuple with the Free field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlan) GetFreeOk() (*bool, bool) {
	if o == nil || IsNil(o.Free) {
		return nil, false
	}
	return o.Free, true
}

// HasFree returns a boolean if a field has been set.
func (o *ServicePlan) HasFree() bool {
	if o != nil && !IsNil(o.Free) {
		return true
	}

	return false
}

// SetFree gets a reference to the given bool and assigns it to the Free field.
func (o *ServicePlan) SetFree(v bool) {
	o.Free = &v
}

// GetGuid returns the Guid field value if set, zero value otherwise.
func (o *ServicePlan) GetGuid() string {
	if o == nil || IsNil(o.Guid) {
		var ret string
		return ret
	}
	return *o.Guid
}

// GetGuidOk returns a tuple with the Guid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlan) GetGuidOk() (*string, bool) {
	if o == nil || IsNil(o.Guid) {
		return nil, false
	}
	return o.Guid, true
}

// HasGuid returns a boolean if a field has been set.
func (o *ServicePlan) HasGuid() bool {
	if o != nil && !IsNil(o.Guid) {
		return true
	}

	return false
}

// SetGuid gets a reference to the given string and assigns it to the Guid field.
func (o *ServicePlan) SetGuid(v string) {
	o.Guid = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ServicePlan) GetLinks() ServicePlanLinks {
	if o == nil || IsNil(o.Links) {
		var ret ServicePlanLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlan) GetLinksOk() (*ServicePlanLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ServicePlan) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given ServicePlanLinks and assigns it to the Links field.
func (o *ServicePlan) SetLinks(v ServicePlanLinks) {
	o.Links = &v
}

// GetMaintenanceInfo returns the MaintenanceInfo field value if set, zero value otherwise.
func (o *ServicePlan) GetMaintenanceInfo() MaintenanceInfo {
	if o == nil || IsNil(o.MaintenanceInfo) {
		var ret MaintenanceInfo
		return ret
	}
	return *o.MaintenanceInfo
}

// GetMaintenanceInfoOk returns a tuple with the MaintenanceInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlan) GetMaintenanceInfoOk() (*MaintenanceInfo, bool) {
	if o == nil || IsNil(o.MaintenanceInfo) {
		return nil, false
	}
	return o.MaintenanceInfo, true
}

// HasMaintenanceInfo returns a boolean if a field has been set.
func (o *ServicePlan) HasMaintenanceInfo() bool {
	if o != nil && !IsNil(o.MaintenanceInfo) {
		return true
	}

	return false
}

// SetMaintenanceInfo gets a reference to the given MaintenanceInfo and assigns it to the MaintenanceInfo field.
func (o *ServicePlan) SetMaintenanceInfo(v MaintenanceInfo) {
	o.MaintenanceInfo = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ServicePlan) GetMetadata() V3DropletsGuidPatchRequestMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret V3DropletsGuidPatchRequestMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlan) GetMetadataOk() (*V3DropletsGuidPatchRequestMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ServicePlan) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given V3DropletsGuidPatchRequestMetadata and assigns it to the Metadata field.
func (o *ServicePlan) SetMetadata(v V3DropletsGuidPatchRequestMetadata) {
	o.Metadata = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ServicePlan) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlan) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ServicePlan) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ServicePlan) SetName(v string) {
	o.Name = &v
}

// GetRelationships returns the Relationships field value if set, zero value otherwise.
func (o *ServicePlan) GetRelationships() ServicePlanRelationships {
	if o == nil || IsNil(o.Relationships) {
		var ret ServicePlanRelationships
		return ret
	}
	return *o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlan) GetRelationshipsOk() (*ServicePlanRelationships, bool) {
	if o == nil || IsNil(o.Relationships) {
		return nil, false
	}
	return o.Relationships, true
}

// HasRelationships returns a boolean if a field has been set.
func (o *ServicePlan) HasRelationships() bool {
	if o != nil && !IsNil(o.Relationships) {
		return true
	}

	return false
}

// SetRelationships gets a reference to the given ServicePlanRelationships and assigns it to the Relationships field.
func (o *ServicePlan) SetRelationships(v ServicePlanRelationships) {
	o.Relationships = &v
}

// GetSchemas returns the Schemas field value if set, zero value otherwise.
func (o *ServicePlan) GetSchemas() PlanSchemas {
	if o == nil || IsNil(o.Schemas) {
		var ret PlanSchemas
		return ret
	}
	return *o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlan) GetSchemasOk() (*PlanSchemas, bool) {
	if o == nil || IsNil(o.Schemas) {
		return nil, false
	}
	return o.Schemas, true
}

// HasSchemas returns a boolean if a field has been set.
func (o *ServicePlan) HasSchemas() bool {
	if o != nil && !IsNil(o.Schemas) {
		return true
	}

	return false
}

// SetSchemas gets a reference to the given PlanSchemas and assigns it to the Schemas field.
func (o *ServicePlan) SetSchemas(v PlanSchemas) {
	o.Schemas = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ServicePlan) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlan) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ServicePlan) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *ServicePlan) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetVisibilityType returns the VisibilityType field value if set, zero value otherwise.
func (o *ServicePlan) GetVisibilityType() string {
	if o == nil || IsNil(o.VisibilityType) {
		var ret string
		return ret
	}
	return *o.VisibilityType
}

// GetVisibilityTypeOk returns a tuple with the VisibilityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlan) GetVisibilityTypeOk() (*string, bool) {
	if o == nil || IsNil(o.VisibilityType) {
		return nil, false
	}
	return o.VisibilityType, true
}

// HasVisibilityType returns a boolean if a field has been set.
func (o *ServicePlan) HasVisibilityType() bool {
	if o != nil && !IsNil(o.VisibilityType) {
		return true
	}

	return false
}

// SetVisibilityType gets a reference to the given string and assigns it to the VisibilityType field.
func (o *ServicePlan) SetVisibilityType(v string) {
	o.VisibilityType = &v
}

func (o ServicePlan) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServicePlan) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Available) {
		toSerialize["available"] = o.Available
	}
	if !IsNil(o.BrokerCatalog) {
		toSerialize["broker_catalog"] = o.BrokerCatalog
	}
	if !IsNil(o.Costs) {
		toSerialize["costs"] = o.Costs
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Free) {
		toSerialize["free"] = o.Free
	}
	if !IsNil(o.Guid) {
		toSerialize["guid"] = o.Guid
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.MaintenanceInfo) {
		toSerialize["maintenance_info"] = o.MaintenanceInfo
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Relationships) {
		toSerialize["relationships"] = o.Relationships
	}
	if !IsNil(o.Schemas) {
		toSerialize["schemas"] = o.Schemas
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.VisibilityType) {
		toSerialize["visibility_type"] = o.VisibilityType
	}
	return toSerialize, nil
}

type NullableServicePlan struct {
	value *ServicePlan
	isSet bool
}

func (v NullableServicePlan) Get() *ServicePlan {
	return v.value
}

func (v *NullableServicePlan) Set(val *ServicePlan) {
	v.value = val
	v.isSet = true
}

func (v NullableServicePlan) IsSet() bool {
	return v.isSet
}

func (v *NullableServicePlan) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServicePlan(val *ServicePlan) *NullableServicePlan {
	return &NullableServicePlan{value: val, isSet: true}
}

func (v NullableServicePlan) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServicePlan) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


