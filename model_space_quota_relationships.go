/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SpaceQuotaRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpaceQuotaRelationships{}

// SpaceQuotaRelationships struct for SpaceQuotaRelationships
type SpaceQuotaRelationships struct {
	Organization SpaceQuotaRelationshipsOrganization `json:"organization"`
	Spaces *SpaceQuotaRelationshipsSpaces `json:"spaces,omitempty"`
}

type _SpaceQuotaRelationships SpaceQuotaRelationships

// NewSpaceQuotaRelationships instantiates a new SpaceQuotaRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpaceQuotaRelationships(organization SpaceQuotaRelationshipsOrganization) *SpaceQuotaRelationships {
	this := SpaceQuotaRelationships{}
	this.Organization = organization
	return &this
}

// NewSpaceQuotaRelationshipsWithDefaults instantiates a new SpaceQuotaRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpaceQuotaRelationshipsWithDefaults() *SpaceQuotaRelationships {
	this := SpaceQuotaRelationships{}
	return &this
}

// GetOrganization returns the Organization field value
func (o *SpaceQuotaRelationships) GetOrganization() SpaceQuotaRelationshipsOrganization {
	if o == nil {
		var ret SpaceQuotaRelationshipsOrganization
		return ret
	}

	return o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value
// and a boolean to check if the value has been set.
func (o *SpaceQuotaRelationships) GetOrganizationOk() (*SpaceQuotaRelationshipsOrganization, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Organization, true
}

// SetOrganization sets field value
func (o *SpaceQuotaRelationships) SetOrganization(v SpaceQuotaRelationshipsOrganization) {
	o.Organization = v
}

// GetSpaces returns the Spaces field value if set, zero value otherwise.
func (o *SpaceQuotaRelationships) GetSpaces() SpaceQuotaRelationshipsSpaces {
	if o == nil || IsNil(o.Spaces) {
		var ret SpaceQuotaRelationshipsSpaces
		return ret
	}
	return *o.Spaces
}

// GetSpacesOk returns a tuple with the Spaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpaceQuotaRelationships) GetSpacesOk() (*SpaceQuotaRelationshipsSpaces, bool) {
	if o == nil || IsNil(o.Spaces) {
		return nil, false
	}
	return o.Spaces, true
}

// HasSpaces returns a boolean if a field has been set.
func (o *SpaceQuotaRelationships) HasSpaces() bool {
	if o != nil && !IsNil(o.Spaces) {
		return true
	}

	return false
}

// SetSpaces gets a reference to the given SpaceQuotaRelationshipsSpaces and assigns it to the Spaces field.
func (o *SpaceQuotaRelationships) SetSpaces(v SpaceQuotaRelationshipsSpaces) {
	o.Spaces = &v
}

func (o SpaceQuotaRelationships) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpaceQuotaRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["organization"] = o.Organization
	if !IsNil(o.Spaces) {
		toSerialize["spaces"] = o.Spaces
	}
	return toSerialize, nil
}

func (o *SpaceQuotaRelationships) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"organization",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSpaceQuotaRelationships := _SpaceQuotaRelationships{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSpaceQuotaRelationships)

	if err != nil {
		return err
	}

	*o = SpaceQuotaRelationships(varSpaceQuotaRelationships)

	return err
}

type NullableSpaceQuotaRelationships struct {
	value *SpaceQuotaRelationships
	isSet bool
}

func (v NullableSpaceQuotaRelationships) Get() *SpaceQuotaRelationships {
	return v.value
}

func (v *NullableSpaceQuotaRelationships) Set(val *SpaceQuotaRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableSpaceQuotaRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableSpaceQuotaRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpaceQuotaRelationships(val *SpaceQuotaRelationships) *NullableSpaceQuotaRelationships {
	return &NullableSpaceQuotaRelationships{value: val, isSet: true}
}

func (v NullableSpaceQuotaRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpaceQuotaRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


