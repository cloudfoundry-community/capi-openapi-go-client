/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the V3RoutesGet200ResponseIncluded type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V3RoutesGet200ResponseIncluded{}

// V3RoutesGet200ResponseIncluded struct for V3RoutesGet200ResponseIncluded
type V3RoutesGet200ResponseIncluded struct {
	Domains []Domain `json:"domains,omitempty"`
	Organizations []Organization `json:"organizations,omitempty"`
	Spaces []Space `json:"spaces,omitempty"`
}

// NewV3RoutesGet200ResponseIncluded instantiates a new V3RoutesGet200ResponseIncluded object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV3RoutesGet200ResponseIncluded() *V3RoutesGet200ResponseIncluded {
	this := V3RoutesGet200ResponseIncluded{}
	return &this
}

// NewV3RoutesGet200ResponseIncludedWithDefaults instantiates a new V3RoutesGet200ResponseIncluded object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV3RoutesGet200ResponseIncludedWithDefaults() *V3RoutesGet200ResponseIncluded {
	this := V3RoutesGet200ResponseIncluded{}
	return &this
}

// GetDomains returns the Domains field value if set, zero value otherwise.
func (o *V3RoutesGet200ResponseIncluded) GetDomains() []Domain {
	if o == nil || IsNil(o.Domains) {
		var ret []Domain
		return ret
	}
	return o.Domains
}

// GetDomainsOk returns a tuple with the Domains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3RoutesGet200ResponseIncluded) GetDomainsOk() ([]Domain, bool) {
	if o == nil || IsNil(o.Domains) {
		return nil, false
	}
	return o.Domains, true
}

// HasDomains returns a boolean if a field has been set.
func (o *V3RoutesGet200ResponseIncluded) HasDomains() bool {
	if o != nil && !IsNil(o.Domains) {
		return true
	}

	return false
}

// SetDomains gets a reference to the given []Domain and assigns it to the Domains field.
func (o *V3RoutesGet200ResponseIncluded) SetDomains(v []Domain) {
	o.Domains = v
}

// GetOrganizations returns the Organizations field value if set, zero value otherwise.
func (o *V3RoutesGet200ResponseIncluded) GetOrganizations() []Organization {
	if o == nil || IsNil(o.Organizations) {
		var ret []Organization
		return ret
	}
	return o.Organizations
}

// GetOrganizationsOk returns a tuple with the Organizations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3RoutesGet200ResponseIncluded) GetOrganizationsOk() ([]Organization, bool) {
	if o == nil || IsNil(o.Organizations) {
		return nil, false
	}
	return o.Organizations, true
}

// HasOrganizations returns a boolean if a field has been set.
func (o *V3RoutesGet200ResponseIncluded) HasOrganizations() bool {
	if o != nil && !IsNil(o.Organizations) {
		return true
	}

	return false
}

// SetOrganizations gets a reference to the given []Organization and assigns it to the Organizations field.
func (o *V3RoutesGet200ResponseIncluded) SetOrganizations(v []Organization) {
	o.Organizations = v
}

// GetSpaces returns the Spaces field value if set, zero value otherwise.
func (o *V3RoutesGet200ResponseIncluded) GetSpaces() []Space {
	if o == nil || IsNil(o.Spaces) {
		var ret []Space
		return ret
	}
	return o.Spaces
}

// GetSpacesOk returns a tuple with the Spaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3RoutesGet200ResponseIncluded) GetSpacesOk() ([]Space, bool) {
	if o == nil || IsNil(o.Spaces) {
		return nil, false
	}
	return o.Spaces, true
}

// HasSpaces returns a boolean if a field has been set.
func (o *V3RoutesGet200ResponseIncluded) HasSpaces() bool {
	if o != nil && !IsNil(o.Spaces) {
		return true
	}

	return false
}

// SetSpaces gets a reference to the given []Space and assigns it to the Spaces field.
func (o *V3RoutesGet200ResponseIncluded) SetSpaces(v []Space) {
	o.Spaces = v
}

func (o V3RoutesGet200ResponseIncluded) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V3RoutesGet200ResponseIncluded) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Domains) {
		toSerialize["domains"] = o.Domains
	}
	if !IsNil(o.Organizations) {
		toSerialize["organizations"] = o.Organizations
	}
	if !IsNil(o.Spaces) {
		toSerialize["spaces"] = o.Spaces
	}
	return toSerialize, nil
}

type NullableV3RoutesGet200ResponseIncluded struct {
	value *V3RoutesGet200ResponseIncluded
	isSet bool
}

func (v NullableV3RoutesGet200ResponseIncluded) Get() *V3RoutesGet200ResponseIncluded {
	return v.value
}

func (v *NullableV3RoutesGet200ResponseIncluded) Set(val *V3RoutesGet200ResponseIncluded) {
	v.value = val
	v.isSet = true
}

func (v NullableV3RoutesGet200ResponseIncluded) IsSet() bool {
	return v.isSet
}

func (v *NullableV3RoutesGet200ResponseIncluded) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV3RoutesGet200ResponseIncluded(val *V3RoutesGet200ResponseIncluded) *NullableV3RoutesGet200ResponseIncluded {
	return &NullableV3RoutesGet200ResponseIncluded{value: val, isSet: true}
}

func (v NullableV3RoutesGet200ResponseIncluded) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV3RoutesGet200ResponseIncluded) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


