/*
Cloud Controller API

API specification for managing environment variable groups in Cloud Controller.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the ServiceBrokerList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceBrokerList{}

// ServiceBrokerList struct for ServiceBrokerList
type ServiceBrokerList struct {
	Pagination *RevisionsListPagination `json:"pagination,omitempty"`
	Resources []ServiceBroker `json:"resources,omitempty"`
}

// NewServiceBrokerList instantiates a new ServiceBrokerList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceBrokerList() *ServiceBrokerList {
	this := ServiceBrokerList{}
	return &this
}

// NewServiceBrokerListWithDefaults instantiates a new ServiceBrokerList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceBrokerListWithDefaults() *ServiceBrokerList {
	this := ServiceBrokerList{}
	return &this
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *ServiceBrokerList) GetPagination() RevisionsListPagination {
	if o == nil || IsNil(o.Pagination) {
		var ret RevisionsListPagination
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceBrokerList) GetPaginationOk() (*RevisionsListPagination, bool) {
	if o == nil || IsNil(o.Pagination) {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *ServiceBrokerList) HasPagination() bool {
	if o != nil && !IsNil(o.Pagination) {
		return true
	}

	return false
}

// SetPagination gets a reference to the given RevisionsListPagination and assigns it to the Pagination field.
func (o *ServiceBrokerList) SetPagination(v RevisionsListPagination) {
	o.Pagination = &v
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *ServiceBrokerList) GetResources() []ServiceBroker {
	if o == nil || IsNil(o.Resources) {
		var ret []ServiceBroker
		return ret
	}
	return o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceBrokerList) GetResourcesOk() ([]ServiceBroker, bool) {
	if o == nil || IsNil(o.Resources) {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *ServiceBrokerList) HasResources() bool {
	if o != nil && !IsNil(o.Resources) {
		return true
	}

	return false
}

// SetResources gets a reference to the given []ServiceBroker and assigns it to the Resources field.
func (o *ServiceBrokerList) SetResources(v []ServiceBroker) {
	o.Resources = v
}

func (o ServiceBrokerList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceBrokerList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Pagination) {
		toSerialize["pagination"] = o.Pagination
	}
	if !IsNil(o.Resources) {
		toSerialize["resources"] = o.Resources
	}
	return toSerialize, nil
}

type NullableServiceBrokerList struct {
	value *ServiceBrokerList
	isSet bool
}

func (v NullableServiceBrokerList) Get() *ServiceBrokerList {
	return v.value
}

func (v *NullableServiceBrokerList) Set(val *ServiceBrokerList) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceBrokerList) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceBrokerList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceBrokerList(val *ServiceBrokerList) *NullableServiceBrokerList {
	return &NullableServiceBrokerList{value: val, isSet: true}
}

func (v NullableServiceBrokerList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceBrokerList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


