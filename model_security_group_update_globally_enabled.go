/*
Cloud Foundry API

OpenAPI specification for the Cloud Foundry API.

API version: 3.195.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the SecurityGroupUpdateGloballyEnabled type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityGroupUpdateGloballyEnabled{}

// SecurityGroupUpdateGloballyEnabled Whether to apply this security group globally
type SecurityGroupUpdateGloballyEnabled struct {
	// Apply globally to all running apps
	Running *bool `json:"running,omitempty"`
	// Apply globally during app staging
	Staging *bool `json:"staging,omitempty"`
}

// NewSecurityGroupUpdateGloballyEnabled instantiates a new SecurityGroupUpdateGloballyEnabled object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityGroupUpdateGloballyEnabled() *SecurityGroupUpdateGloballyEnabled {
	this := SecurityGroupUpdateGloballyEnabled{}
	return &this
}

// NewSecurityGroupUpdateGloballyEnabledWithDefaults instantiates a new SecurityGroupUpdateGloballyEnabled object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityGroupUpdateGloballyEnabledWithDefaults() *SecurityGroupUpdateGloballyEnabled {
	this := SecurityGroupUpdateGloballyEnabled{}
	return &this
}

// GetRunning returns the Running field value if set, zero value otherwise.
func (o *SecurityGroupUpdateGloballyEnabled) GetRunning() bool {
	if o == nil || IsNil(o.Running) {
		var ret bool
		return ret
	}
	return *o.Running
}

// GetRunningOk returns a tuple with the Running field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroupUpdateGloballyEnabled) GetRunningOk() (*bool, bool) {
	if o == nil || IsNil(o.Running) {
		return nil, false
	}
	return o.Running, true
}

// HasRunning returns a boolean if a field has been set.
func (o *SecurityGroupUpdateGloballyEnabled) HasRunning() bool {
	if o != nil && !IsNil(o.Running) {
		return true
	}

	return false
}

// SetRunning gets a reference to the given bool and assigns it to the Running field.
func (o *SecurityGroupUpdateGloballyEnabled) SetRunning(v bool) {
	o.Running = &v
}

// GetStaging returns the Staging field value if set, zero value otherwise.
func (o *SecurityGroupUpdateGloballyEnabled) GetStaging() bool {
	if o == nil || IsNil(o.Staging) {
		var ret bool
		return ret
	}
	return *o.Staging
}

// GetStagingOk returns a tuple with the Staging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroupUpdateGloballyEnabled) GetStagingOk() (*bool, bool) {
	if o == nil || IsNil(o.Staging) {
		return nil, false
	}
	return o.Staging, true
}

// HasStaging returns a boolean if a field has been set.
func (o *SecurityGroupUpdateGloballyEnabled) HasStaging() bool {
	if o != nil && !IsNil(o.Staging) {
		return true
	}

	return false
}

// SetStaging gets a reference to the given bool and assigns it to the Staging field.
func (o *SecurityGroupUpdateGloballyEnabled) SetStaging(v bool) {
	o.Staging = &v
}

func (o SecurityGroupUpdateGloballyEnabled) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecurityGroupUpdateGloballyEnabled) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Running) {
		toSerialize["running"] = o.Running
	}
	if !IsNil(o.Staging) {
		toSerialize["staging"] = o.Staging
	}
	return toSerialize, nil
}

type NullableSecurityGroupUpdateGloballyEnabled struct {
	value *SecurityGroupUpdateGloballyEnabled
	isSet bool
}

func (v NullableSecurityGroupUpdateGloballyEnabled) Get() *SecurityGroupUpdateGloballyEnabled {
	return v.value
}

func (v *NullableSecurityGroupUpdateGloballyEnabled) Set(val *SecurityGroupUpdateGloballyEnabled) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityGroupUpdateGloballyEnabled) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityGroupUpdateGloballyEnabled) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityGroupUpdateGloballyEnabled(val *SecurityGroupUpdateGloballyEnabled) *NullableSecurityGroupUpdateGloballyEnabled {
	return &NullableSecurityGroupUpdateGloballyEnabled{value: val, isSet: true}
}

func (v NullableSecurityGroupUpdateGloballyEnabled) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityGroupUpdateGloballyEnabled) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


