/*
Cloud Controller API

API specification for managing environment variable groups in Cloud Controller.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package capiclient

import (
	"encoding/json"
)

// checks if the SecurityGroupList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityGroupList{}

// SecurityGroupList struct for SecurityGroupList
type SecurityGroupList struct {
	Pagination *RevisionsListPagination `json:"pagination,omitempty"`
	Resources []SecurityGroup `json:"resources,omitempty"`
}

// NewSecurityGroupList instantiates a new SecurityGroupList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityGroupList() *SecurityGroupList {
	this := SecurityGroupList{}
	return &this
}

// NewSecurityGroupListWithDefaults instantiates a new SecurityGroupList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityGroupListWithDefaults() *SecurityGroupList {
	this := SecurityGroupList{}
	return &this
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *SecurityGroupList) GetPagination() RevisionsListPagination {
	if o == nil || IsNil(o.Pagination) {
		var ret RevisionsListPagination
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroupList) GetPaginationOk() (*RevisionsListPagination, bool) {
	if o == nil || IsNil(o.Pagination) {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *SecurityGroupList) HasPagination() bool {
	if o != nil && !IsNil(o.Pagination) {
		return true
	}

	return false
}

// SetPagination gets a reference to the given RevisionsListPagination and assigns it to the Pagination field.
func (o *SecurityGroupList) SetPagination(v RevisionsListPagination) {
	o.Pagination = &v
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *SecurityGroupList) GetResources() []SecurityGroup {
	if o == nil || IsNil(o.Resources) {
		var ret []SecurityGroup
		return ret
	}
	return o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroupList) GetResourcesOk() ([]SecurityGroup, bool) {
	if o == nil || IsNil(o.Resources) {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *SecurityGroupList) HasResources() bool {
	if o != nil && !IsNil(o.Resources) {
		return true
	}

	return false
}

// SetResources gets a reference to the given []SecurityGroup and assigns it to the Resources field.
func (o *SecurityGroupList) SetResources(v []SecurityGroup) {
	o.Resources = v
}

func (o SecurityGroupList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecurityGroupList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Pagination) {
		toSerialize["pagination"] = o.Pagination
	}
	if !IsNil(o.Resources) {
		toSerialize["resources"] = o.Resources
	}
	return toSerialize, nil
}

type NullableSecurityGroupList struct {
	value *SecurityGroupList
	isSet bool
}

func (v NullableSecurityGroupList) Get() *SecurityGroupList {
	return v.value
}

func (v *NullableSecurityGroupList) Set(val *SecurityGroupList) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityGroupList) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityGroupList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityGroupList(val *SecurityGroupList) *NullableSecurityGroupList {
	return &NullableSecurityGroupList{value: val, isSet: true}
}

func (v NullableSecurityGroupList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityGroupList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


